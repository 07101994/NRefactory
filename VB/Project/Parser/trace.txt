Graph nodes:
----------------------------------------------------
   n type name          next  down   sub   pos  line
                               val  code
----------------------------------------------------
   0 eps                   0                       0
   1 nt   EndOfStmt       -2                     270
   2 iter                  6     0     1         270
   3 nt   OptionStmt       5                     271
   4 nt   EndOfStmt       -5                     271
   5 iter                 -6     0     4         271
   6 iter                 10     0     3         271
   7 nt   ImportsStmt      9                     272
   8 nt   EndOfStmt       -9                     272
   9 iter                -10     0     8         272
  10 iter                 15     0     7         272
  11 rslv                 12   273
  12 nt   GlobalAttrib    14                     273
  13 nt   EndOfStmt      -14                     273
  14 iter                -15     0    13         273
  15 iter                 19     0    11         273
  16 nt   NamespaceMem    18                     274
  17 nt   EndOfStmt      -18                     274
  18 iter                -19     0    17         274
  19 iter                  0     0    16         274
  20 t    "Option"        21                     278
  21 sem                  30               3455    0
  22 t    "Explicit"      24                     280
  23 nt   OptionValue    -25               3522  280
  24 opt                  25     0    23         280
  25 sem                 -45               3539    0
  26 t    "Strict"        28                     283
  27 nt   OptionValue    -29               3629  283
  28 opt                  29     0    27         283
  29 sem                 -45               3646    0
  30 alt                  45    31    22         280
  31 alt                 -45    39    26         283
  32 t    "Compare"       37                     286
  33 t    "Binary"        34                     286
  34 sem                 -45               3735    0
  35 t    "Text"          36                     287
  36 sem                 -45               3818    0
  37 alt                 -45    38    33         286
  38 alt                 -45     0    35         287
  39 alt                 -45    44    32         286
  40 t    "Infer"         42                     290
  41 nt   OptionValue    -43               3919  290
  42 opt                  43     0    41         290
  43 sem                 -45               3936    0
  44 alt                 -45     0    40         290
  45 nt   EndOfStmt       46                     293
  46 sem                   0               4016    0
  47 t    "On"            48                     305
  48 sem                  -0               4187    0
  49 t    "Off"           50                     307
  50 sem                  -0               4218    0
  51 alt                   0    52    47         305
  52 alt                  -0     0    49         307
  53 sync                 56                     312
  54 t    EOL             -0                     312
  55 t    ":"             -0                     312
  56 alt                   0    57    54         312
  57 alt                  -0     0    55         312
  58 t    "Imports"       59                     318
  59 sem                  60               4367    0
  60 nt   ImportClause    61               4431  323
  61 sem                  65               4441    0
  62 t    ","             63                     325
  63 nt   ImportClause    64               4502  325
  64 sem                 -65               4512    0
  65 iter                 66     0    62         324
  66 nt   EndOfStmt       67                     327
  67 sem                   0               4573    0
  68 nt   Qualident       71               4910  343
  69 t    "="             70                     344
  70 nt   TypeName       -72               4943  344
  71 opt                  72     0    69         344
  72 sem                  -0               4972    0
  73 sem                  74               5174    0
  74 t    XmlOpenTag      75                     355
  75 nt   Identifier      76                     355
  76 sem                  77               5227    0
  77 t    "="             78                     355
  78 t    LiteralStrin    79                     355
  79 sem                  80               5267    0
  80 t    XmlCloseTag     -0                     355
  81 alt                   0    82    68         343
  82 alt                  -0     0    73           0
  83 t    "Namespace"     84                     367
  84 sem                  85               5569    0
  85 nt   Qualident       86               5618  371
  86 sem                  87               5641    0
  87 nt   EndOfStmt       88                     378
  88 nt   NamespaceBod    89                     379
  89 sem                  -0               5807    0
  90 nt   AttributeSec    91               5887  385
  91 sem                 -92               5903    0
  92 iter                 94     0    90         385
  93 nt   TypeModifier   -94               5950  386
  94 iter                 95     0    93         386
  95 nt   NonModuleDec    -0               5976  386
  96 alt                   0    97    83         367
  97 alt                  -0     0    92         385
  98 rslv                 99   396
  99 t    "("            100                     397
 100 t    "Of"           101                     397
 101 nt   TypeParamete   102               6212  397
 102 sem                 106               6236    0
 103 t    ","            104                     402
 104 nt   TypeParamete   105               6316  402
 105 sem                -106               6342    0
 106 iter                107     0   103         401
 107 t    ")"             -0                     407
 108 opt                   0     0    98         395
 109 t    "In"           110                     416
 110 sem                -116               6600    0
 111 t    "Out"          112                     416
 112 sem                -116               6657    0
 113 alt                -116   114   109         416
 114 alt                -116     0   111         416
 115 opt                 116     0   113         416
 116 nt   Identifier     117                     416
 117 sem                 119               6715    0
 118 nt   TypeParamete  -120               6827  417
 119 opt                 120     0   118         417
 120 sem                   0               6850    0
 121 t    "As"           132                     433
 122 t    "{"            123                     435
 123 nt   TypeParamete   124               7127  436
 124 sem                 128               7146    0
 125 t    ","            126                     438
 126 nt   TypeParamete   127               7250  439
 127 sem                -128               7269    0
 128 iter                129     0   125         437
 129 t    "}"             -0                     441
 130 nt   TypeParamete   131               7373  442
 131 sem                  -0               7392    0
 132 alt                   0   133   122         435
 133 alt                  -0     0   130         442
 134 t    "Class"        135                     449
 135 sem                  -0               7601    0
 136 t    "Structure"    137                     450
 137 sem                  -0               7667    0
 138 alt                   0   139   134         449
 139 alt                  -0   142   136         450
 140 t    "New"          141                     451
 141 sem                  -0               7729    0
 142 alt                  -0   144   140         451
 143 nt   TypeName        -0               7787  452
 144 alt                  -0     0   143         452
 145 sem                 146               8000    0
 146 t    "Class"        147                     463
 147 sem                 148               8068    0
 148 nt   Identifier     149                     471
 149 sem                 150               8317    0
 150 nt   TypeParamete   151               8363  472
 151 nt   EndOfStmt      152                     473
 152 sem                 155               8399    0
 153 nt   ClassBaseTyp   154               8460  475
 154 sem                -158               8476    0
 155 opt                 158     0   153         475
 156 nt   TypeImplemen   157               8552  476
 157 sem                -158               8575    0
 158 iter                159     0   156         476
 159 nt   ClassBody      160               8636  477
 160 t    "End"          161                     478
 161 t    "Class"        162                     478
 162 sem                 163               8664    0
 163 nt   EndOfStmt      164                     479
 164 sem                  -0               8724    0
 165 t    "Module"       166                     483
 166 sem                 167               8764    0
 167 nt   Identifier     168                     492
 168 sem                 169               9045    0
 169 nt   EndOfStmt      170                     493
 170 sem                 171               9087    0
 171 nt   ModuleBody     172               9143  495
 172 sem                  -0               9160    0
 173 alt                   0   174   145           0
 174 alt                  -0   187   165         483
 175 t    "Structure"    176                     499
 176 sem                 177               9203    0
 177 nt   Identifier     178                     508
 178 sem                 179               9487    0
 179 nt   TypeParamete   180               9533  509
 180 nt   EndOfStmt      181                     510
 181 sem                 184               9569    0
 182 nt   TypeImplemen   183               9637  512
 183 sem                -184               9660    0
 184 iter                185     0   182         512
 185 nt   StructureBod   186               9724  513
 186 sem                  -0               9741    0
 187 alt                  -0   200   175         499
 188 t    "Enum"         189                     518
 189 sem                 190               9791    0
 190 nt   Identifier     191                     528
 191 sem                 195              10073    0
 192 t    "As"           193                     529
 193 nt   NonArrayType   194              10125  529
 194 sem                -196              10148    0
 195 opt                 196     0   192         529
 196 nt   EndOfStmt      197                     530
 197 sem                 198              10216    0
 198 nt   EnumBody       199              10270  532
 199 sem                  -0              10287    0
 200 alt                  -0   213   188         518
 201 t    "Interface"    202                     537
 202 sem                 203              10342    0
 203 nt   Identifier     204                     546
 204 sem                 205              10628    0
 205 nt   TypeParamete   206              10674  547
 206 nt   EndOfStmt      207                     548
 207 sem                 210              10710    0
 208 nt   InterfaceBas   209              10771  550
 209 sem                -210              10794    0
 210 iter                211     0   208         550
 211 nt   InterfaceBod   212              10859  551
 212 sem                  -0              10876    0
 213 alt                  -0   246   201         537
 214 t    "Delegate"     215                     556
 215 sem                 241              10929    0
 216 t    "Sub"          217                     565
 217 nt   Identifier     218                     565
 218 sem                 219              11310    0
 219 nt   TypeParamete   225              11362  566
 220 t    "("            222                     567
 221 nt   FormalParame  -223              11418  567
 222 opt                 223     0   221         567
 223 t    ")"            224                     567
 224 sem                -243              11430    0
 225 opt                -243     0   220         567
 226 t    "Function"     227                     569
 227 nt   Identifier     228                     569
 228 sem                 229              11498    0
 229 nt   TypeParamete   235              11550  570
 230 t    "("            232                     571
 231 nt   FormalParame  -233              11606  571
 232 opt                 233     0   231         571
 233 t    ")"            234                     571
 234 sem                -240              11618    0
 235 opt                 240     0   230         571
 236 t    "As"           237                     572
 237 sem                 238              11666    0
 238 nt   TypeName       239              11698  572
 239 sem                -243              11711    0
 240 opt                -243     0   236         572
 241 alt                 243   242   216         565
 242 alt                -243     0   226         569
 243 sem                 244              11759    0
 244 nt   EndOfStmt      245                     575
 245 sem                  -0              11825    0
 246 alt                  -0     0   214         556
 247 nt   EndOfStmt     -248                     582
 248 iter                252     0   247         582
 249 nt   NamespaceMem   251                     584
 250 nt   EndOfStmt     -251                     585
 251 iter               -252     0   250         585
 252 iter                253     0   249         583
 253 t    "End"          254                     587
 254 t    "Namespace"    255                     587
 255 nt   EndOfStmt        0                     588
 256 nt   EndOfStmt     -257                     593
 257 iter                267     0   256         593
 258 sem                 261              12191    0
 259 nt   AttributeSec   260              12326  598
 260 sem                -261              12342    0
 261 iter                263     0   259         598
 262 nt   MemberModifi  -263              12392  599
 263 iter                264     0   262         599
 264 nt   ClassMemberD   266              12416  600
 265 nt   EndOfStmt     -266                     601
 266 iter               -267     0   265         601
 267 iter                  0     0   258         594
 268 nt   EndOfStmt     -269                     607
 269 iter                279     0   268         607
 270 sem                 273              12632    0
 271 nt   AttributeSec   272              12767  612
 272 sem                -273              12783    0
 273 iter                275     0   271         612
 274 nt   MemberModifi  -275              12833  613
 275 iter                276     0   274         613
 276 nt   StructureMem   278              12861  614
 277 nt   EndOfStmt     -278                     615
 278 iter               -279     0   277         615
 279 iter                280     0   270         608
 280 t    "End"          281                     617
 281 t    "Structure"    282                     617
 282 sem                 283              12952    0
 283 nt   EndOfStmt        0                     618
 284 nt   EndOfStmt     -285                     624
 285 iter                295     0   284         624
 286 sem                 289              13162    0
 287 nt   AttributeSec   288              13297  629
 288 sem                -289              13313    0
 289 iter                291     0   287         629
 290 nt   MemberModifi  -291              13363  630
 291 iter                292     0   290         630
 292 nt   ClassMemberD   294              13387  631
 293 nt   EndOfStmt     -294                     632
 294 iter               -295     0   293         632
 295 iter                296     0   286         625
 296 t    "End"          297                     634
 297 t    "Module"       298                     634
 298 sem                 299              13475    0
 299 nt   EndOfStmt        0                     635
 300 nt   EndOfStmt     -301                     640
 301 iter                306     0   300         640
 302 nt   EnumMemberDe   303              13677  642
 303 sem                 305              13694    0
 304 nt   EndOfStmt     -305                     646
 305 iter               -306     0   304         646
 306 iter                307     0   302         641
 307 t    "End"          308                     648
 308 t    "Enum"         309                     648
 309 sem                 310              13784    0
 310 nt   EndOfStmt        0                     649
 311 nt   EndOfStmt     -312                     653
 312 iter                316     0   311         653
 313 nt   InterfaceMem   315                     655
 314 nt   EndOfStmt     -315                     656
 315 iter               -316     0   314         656
 316 iter                317     0   313         654
 317 t    "End"          318                     658
 318 t    "Interface"    319                     658
 319 sem                 320              14044    0
 320 nt   EndOfStmt        0                     659
 321 nt   AttributeSec   322              14625  674
 322 sem                -323              14643    0
 323 iter                325     0   321         674
 324 nt   MemberModifi  -325              14818  677
 325 iter                352     0   324         677
 326 t    "Event"        327                     679
 327 sem                 328              14850    0
 328 nt   Identifier     329                     684
 329 sem                 334              14954    0
 330 t    "("            332                     685
 331 nt   FormalParame  -333              15002  685
 332 opt                 333     0   331         685
 333 t    ")"           -337                     685
 334 opt                 337     0   330         685
 335 t    "As"           336                     686
 336 nt   TypeName      -338              15032  686
 337 opt                 338     0   335         686
 338 nt   EndOfStmt      339                     687
 339 sem                  -0              15067    0
 340 t    "Sub"          341                     697
 341 sem                 342              15342    0
 342 nt   Identifier     343                     702
 343 sem                 344              15448    0
 344 nt   TypeParamete   349              15486  703
 345 t    "("            347                     704
 346 nt   FormalParame  -348              15528  704
 347 opt                 348     0   346         704
 348 t    ")"           -350                     704
 349 opt                 350     0   345         704
 350 nt   EndOfStmt      351                     705
 351 sem                  -0              15562    0
 352 alt                  -0   353   326         679
 353 alt                  -0   371   340         697
 354 t    "Function"     355                     720
 355 sem                 356              15928    0
 356 nt   Identifier     357                     725
 357 sem                 358              16033    0
 358 nt   TypeParamete   363              16071  726
 359 t    "("            361                     727
 360 nt   FormalParame  -362              16113  727
 361 opt                 362     0   360         727
 362 t    ")"           -368                     727
 363 opt                 368     0   359         727
 364 t    "As"           366                     728
 365 nt   AttributeSec  -366              16153  728
 366 iter                367     0   365         728
 367 nt   TypeName      -369              16196  728
 368 opt                 369     0   364         728
 369 sem                 370              16218    0
 370 nt   EndOfStmt       -0                     746
 371 alt                  -0   387   354         720
 372 t    "Property"     373                     748
 373 sem                 374              16800    0
 374 nt   Identifier     375                     753
 375 sem                 380              16908    0
 376 t    "("            378                     754
 377 nt   FormalParame  -379              16957  754
 378 opt                 379     0   377         754
 379 t    ")"           -383                     754
 380 opt                 383     0   376         754
 381 t    "As"           382                     755
 382 nt   TypeName      -384              16987  755
 383 opt                 384     0   381         755
 384 sem                 385              17009    0
 385 nt   EndOfStmt      386                     761
 386 sem                  -0              17117    0
 387 alt                  -0     0   372         748
 388 nt   NonModuleDec    -0              17387  771
 389 alt                   0   390   323         674
 390 alt                  -0     0   388         771
 391 nt   AttributeSec   392              17663  781
 392 sem                -393              17679    0
 393 iter                394     0   391         781
 394 nt   Identifier     395                     782
 395 sem                 399              17730    0
 396 t    "="            397                     789
 397 nt   Expr           398              17914  789
 398 sem                -400              17927    0
 399 opt                 400     0   396         789
 400 sem                 401              17965    0
 401 nt   EndOfStmt        0                     791
 402 nt   StructureMem     0              18132  795
 403 t    "Inherits"     404                     802
 404 nt   TypeName       405              18247  803
 405 nt   EndOfStmt        0                     804
 406 nt   NonModuleDec    -0              18700  817
 407 t    "Sub"          408                     819
 408 sem                 456              18746    0
 409 sem                 410              18797    0
 410 nt   Identifier     411                     829
 411 sem                 412              18990    0
 412 nt   TypeParamete   417              19065  834
 413 t    "("            415                     835
 414 nt   FormalParame  -416              19107  835
 415 opt                 416     0   414         835
 416 t    ")"           -422                     835
 417 opt                 422     0   413         835
 418 nt   ImplementsCl  -423              19151  838
 419 nt   HandlesClaus  -423              19199  840
 420 alt                -423   421   418         838
 421 alt                -423     0   419         840
 422 opt                 423     0   420         836
 423 sem                 437              19235    0
 424 rslv                425   846
 425 nt   EndOfStmt      426                     847
 426 sem                  -0              19375    0
 427 t    EOL            428                     860
 428 sem                 429              19839    0
 429 sem                 430              20290    0
 430 nt   Block          431              20329  874
 431 t    "End"          432                     875
 432 t    "Sub"          433                     875
 433 sem                 434              20363    0
 434 sem                 435              20502    0
 435 sem                 436              20560    0
 436 nt   EndOfStmt       -0                     884
 437 alt                  -0   438   424         846
 438 alt                  -0     0   427         860
 439 t    "New"          444                     887
 440 t    "("            442                     887
 441 nt   FormalParame  -443              20686  887
 442 opt                 443     0   441         887
 443 t    ")"           -445                     887
 444 opt                 445     0   440         887
 445 sem                 446              20703    0
 446 sem                 447              20745    0
 447 t    EOL            448                     890
 448 sem                 449              20814    0
 449 nt   Block          450              20852  893
 450 t    "End"          451                     894
 451 t    "Sub"          452                     894
 452 sem                 453              20884    0
 453 sem                 454              21017    0
 454 nt   EndOfStmt      455                     902
 455 sem                  -0              21081    0
 456 alt                  -0   457   409           0
 457 alt                  -0     0   439         887
 458 alt                   0   459   406         817
 459 alt                  -0   495   407         819
 460 t    "Function"     461                     914
 461 sem                 462              21420    0
 462 nt   Identifier     463                     923
 463 sem                 464              21726    0
 464 nt   TypeParamete   469              21763  924
 465 t    "("            467                     925
 466 nt   FormalParame  -468              21804  925
 467 opt                 468     0   466         925
 468 t    ")"           -475                     925
 469 opt                 475     0   465         925
 470 t    "As"           473                     926
 471 nt   AttributeSec   472              21848  927
 472 sem                -473              21894    0
 473 iter                474     0   471         926
 474 nt   TypeName      -476              22082  935
 475 opt                 476     0   470         926
 476 sem                 481              22102    0
 477 nt   ImplementsCl  -482              22214  943
 478 nt   HandlesClaus  -482              22260  945
 479 alt                -482   480   477         943
 480 alt                -482     0   478         945
 481 opt                 482     0   479         941
 482 sem                 493              22293    0
 483 rslv                484   951
 484 nt   EndOfStmt      485                     952
 485 sem                  -0              22429    0
 486 t    EOL            487                     967
 487 sem                 488              22877    0
 488 nt   Block          489              23343  982
 489 t    "End"          490                     983
 490 t    "Function"     491                     983
 491 sem                 492              23383    0
 492 nt   EndOfStmt       -0                     992
 493 alt                  -0   494   483         951
 494 alt                  -0     0   486         967
 495 alt                  -0   539   460         914
 496 t    "Declare"      497                     996
 497 sem                 499              23757    0
 498 nt   Charset       -537              23993 1005
 499 opt                 537     0   498        1005
 500 t    "Sub"          501                    1007
 501 nt   Identifier     502                    1008
 502 sem                 503              24050    0
 503 t    "Lib"          504                    1009
 504 t    LiteralStrin   505                    1009
 505 sem                 509              24095    0
 506 t    "Alias"        507                    1010
 507 t    LiteralStrin   508                    1010
 508 sem                -514              24164    0
 509 opt                 514     0   506        1010
 510 t    "("            512                    1011
 511 nt   FormalParame  -513              24234 1011
 512 opt                 513     0   511        1011
 513 t    ")"           -515                    1011
 514 opt                 515     0   510        1011
 515 nt   EndOfStmt      516                    1012
 516 sem                  -0              24271    0
 517 t    "Function"     518                    1020
 518 nt   Identifier     519                    1021
 519 sem                 520              24622    0
 520 t    "Lib"          521                    1022
 521 t    LiteralStrin   522                    1022
 522 sem                 526              24667    0
 523 t    "Alias"        524                    1023
 524 t    LiteralStrin   525                    1023
 525 sem                -531              24736    0
 526 opt                 531     0   523        1023
 527 t    "("            529                    1024
 528 nt   FormalParame  -530              24806 1024
 529 opt                 530     0   528        1024
 530 t    ")"           -534                    1024
 531 opt                 534     0   527        1024
 532 t    "As"           533                    1025
 533 nt   TypeName      -535              24836 1025
 534 opt                 535     0   532        1025
 535 nt   EndOfStmt      536                    1026
 536 sem                  -0              24874    0
 537 alt                  -0   538   500        1007
 538 alt                  -0     0   517        1020
 539 alt                  -0   557   496         996
 540 t    "Event"        541                    1036
 541 sem                 542              25221    0
 542 nt   Identifier     543                    1044
 543 sem                 551              25433    0
 544 t    "As"           545                    1046
 545 nt   TypeName      -554              25470 1046
 546 t    "("            548                    1048
 547 nt   FormalParame  -549              25516 1048
 548 opt                 549     0   547        1048
 549 t    ")"           -554                    1048
 550 opt                -554     0   546        1048
 551 alt                 554   552   544        1046
 552 alt                -554     0   550        1048
 553 nt   ImplementsCl  -555              25552 1050
 554 opt                 555     0   553        1050
 555 sem                 556              25584    0
 556 nt   EndOfStmt       -0                    1060
 557 alt                  -0   568   540        1036
 558 sem                 559              25942    0
 559 nt   IdentifierFo   560                    1066
 560 sem                 561              26086    0
 561 sem                 562              26115    0
 562 nt   VariableDecl   565              26218 1069
 563 t    ","            564                    1070
 564 nt   VariableDecl  -565              26272 1070
 565 iter                566     0   563        1070
 566 nt   EndOfStmt      567                    1071
 567 sem                  -0              26315    0
 568 alt                  -0   580   558           0
 569 sem                 570              26424    0
 570 t    "Const"        571                    1079
 571 sem                 572              26468    0
 572 sem                 573              26516    0
 573 nt   ConstantDecl   576              26760 1085
 574 t    ","            575                    1086
 575 nt   ConstantDecl  -576              26808 1086
 576 iter                577     0   574        1086
 577 sem                 578              26839    0
 578 nt   EndOfStmt      579                    1091
 579 sem                  -0              26929    0
 580 alt                  -0   617   569           0
 581 t    "Property"     582                    1097
 582 sem                 583              27017    0
 583 nt   Identifier     584                    1105
 584 sem                 589              27253    0
 585 t    "("            587                    1106
 586 nt   FormalParame  -588              27315 1106
 587 opt                 588     0   586        1106
 588 t    ")"           -600                    1106
 589 opt                 600     0   585        1106
 590 t    "As"           593                    1108
 591 nt   AttributeSec   592              27362 1109
 592 sem                -593              27408    0
 593 iter                598     0   591        1108
 594 rslv                595  1118
 595 nt   ObjectCreate   596              27639 1118
 596 sem                -603              27668    0
 597 nt   TypeName      -603              27900 1127
 598 alt                -603   599   594        1118
 599 alt                -603     0   597        1127
 600 opt                 603     0   590        1107
 601 t    "="            602                    1130
 602 nt   Expr          -605              27932 1130
 603 opt                 605     0   601        1130
 604 nt   ImplementsCl  -606              27972 1131
 605 opt                 606     0   604        1131
 606 nt   EndOfStmt      615                    1132
 607 rslv                608  1135
 608 sem                  -0              28114    0
 609 sem                 610              28532    0
 610 nt   AccessorDecl   611              28967 1159
 611 t    "End"          612                    1160
 612 t    "Property"     613                    1160
 613 nt   EndOfStmt      614                    1161
 614 sem                  -0              29041    0
 615 alt                  -0   616   607        1135
 616 alt                  -0     0   609           0
 617 alt                  -0   636   581        1097
 618 t    "Custom"       619                    1170
 619 sem                 620              29216    0
 620 t    "Event"        621                    1170
 621 sem                 622              29267    0
 622 nt   Identifier     623                    1179
 623 sem                 624              29607    0
 624 t    "As"           625                    1180
 625 nt   TypeName       627              29658 1180
 626 nt   ImplementsCl  -628              29689 1181
 627 opt                 628     0   626        1181
 628 nt   EndOfStmt      631                    1182
 629 nt   EventAccesso   630              29757 1184
 630 sem                -631              29797    0
 631 iter                632     0   629        1183
 632 t    "End"          633                    1200
 633 t    "Event"        634                    1200
 634 nt   EndOfStmt      635                    1200
 635 sem                  -0              30286    0
 636 alt                  -0   670   618        1170
 637 sem                 644              31045    0
 638 t    "Widening"     639                    1229
 639 sem                -645              31122    0
 640 t    "Narrowing"    641                    1230
 641 sem                -645              31189    0
 642 alt                -645   643   638        1229
 643 alt                -645     0   640        1230
 644 opt                 645     0   642        1229
 645 t    "Operator"     646                    1231
 646 sem                 647              31258    0
 647 nt   Overloadable   648              31679 1242
 648 t    "("            649                    1243
 649 nt   FormalParame   650              31721 1244
 650 sem                 654              31737    0
 651 t    ","            652                    1247
 652 nt   FormalParame   653              31809 1247
 653 sem                -655              31826    0
 654 opt                 655     0   651        1246
 655 t    ")"            656                    1250
 656 sem                 663              31886    0
 657 t    "As"           660                    1252
 658 nt   AttributeSec   659              31950 1252
 659 sem                -660              31970    0
 660 iter                661     0   658        1252
 661 nt   TypeName       662              32091 1257
 662 sem                -664              32110    0
 663 opt                 664     0   657        1252
 664 t    EOL            665                    1258
 665 nt   Block          666              32153 1259
 666 t    "End"          667                    1259
 667 t    "Operator"     668                    1259
 668 nt   EndOfStmt      669                    1259
 669 sem                  -0              32198    0
 670 alt                  -0     0   637           0
 671 t    "+"            672                    1281
 672 sem                  -0              32869    0
 673 t    "-"            674                    1283
 674 sem                  -0              32932    0
 675 alt                   0   676   671        1281
 676 alt                  -0   679   673        1283
 677 t    "*"            678                    1285
 678 sem                  -0              33000    0
 679 alt                  -0   682   677        1285
 680 t    "/"            681                    1287
 681 sem                  -0              33069    0
 682 alt                  -0   685   680        1287
 683 t    "\\"           684                    1289
 684 sem                  -0              33136    0
 685 alt                  -0   688   683        1289
 686 t    "&"            687                    1291
 687 sem                  -0              33210    0
 688 alt                  -0   691   686        1291
 689 t    "Like"         690                    1293
 690 sem                  -0              33279    0
 691 alt                  -0   694   689        1293
 692 t    "Mod"          693                    1295
 693 sem                  -0              33345    0
 694 alt                  -0   697   692        1295
 695 t    "And"          696                    1297
 696 sem                  -0              33414    0
 697 alt                  -0   700   695        1297
 698 t    "Or"           699                    1299
 699 sem                  -0              33484    0
 700 alt                  -0   703   698        1299
 701 t    "Xor"          702                    1301
 702 sem                  -0              33554    0
 703 alt                  -0   706   701        1301
 704 t    "^"            705                    1303
 705 sem                  -0              33625    0
 706 alt                  -0   709   704        1303
 707 t    "<<"           708                    1305
 708 sem                  -0              33690    0
 709 alt                  -0   712   707        1305
 710 t    ">>"           711                    1307
 711 sem                  -0              33759    0
 712 alt                  -0   715   710        1307
 713 t    "="            714                    1309
 714 sem                  -0              33829    0
 715 alt                  -0   718   713        1309
 716 t    "<>"           717                    1311
 717 sem                  -0              33897    0
 718 alt                  -0   721   716        1311
 719 t    "<"            720                    1313
 720 sem                  -0              33967    0
 721 alt                  -0   724   719        1313
 722 t    "<="           723                    1315
 723 sem                  -0              34035    0
 724 alt                  -0   727   722        1315
 725 t    ">"            726                    1317
 726 sem                  -0              34110    0
 727 alt                  -0   730   725        1317
 728 t    ">="           729                    1319
 729 sem                  -0              34181    0
 730 alt                  -0   733   728        1319
 731 t    "CType"        732                    1321
 732 sem                  -0              34262    0
 733 alt                  -0   736   731        1321
 734 nt   Identifier     735                    1323
 735 sem                  -0              34337    0
 736 alt                  -0     0   734        1323
 737 nt   AttributeSec   738              35127 1344
 738 sem                -739              35143    0
 739 iter                764     0   737        1344
 740 t    "AddHandler"   745                    1346
 741 t    "("            743                    1346
 742 nt   FormalParame  -744              35222 1346
 743 opt                 744     0   742        1346
 744 t    ")"           -746                    1346
 745 opt                 746     0   741        1346
 746 t    EOL            747                    1346
 747 nt   Block          748              35247 1347
 748 t    "End"          749                    1347
 749 t    "AddHandler"   750                    1347
 750 nt   EndOfStmt      751                    1347
 751 sem                  -0              35298    0
 752 t    "RemoveHandl   757                    1354
 753 t    "("            755                    1354
 754 nt   FormalParame  -756              35523 1354
 755 opt                 756     0   754        1354
 756 t    ")"           -758                    1354
 757 opt                 758     0   753        1354
 758 t    EOL            759                    1354
 759 nt   Block          760              35548 1355
 760 t    "End"          761                    1355
 761 t    "RemoveHandl   762                    1355
 762 nt   EndOfStmt      763                    1355
 763 sem                  -0              35602    0
 764 alt                   0   765   740        1346
 765 alt                  -0   778   752        1354
 766 t    "RaiseEvent"   771                    1362
 767 t    "("            769                    1362
 768 nt   FormalParame  -770              35827 1362
 769 opt                 770     0   768        1362
 770 t    ")"           -772                    1362
 771 opt                 772     0   767        1362
 772 t    EOL            773                    1362
 773 nt   Block          774              35852 1363
 774 t    "End"          775                    1363
 775 t    "RaiseEvent"   776                    1363
 776 nt   EndOfStmt      777                    1363
 777 sem                  -0              35903    0
 778 alt                  -0     0   766        1362
 779 nt   AttributeSec   780              36349 1380
 780 sem                -781              36365    0
 781 iter                796     0   779        1380
 782 nt   GetAccessorD   788              36418 1382
 783 sem                 786              36456    0
 784 nt   AttributeSec   785              36525 1385
 785 sem                -786              36541    0
 786 iter                787     0   784        1385
 787 nt   SetAccessorD    -0              36591 1386
 788 opt                  -0     0   783        1383
 789 nt   SetAccessorD   795              36646 1389
 790 sem                 793              36684    0
 791 nt   AttributeSec   792              36753 1392
 792 sem                -793              36769    0
 793 iter                794     0   791        1392
 794 nt   GetAccessorD    -0              36819 1393
 795 opt                  -0     0   790        1390
 796 alt                   0   797   782        1382
 797 alt                  -0     0   789        1389
 798 nt   PropertyAcce   799              37039 1402
 799 t    "Get"          800                    1403
 800 sem                 801              37059    0
 801 t    EOL            802                    1405
 802 nt   Block          803              37113 1406
 803 sem                 804              37128    0
 804 t    "End"          805                    1408
 805 t    "Get"          806                    1408
 806 sem                 807              37218    0
 807 sem                 808              37249    0
 808 nt   EndOfStmt        0                    1411
 809 nt   PropertyAcce   810              37623 1422
 810 t    "Set"          811                    1423
 811 sem                 816              37643    0
 812 t    "("            814                    1425
 813 nt   FormalParame  -815              37713 1425
 814 opt                 815     0   813        1425
 815 t    ")"           -817                    1425
 816 opt                 817     0   812        1425
 817 t    EOL            818                    1426
 818 nt   Block          819              37738 1427
 819 sem                 820              37756    0
 820 t    "End"          821                    1433
 821 t    "Set"          822                    1433
 822 sem                 823              37902    0
 823 nt   EndOfStmt        0                    1435
 824 nt   Identifier     825                    1446
 825 sem                 828              38222    0
 826 t    "As"           827                    1447
 827 nt   TypeName      -829              38279 1447
 828 opt                 829     0   826        1447
 829 t    "="            830                    1448
 830 nt   Expr           831              38302 1448
 831 sem                   0              38320    0
 832 nt   Identifier     833                    1460
 833 sem                 834              38576    0
 834 nt   VariableDecl     0              38640 1461
 835 rslv                836  1472
 836 nt   ArrayInitial  -840              38998 1472
 837 opt                 840     0   835        1472
 838 rslv                839  1473
 839 nt   ArrayNameMod  -853              39063 1473
 840 opt                 853     0   838        1473
 841 rslv                842  1475
 842 t    "As"           843                    1475
 843 nt   ObjectCreate   844              39134 1475
 844 sem                -855              39154    0
 845 t    "As"           846                    1484
 846 nt   TypeName       847              39365 1484
 847 sem                -849              39387    0
 848 opt                 849     0   845        1484
 849 sem                 852              39747    0
 850 t    "="            851                    1521
 851 nt   Expr          -855              40493 1521
 852 opt                -855     0   850        1521
 853 alt                 855   854   841        1475
 854 alt                -855     0   848        1484
 855 sem                   0              40517    0
 856 t    "("            857                    1536
 857 nt   Initializati   858              40856 1536
 858 t    ")"              0                    1536
 859 nt   Expr           863              41029 1545
 860 t    "To"           861                    1546
 861 sem                 862              41051    0
 862 nt   Expr          -864              41082 1547
 863 opt                 864     0   860        1546
 864 sem                 872              41101    0
 865 t    ","            866                    1550
 866 nt   Expr           870              41158 1551
 867 t    "To"           868                    1552
 868 sem                 869              41181    0
 869 nt   Expr          -871              41213 1553
 870 opt                 871     0   867        1552
 871 sem                -872              41234    0
 872 iter                  0     0   865        1550
 873 t    "{"            881                    1566
 874 nt   Expr           875              41553 1568
 875 sem                 880              41573    0
 876 rslv                877  1573
 877 t    ","            878                    1573
 878 nt   Expr           879              41681 1573
 879 sem                -880              41698    0
 880 iter               -882     0   876        1572
 881 opt                 882     0   874        1567
 882 t    "}"            883                    1577
 883 sem                   0              41787    0
 884 eps                  -0                       0
 885 t    "Ansi"         886                    1587
 886 sem                  -0              42013    0
 887 alt                   0   888   884           0
 888 alt                  -0   891   885        1587
 889 t    "Auto"         890                    1588
 890 sem                  -0              42071    0
 891 alt                  -0   894   889        1588
 892 t    "Unicode"      893                    1589
 893 sem                  -0              42132    0
 894 alt                  -0     0   892        1589
 895 t    "Handles"      896                    1598
 896 nt   EventMemberS   897              42346 1598
 897 sem                 901              42359    0
 898 t    ","            899                    1599
 899 nt   EventMemberS   900              42434 1599
 900 sem                -901              42448    0
 901 iter                  0     0   898        1599
 902 t    "Inherits"     903                    1608
 903 nt   TypeName       904              42659 1609
 904 sem                 908              42672    0
 905 t    ","            906                    1611
 906 nt   TypeName       907              42733 1612
 907 sem                -908              42746    0
 908 iter                909     0   905        1610
 909 nt   EndOfStmt        0                    1614
 910 t    "Implements"   911                    1623
 911 nt   TypeName       912              42994 1623
 912 sem                 916              43012    0
 913 t    ","            914                    1628
 914 nt   TypeName       915              43081 1628
 915 sem                -916              43097    0
 916 iter                917     0   913        1627
 917 nt   EndOfStmt        0                    1631
 918 t    "Implements"   919                    1641
 919 nt   NonArrayType   920              43409 1642
 920 sem                 921              43431    0
 921 sem                 926              43523    0
 922 t    ","            923                    1645
 923 nt   NonArrayType   924              43621 1646
 924 sem                 925              43644    0
 925 sem                -926              43737    0
 926 iter                  0     0   922        1645
 927 nt   Identifier    -933                    1655
 928 t    "MyBase"      -933                    1655
 929 alt                 933   930   927        1655
 930 alt                -933   932   928        1655
 931 t    "Me"          -933                    1655
 932 alt                -933     0   931        1655
 933 sem                 934              43923    0
 934 t    "."            935                    1657
 935 nt   IdentifierOr   936              43968 1658
 936 sem                   0              43988    0
 937 rslv                938  1666
 938 nt   QueryExpr     -944              44168 1667
 939 nt   LambdaExpr    -944              44194 1668
 940 alt                 944   941   937        1666
 941 alt                -944   943   939        1668
 942 nt   DisjunctionE  -944              44225 1669
 943 alt                -944     0   942        1669
 944 sem                   0              44247    0
 945 t    "="            946                    1681
 946 sem                  -0              44465    0
 947 t    "&="           948                    1682
 948 sem                  -0              44516    0
 949 alt                   0   950   945        1681
 950 alt                  -0   953   947        1682
 951 t    "+="           952                    1683
 952 sem                  -0              44573    0
 953 alt                  -0   956   951        1683
 954 t    "-="           955                    1684
 955 sem                  -0              44621    0
 956 alt                  -0   959   954        1684
 957 t    "*="           958                    1685
 958 sem                  -0              44674    0
 959 alt                  -0   962   957        1685
 960 t    "/="           961                    1686
 961 sem                  -0              44727    0
 962 alt                  -0   965   960        1686
 963 t    "\\="          964                    1687
 964 sem                  -0              44779    0
 965 alt                  -0   968   963        1687
 966 t    "^="           967                    1688
 967 sem                  -0              44837    0
 968 alt                  -0   971   966        1688
 969 t    "<<="          970                    1689
 970 sem                  -0              44888    0
 971 alt                  -0   974   969        1689
 972 t    ">>="          973                    1690
 973 sem                  -0              44943    0
 974 alt                  -0     0   972        1690
 975 nt   SimpleNonInv  1012              45134 1698
 976 t    "."            983                    1700
 977 t    XmlOpenTag     978                    1701
 978 nt   IdentifierOr   979              45195 1701
 979 t    XmlCloseTag    980                    1701
 980 sem                -990              45225    0
 981 nt   IdentifierOr   982              45334 1703
 982 sem                -990              45352    0
 983 alt                 990   984   977        1701
 984 alt                -990     0   981        1703
 985 rslv                986  1706
 986 t    "("            987                    1707
 987 t    "Of"           988                    1707
 988 nt   TypeArgument   989              45582 1707
 989 t    ")"          -1012                    1707
 990 opt               -1012     0   985        1706
 991 t    "!"            992                    1709
 992 nt   IdentifierOr   993              45671 1709
 993 sem               -1012              45684    0
 994 alt               -1012   995   976        1700
 995 alt               -1012  1009   991        1709
 996 sem                1000              45874    0
 997 t    ".@"         -1004                    1711
 998 t    "..."          999                    1711
 999 sem               -1004              45965    0
1000 alt                1004  1001   997        1711
1001 alt               -1004     0   998        1711
1002 t    XmlOpenTag    1003                    1711
1003 sem               -1005              46018    0
1004 opt                1005     0  1002        1711
1005 nt   IdentifierOr  1007              46061 1711
1006 t    XmlCloseTag  -1008                    1711
1007 opt                1008     0  1006        1711
1008 sem               -1012              46094    0
1009 alt               -1012  1011   996           0
1010 nt   InvocationEx -1012              46192 1713
1011 alt               -1012     0  1010        1713
1012 iter               1013     0   994        1699
1013 sem                   0              46216    0
1014 t    LiteralStrin  1015                    1736
1015 sem               -1166              46617    0
1016 t    LiteralChara  1017                    1737
1017 sem               -1166              46742    0
1018 alt               -1166  1019  1014        1736
1019 alt               -1166  1022  1016        1737
1020 t    LiteralSingl  1021                    1738
1021 sem               -1166              46865    0
1022 alt               -1166  1025  1020        1738
1023 t    LiteralDoubl  1024                    1739
1024 sem               -1166              46988    0
1025 alt               -1166  1028  1023        1739
1026 t    LiteralInteg  1027                    1740
1027 sem               -1166              47111    0
1028 alt               -1166  1031  1026        1740
1029 t    LiteralDate   1030                    1741
1030 sem               -1166              47232    0
1031 alt               -1166  1034  1029        1741
1032 t    LiteralDecim  1033                    1742
1033 sem               -1166              47355    0
1034 alt               -1166  1037  1032        1742
1035 t    "True"        1036                    1744
1036 sem               -1166              47545    0
1037 alt               -1166  1040  1035        1744
1038 t    "False"       1039                    1745
1039 sem               -1166              47621    0
1040 alt               -1166  1043  1038        1745
1041 t    "Nothing"     1042                    1746
1042 sem               -1166              47700    0
1043 alt               -1166  1048  1041        1746
1044 t    "("           1045                    1747
1045 nt   Expr          1046              47778 1747
1046 t    ")"           1047                    1747
1047 sem               -1166              47799    0
1048 alt               -1166  1057  1044        1747
1049 nt   Identifier    1050                    1748
1050 sem                1056              47883    0
1051 rslv               1052  1752
1052 t    "("           1053                    1753
1053 t    "Of"          1054                    1753
1054 nt   TypeArgument  1055              48114 1753
1055 t    ")"          -1166                    1753
1056 opt               -1166     0  1051        1752
1057 alt               -1166  1065  1049        1748
1058 sem                1062              48178    0
1059 nt   PrimitiveTyp -1064              48232 1756
1060 t    "Object"      1061                    1756
1061 sem               -1064              48255    0
1062 alt                1064  1063  1059        1756
1063 alt               -1064     0  1060        1756
1064 sem               -1166              48290    0
1065 alt               -1166  1068  1058           0
1066 t    "Me"          1067                    1758
1067 sem               -1166              48379    0
1068 alt               -1166  1079  1066        1758
1069 sem                1074              48429    0
1070 t    "MyBase"      1071                    1760
1071 sem               -1076              48486    0
1072 t    "MyClass"     1073                    1761
1073 sem               -1076              48618    0
1074 alt                1076  1075  1070        1760
1075 alt               -1076     0  1072        1761
1076 t    "."           1077                    1763
1077 nt   IdentifierOr  1078              48757 1763
1078 sem               -1166              48773    0
1079 alt               -1166  1086  1069           0
1080 t    "Global"      1081                    1764
1081 t    "."           1082                    1764
1082 nt   Identifier    1083                    1765
1083 sem                1084              48929    0
1084 sem                1085              49083    0
1085 sem               -1166              49115    0
1086 alt               -1166  1089  1080        1764
1087 nt   ObjectCreate  1088              49189 1769
1088 sem               -1166              49206    0
1089 alt               -1166  1092  1087        1769
1090 nt   CollectionIn  1091              49250 1770
1091 sem               -1166              49266    0
1092 alt               -1166  1108  1090        1770
1093 sem                1097              49314    0
1094 t    "DirectCast" -1102                    1773
1095 t    "CType"       1096                    1774
1096 sem               -1102              49390    0
1097 alt                1102  1098  1094        1773
1098 alt               -1102  1101  1095        1774
1099 t    "TryCast"     1100                    1775
1100 sem               -1102              49444    0
1101 alt               -1102     0  1099        1775
1102 t    "("           1103                    1777
1103 nt   Expr          1104              49495 1777
1104 t    ","           1105                    1777
1105 nt   TypeName      1106              49518 1777
1106 t    ")"           1107                    1777
1107 sem               -1166              49539    0
1108 alt               -1166  1114  1093           0
1109 nt   CastTarget    1110              49620 1779
1110 t    "("           1111                    1779
1111 nt   Expr          1112              49639 1779
1112 t    ")"           1113                    1779
1113 sem               -1166              49656    0
1114 alt               -1166  1118  1109        1779
1115 t    "AddressOf"   1116                    1780
1116 nt   Expr          1117              49764 1780
1117 sem               -1166              49779    0
1118 alt               -1166  1124  1115        1780
1119 t    "GetType"     1120                    1781
1120 t    "("           1121                    1781
1121 nt   GetTypeTypeN  1122              49869 1781
1122 t    ")"           1123                    1781
1123 sem               -1166              49886    0
1124 alt               -1166  1130  1119        1781
1125 t    "TypeOf"      1126                    1782
1126 nt   SimpleExpr    1127              49963 1782
1127 t    "Is"          1128                    1782
1128 nt   TypeName      1129              49987 1782
1129 sem               -1166              50000    0
1130 alt               -1166  1132  1125        1782
1131 nt   ConditionalE -1166              50088 1783
1132 alt               -1166  1134  1131        1783
1133 nt   XmlLiteralEx -1166              50125 1784
1134 alt               -1166     0  1133        1784
1135 t    "."           1142                    1789
1136 t    XmlOpenTag    1137                    1790
1137 nt   IdentifierOr  1138              50246 1790
1138 t    XmlCloseTag   1139                    1790
1139 sem               -1166              50276    0
1140 nt   IdentifierOr  1141              50447 1792
1141 sem               -1166              50465    0
1142 alt               -1166  1143  1136        1790
1143 alt               -1166     0  1140        1792
1144 t    "!"           1145                    1795
1145 nt   IdentifierOr  1146              50618 1795
1146 sem               -1166              50631    0
1147 alt               -1166  1148  1135        1789
1148 alt               -1166  1163  1144        1795
1149 sem                1154              50821    0
1150 t    "..."         1151                    1797
1151 sem               -1158              50913    0
1152 t    ".@"          1153                    1797
1153 sem               -1158              50962    0
1154 alt                1158  1155  1150        1797
1155 alt               -1158     0  1152        1797
1156 t    XmlOpenTag    1157                    1798
1157 sem               -1159              51024    0
1158 opt                1159     0  1156        1798
1159 nt   IdentifierOr  1161              51073 1798
1160 t    XmlCloseTag  -1162                    1798
1161 opt                1162     0  1160        1798
1162 sem               -1166              51107    0
1163 alt               -1166     0  1149           0
1164 alt                1166  1165  1018        1736
1165 alt               -1166     0  1147        1789
1166 sem                   0              51209    0
1167 nt   XmlContentEx  1169              51504 1818
1168 nt   XmlContentEx -1169              51534 1818
1169 iter               1174     0  1168        1818
1170 nt   XmlElement    1171              51556 1818
1171 sem                1173              51582    0
1172 nt   XmlContentEx -1173              51638 1818
1173 iter              -1181     0  1172        1818
1174 opt               -1181     0  1170        1818
1175 nt   XmlElement    1176              51667 1820
1176 sem                1178              51693    0
1177 nt   XmlContentEx -1178              51749 1820
1178 iter              -1181     0  1177        1820
1179 alt                1181  1180  1167        1818
1180 alt               -1181     0  1175        1820
1181 sem                   0              51770    0
1182 sem                1187              51964    0
1183 t    XmlContent    1184                    1834
1184 sem               -1195              52022    0
1185 t    XmlCData      1186                    1835
1186 sem               -1195              52103    0
1187 alt                1195  1188  1183        1834
1188 alt               -1195  1191  1185        1835
1189 t    XmlComment    1190                    1836
1190 sem               -1195              52187    0
1191 alt               -1195  1194  1189        1836
1192 t    XmlProcessin  1193                    1837
1193 sem               -1195              52287    0
1194 alt               -1195     0  1192        1837
1195 sem                   0              52380    0
1196 t    XmlContent    1197                    1850
1197 sem               -1216              52614    0
1198 t    XmlCData      1199                    1851
1199 sem               -1216              52698    0
1200 alt                1216  1201  1196        1850
1201 alt               -1216  1204  1198        1851
1202 t    XmlComment    1203                    1852
1203 sem               -1216              52785    0
1204 alt               -1216  1207  1202        1852
1205 t    XmlProcessin  1206                    1853
1206 sem               -1216              52888    0
1207 alt               -1216  1213  1205        1853
1208 t    XmlStartInli  1209                    1854
1209 sem                1210              52997    0
1210 nt   Expr          1211              53033 1854
1211 t    XmlEndInline  1212                    1854
1212 sem               -1216              53072    0
1213 alt               -1216  1215  1208        1854
1214 nt   XmlElement   -1216              53171 1855
1215 alt               -1216     0  1214        1855
1216 sem                   0              53196    0
1217 t    XmlOpenTag    1218                    1870
1218 sem                1226              53494    0
1219 t    XmlStartInli  1220                    1871
1220 sem                1221              53553    0
1221 nt   Expr          1222              53589 1871
1222 t    XmlEndInline  1223                    1871
1223 sem               -1229              53631    0
1224 nt   Identifier    1225                    1873
1225 sem               -1229              53743    0
1226 alt                1229  1227  1219        1871
1227 alt               -1229     0  1224        1873
1228 nt   XmlAttribute -1229              53783 1873
1229 iter               1242     0  1228        1873
1230 t    XmlCloseTagE  1231                    1874
1231 sem               -1244              53832    0
1232 t    XmlCloseTag   1236                    1874
1233 sem                1234              53886    0
1234 nt   XmlNestedCon  1235              53927 1874
1235 sem               -1236              53941    0
1236 iter               1237     0  1233        1874
1237 t    XmlOpenEndTa  1239                    1874
1238 any               -1239                    1874
1239 iter               1240     0  1238        1874
1240 t    XmlCloseTag   1241                    1874
1241 sem               -1244              54007    0
1242 alt                1244  1243  1230        1874
1243 alt               -1244     0  1232        1874
1244 sem                   0              54053    0
1245 nt   Identifier    1246                    1882
1246 sem                1247              54173    0
1247 t    "="           1248                    1882
1248 sem                1254              54207    0
1249 t    LiteralStrin  1250                    1884
1250 sem               -1256              54325    0
1251 t    XmlStartInli  1252                    1884
1252 nt   Expr          1253              54429 1884
1253 t    XmlEndInline -1256                    1884
1254 alt                1256  1255  1249        1884
1255 alt               -1256     0  1251        1884
1256 sem                  -0              54473    0
1257 t    XmlStartInli  1258                    1887
1258 sem                1259              54711    0
1259 nt   Expr          1260              54747 1887
1260 t    XmlEndInline  1261                    1887
1261 sem                  -0              54789    0
1262 alt                   0  1263  1245        1882
1263 alt                  -0     0  1257        1887
1264 t    "If"          1265                    1902
1265 t    "("           1266                    1902
1266 nt   Expr          1267              55362 1902
1267 t    ","           1268                    1902
1268 nt   Expr          1271              55386 1902
1269 t    ","           1270                    1902
1270 nt   Expr         -1272              55411 1902
1271 opt                1272     0  1269        1902
1272 t    ")"           1273                    1902
1273 sem                   0              55440    0
1274 t    "("           1275                    1928
1275 sem                1276              56114    0
1276 nt   ArgumentList  1277              56161 1929
1277 t    ")"           1278                    1930
1278 sem                1279              56191    0
1279 sem                   0              56254    0
1280 t    "CBool"       1281                    1942
1281 sem                  -0              56414    0
1282 t    "CByte"       1283                    1943
1283 sem                  -0              56482    0
1284 alt                   0  1285  1280        1942
1285 alt                  -0  1288  1282        1943
1286 t    "CSByte"      1287                    1944
1287 sem                  -0              56548    0
1288 alt                  -0  1291  1286        1944
1289 t    "CChar"       1290                    1945
1290 sem                  -0              56614    0
1291 alt                  -0  1294  1289        1945
1292 t    "CDate"       1293                    1946
1293 sem                  -0              56679    0
1294 alt                  -0  1297  1292        1946
1295 t    "CDec"        1296                    1947
1296 sem                  -0              56747    0
1297 alt                  -0  1300  1295        1947
1298 t    "CDbl"        1299                    1948
1299 sem                  -0              56814    0
1300 alt                  -0  1303  1298        1948
1301 t    "CShort"      1302                    1949
1302 sem                  -0              56882    0
1303 alt                  -0  1306  1301        1949
1304 t    "CInt"        1305                    1950
1305 sem                  -0              56947    0
1306 alt                  -0  1309  1304        1950
1307 t    "CLng"        1308                    1951
1308 sem                  -0              57012    0
1309 alt                  -0  1312  1307        1951
1310 t    "CUShort"     1311                    1952
1311 sem                  -0              57080    0
1312 alt                  -0  1315  1310        1952
1313 t    "CUInt"       1314                    1953
1314 sem                  -0              57147    0
1315 alt                  -0  1318  1313        1953
1316 t    "CULng"       1317                    1954
1317 sem                  -0              57214    0
1318 alt                  -0  1321  1316        1954
1319 t    "CObj"        1320                    1955
1320 sem                  -0              57280    0
1321 alt                  -0  1324  1319        1955
1322 t    "CSng"        1323                    1956
1323 sem                  -0              57346    0
1324 alt                  -0  1327  1322        1956
1325 t    "CStr"        1326                    1957
1326 sem                  -0              57412    0
1327 alt                  -0     0  1325        1957
1328 nt   ConjunctionE  1340              57649 1966
1329 t    "Or"          1330                    1969
1330 sem               -1338              57689    0
1331 t    "OrElse"      1332                    1970
1332 sem               -1338              57745    0
1333 alt                1338  1334  1329        1969
1334 alt               -1338  1337  1331        1970
1335 t    "Xor"         1336                    1971
1336 sem               -1338              57801    0
1337 alt               -1338     0  1335        1971
1338 nt   ConjunctionE  1339              57865 1973
1339 sem               -1340              57879    0
1340 iter                  0     0  1333        1967
1341 nt   NotExpr       1350              58185 1983
1342 t    "And"         1343                    1986
1343 sem               -1348              58226    0
1344 t    "AndAlso"     1345                    1987
1345 sem               -1348              58284    0
1346 alt                1348  1347  1342        1986
1347 alt               -1348     0  1344        1987
1348 nt   NotExpr       1349              58339 1989
1349 sem               -1350              58353    0
1350 iter                  0     0  1346        1984
1351 t    "Not"         1352                    1995
1352 sem               -1353              58593    0
1353 iter               1354     0  1351        1995
1354 nt   ComparisonEx  1355              58644 1996
1355 sem                   0              58677    0
1356 nt   ShiftExpr     1392              58984 2008
1357 t    "<"           1358                    2011
1358 sem               -1390              59020    0
1359 t    ">"           1360                    2012
1360 sem               -1390              59071    0
1361 alt                1390  1362  1357        2011
1362 alt               -1390  1365  1359        2012
1363 t    "<="          1364                    2013
1364 sem               -1390              59125    0
1365 alt               -1390  1368  1363        2013
1366 t    ">="          1367                    2014
1367 sem               -1390              59183    0
1368 alt               -1390  1371  1366        2014
1369 t    "<>"          1370                    2015
1370 sem               -1390              59245    0
1371 alt               -1390  1374  1369        2015
1372 t    "="           1373                    2016
1373 sem               -1390              59299    0
1374 alt               -1390  1377  1372        2016
1375 t    "Like"        1376                    2017
1376 sem               -1390              59352    0
1377 alt               -1390  1380  1375        2017
1378 t    "Is"          1379                    2018
1379 sem               -1390              59399    0
1380 alt               -1390  1383  1378        2018
1381 t    "IsNot"       1382                    2019
1382 sem               -1390              59462    0
1383 alt               -1390     0  1381        2019
1384 nt   ShiftExpr     1385              59534 2022
1385 sem               -1392              59548    0
1386 sem                1387              59682    0
1387 t    "Not"         1388                    2024
1388 nt   ShiftExpr     1389              59748 2025
1389 sem               -1392              59762    0
1390 alt               -1392  1391  1384        2022
1391 alt               -1392     0  1386           0
1392 iter                  0     0  1361        2009
1393 nt   Concatenatio  1402              60198 2036
1394 t    "<<"          1395                    2039
1395 sem               -1400              60235    0
1396 t    ">>"          1397                    2040
1397 sem               -1400              60287    0
1398 alt                1400  1399  1394        2039
1399 alt               -1400     0  1396        2040
1400 nt   Concatenatio  1401              60352 2042
1401 sem               -1402              60366    0
1402 iter                  0     0  1398        2037
1403 nt   AdditiveExpr  1407              60626 2049
1404 t    "&"           1405                    2049
1405 nt   AdditiveExpr  1406              60658 2049
1406 sem               -1407              60672    0
1407 iter                  0     0  1404        2049
1408 nt   ModuloExpr    1417              60999 2058
1409 t    "+"           1410                    2061
1410 sem               -1415              61036    0
1411 t    "-"           1412                    2062
1412 sem               -1415              61081    0
1413 alt                1415  1414  1409        2061
1414 alt               -1415     0  1411        2062
1415 nt   ModuloExpr    1416              61137 2064
1416 sem               -1417              61151    0
1417 iter                  0     0  1413        2059
1418 nt   IntegerDivis  1422              61410 2071
1419 t    "Mod"         1420                    2071
1420 nt   IntegerDivis  1421              61451 2071
1421 sem               -1422              61465    0
1422 iter                  0     0  1419        2071
1423 nt   Multiplicati  1427              61753 2077
1424 t    "\\"          1425                    2077
1425 nt   Multiplicati  1426              61792 2077
1426 sem               -1427              61806    0
1427 iter                  0     0  1424        2077
1428 nt   UnaryExpr     1437              62145 2086
1429 t    "*"           1430                    2089
1430 sem               -1435              62180    0
1431 t    "/"           1432                    2090
1432 sem               -1435              62230    0
1433 alt                1435  1434  1429        2089
1434 alt               -1435     0  1431        2090
1435 nt   UnaryExpr     1436              62284 2092
1436 sem               -1437              62297    0
1437 iter                  0     0  1433        2087
1438 t    "+"           1439                    2103
1439 sem               -1447              62621    0
1440 t    "-"           1441                    2104
1441 sem               -1447              62682    0
1442 alt               -1447  1443  1438        2103
1443 alt               -1447  1446  1440        2104
1444 t    "*"           1445                    2105
1445 sem               -1447              62744    0
1446 alt               -1447     0  1444        2105
1447 iter               1448     0  1442        2103
1448 nt   Exponentiati  1449              62823 2107
1449 sem                   0              62841    0
1450 nt   SimpleExpr    1454              63136 2120
1451 t    "^"           1452                    2120
1452 nt   SimpleExpr    1453              63166 2120
1453 sem               -1454              63180    0
1454 iter                  0     0  1451        2120
1455 t    "New"         1469                    2133
1456 nt   NonArrayType  1468              63662 2134
1457 t    "("           1458                    2135
1458 nt   NormalOrReDi  1459              63713 2135
1459 t    ")"           1466                    2135
1460 rslv               1461  2136
1461 nt   ArrayTypeMod  1462              63834 2137
1462 nt   CollectionIn -1467              63877 2138
1463 nt   CollectionIn -1467              63922 2139
1464 alt               -1467  1465  1460        2136
1465 alt               -1467     0  1463        2139
1466 opt                1467     0  1464        2136
1467 sem               -1470              63952    0
1468 opt               -1470     0  1457        2135
1469 opt                1470     0  1456        2134
1470 sem                1496              64080    0
1471 sem                1472              64541    0
1472 t    "With"        1473                    2163
1473 sem                1474              64665    0
1474 t    "{"           1479                    2168
1475 nt   MemberInitia  1476              64856 2170
1476 sem               -1488              64889    0
1477 nt   Expr          1478              64966 2172
1478 sem               -1488              64997    0
1479 alt                1488  1480  1475        2170
1480 alt               -1488     0  1477        2172
1481 t    ","           1486                    2175
1482 nt   MemberInitia  1483              65110 2177
1483 sem               -1488              65144    0
1484 nt   Expr          1485              65222 2179
1485 sem               -1488              65254    0
1486 alt               -1488  1487  1482        2177
1487 alt               -1488     0  1484        2179
1488 iter               1489     0  1481        2175
1489 t    "}"           1490                    2183
1490 sem               -1497              65351    0
1491 t    "From"        1492                    2194
1492 nt   CollectionIn  1493              65583 2195
1493 sem               -1497              65612    0
1494 alt               -1497  1495  1471           0
1495 alt               -1497     0  1491        2194
1496 opt                1497     0  1494        2157
1497 sem                   0              65739    0
1498 nt   SubLambdaExp -1502              65953 2214
1499 nt   FunctionLamb -1502              65994 2215
1500 alt                1502  1501  1498        2214
1501 alt               -1502     0  1499        2215
1502 sem                   0              66013    0
1503 t    "Sub"         1508                    2228
1504 t    "("           1506                    2228
1505 nt   FormalParame -1507              66332 2228
1506 opt                1507     0  1505        2228
1507 t    ")"          -1520                    2228
1508 opt                1520     0  1504        2228
1509 nt   Expr          1510              66377 2231
1510 sem                  -0              66400    0
1511 nt   EmbeddedStat  1512              66522 2237
1512 sem                  -0              66549    0
1513 alt                  -0  1514  1509        2231
1514 alt                  -0     0  1511        2237
1515 t    EOL           1516                    2244
1516 nt   Block         1517              66656 2245
1517 t    "End"         1518                    2246
1518 t    "Sub"         1519                    2246
1519 sem                  -0              66696    0
1520 alt                   0  1521  1513        2231
1521 alt                  -0     0  1515        2244
1522 t    "Function"    1527                    2263
1523 t    "("           1525                    2263
1524 nt   FormalParame -1526              67061 2263
1525 opt                1526     0  1524        2263
1526 t    ")"          -1531                    2263
1527 opt                1531     0  1523        2263
1528 t    "As"          1529                    2264
1529 nt   TypeName      1530              67106 2264
1530 sem               -1543              67122    0
1531 opt                1543     0  1528        2264
1532 nt   Expr          1533              67174 2267
1533 sem                  -0              67197    0
1534 nt   EmbeddedStat  1535              67319 2273
1535 sem                  -0              67346    0
1536 alt                  -0  1537  1532        2267
1537 alt                  -0     0  1534        2273
1538 t    EOL           1539                    2280
1539 nt   Block         1540              67453 2281
1540 t    "End"         1541                    2282
1541 t    "Function"    1542                    2282
1542 sem                  -0              67498    0
1543 alt                   0  1544  1536        2267
1544 alt                  -0     0  1538        2280
1545 nt   FromOrAggreg  1547              67767 2296
1546 nt   QueryOperato -1547              67800 2297
1547 iter               1548     0  1546        2297
1548 sem                   0              67825    0
1549 nt   FromQueryOpe  1550              68086 2308
1550 sem                  -0              68110    0
1551 nt   AggregateQue  1552              68172 2310
1552 sem                  -0              68201    0
1553 alt                   0  1554  1549        2308
1554 alt                  -0     0  1551        2310
1555 nt   FromQueryOpe  1556              68670 2323
1556 sem                  -0              68694    0
1557 nt   AggregateQue  1558              68756 2325
1558 sem                  -0              68785    0
1559 alt                   0  1560  1555        2323
1560 alt                  -0  1562  1557        2325
1561 nt   SelectQueryO    -0              68851 2327
1562 alt                  -0  1564  1561        2327
1563 nt   DistinctQuer    -0              68892 2328
1564 alt                  -0  1566  1563        2328
1565 nt   WhereQueryOp    -0              68930 2329
1566 alt                  -0  1568  1565        2329
1567 nt   OrderByQuery    -0              68970 2330
1568 alt                  -0  1571  1567        2330
1569 nt   PartitionQue  1570              69012 2331
1570 sem                  -0              69040    0
1571 alt                  -0  1573  1569        2331
1572 nt   LetQueryOper    -0              69100 2333
1573 alt                  -0  1576  1572        2333
1574 nt   JoinQueryOpe  1575              69137 2334
1575 sem                  -0              69160    0
1576 alt                  -0  1580  1574        2334
1577 rslv               1578  2336
1578 nt   GroupJoinQue  1579              69280 2336
1579 sem                  -0              69308    0
1580 alt                  -0  1583  1577        2336
1581 nt   GroupByQuery  1582              69372 2338
1582 sem                  -0              69398    0
1583 alt                  -0     0  1581        2338
1584 t    "Order"       1585                    2348
1585 t    "By"          1586                    2348
1586 nt   OrderExpress  1587              69728 2348
1587 sem                   0              69751    0
1588 nt   OrderExpress  1589              70069 2361
1589 sem                1593              70088    0
1590 t    ","           1591                    2364
1591 nt   OrderExpress  1592              70143 2364
1592 sem               -1593              70163    0
1593 iter                  0     0  1590        2363
1594 nt   Expr          1595              70455 2376
1595 sem                1602              70478    0
1596 t    "Ascending"   1597                    2381
1597 sem               -1603              70539    0
1598 t    "Descending"  1599                    2382
1599 sem               -1603              70628    0
1600 alt               -1603  1601  1596        2381
1601 alt               -1603     0  1598        2382
1602 opt                1603     0  1600        2380
1603 sem                   0              70706    0
1604 t    "Group"       1605                    2392
1605 nt   ExpressionRa  1606              70984 2392
1606 t    "By"          1607                    2393
1607 nt   ExpressionRa  1608              71060 2393
1608 t    "Into"        1609                    2394
1609 nt   ExpressionRa  1610              71135 2394
1610 sem                   0              71172    0
1611 t    "Group"       1612                    2406
1612 nt   JoinQueryOpe  1613              71502 2406
1613 t    "Into"        1614                    2407
1614 nt   ExpressionRa  1615              71567 2407
1615 sem                   0              71606    0
1616 t    "From"        1617                    2419
1617 nt   CollectionRa  1618              71924 2419
1618 sem                   0              71954    0
1619 t    "Select"      1620                    2430
1620 nt   ExpressionRa  1621              72262 2430
1621 sem                   0              72294    0
1622 t    "Distinct"    1623                    2442
1623 sem                   0              72614    0
1624 t    "Where"       1625                    2455
1625 nt   Expr          1626              72950 2455
1626 sem                   0              72971    0
1627 t    "Take"        1628                    2471
1628 sem                1631              73344    0
1629 t    "While"       1630                    2472
1630 sem               -1639              73431    0
1631 opt               -1639     0  1629        2472
1632 t    "Skip"        1633                    2473
1633 sem                1636              73522    0
1634 t    "While"       1635                    2474
1635 sem               -1639              73612    0
1636 opt               -1639     0  1634        2474
1637 alt                1639  1638  1627        2471
1638 alt               -1639     0  1632        2473
1639 nt   Expr          1640              73707 2476
1640 sem                   0              73725    0
1641 t    "Aggregate"   1642                    2490
1642 nt   CollectionRa  1643              74169 2490
1643 sem                1645              74189    0
1644 nt   QueryOperato -1645              74248 2495
1645 iter               1646     0  1644        2494
1646 t    "Into"        1647                    2497
1647 nt   ExpressionRa  1648              74331 2497
1648 sem                   0              74370    0
1649 t    "Let"         1650                    2508
1650 nt   ExpressionRa  1651              74665 2508
1651 sem                   0              74694    0
1652 nt   ExpressionRa  1653              74953 2519
1653 sem                1657              74972    0
1654 t    ","           1655                    2521
1655 nt   ExpressionRa  1656              75043 2521
1656 sem               -1657              75060    0
1657 iter                  0     0  1654        2521
1658 rslv               1659  2532
1659 nt   Identifier    1660                    2532
1660 sem                1664              75385    0
1661 t    "As"          1662                    2535
1662 nt   TypeName      1663              75440 2535
1663 sem               -1665              75461    0
1664 opt                1665     0  1661        2534
1665 t    "="          -1667                    2538
1666 opt                1667     0  1658        2531
1667 nt   Expr          1668              75513 2540
1668 sem                   0              75530    0
1669 t    "Join"        1670                    2556
1670 nt   CollectionRa  1671              75972 2556
1671 sem                1674              75996    0
1672 nt   JoinQueryOpe  1673              76064 2559
1673 sem               -1675              76083    0
1674 opt                1675     0  1672        2558
1675 t    "On"          1676                    2562
1676 nt   JoinConditio  1677              76143 2563
1677 sem                1681              76163    0
1678 t    "And"         1679                    2566
1679 nt   JoinConditio  1680              76248 2566
1680 sem               -1681              76269    0
1681 iter               1682     0  1678        2565
1682 sem                   0              76339    0
1683 nt   CollectionRa  1684              76571 2577
1684 sem                1688              76601    0
1685 t    ","           1686                    2579
1686 nt   CollectionRa  1687              76688 2579
1687 sem               -1688              76716    0
1688 iter                  0     0  1685        2579
1689 nt   Identifier    1690                    2589
1690 sem                1694              77033    0
1691 t    "As"          1692                    2590
1692 nt   TypeName      1693              77088 2590
1693 sem               -1695              77105    0
1694 opt                1695     0  1691        2590
1695 t    "In"          1696                    2591
1696 nt   Expr          1697              77154 2591
1697 sem                   0              77174    0
1698 nt   Expr          1699              77496 2606
1699 t    "Equals"      1700                    2606
1700 nt   Expr          1701              77519 2606
1701 sem                   0              77536    0
1702 t    "Key"         1703                    2622
1703 sem               -1705              77924    0
1704 opt                1705     0  1702        2622
1705 t    "."           1706                    2623
1706 nt   IdentifierOr  1707              77969 2623
1707 t    "="           1708                    2623
1708 nt   Expr          1709              77988 2623
1709 sem                   0              78010    0
1710 nt   Argument     -1717              78333 2638
1711 opt                1717     0  1710        2638
1712 t    ","           1713                    2639
1713 sem                1715              78356    0
1714 nt   Argument     -1716              78426 2640
1715 opt                1716     0  1714        2640
1716 sem               -1717              78444    0
1717 iter               1718     0  1712        2639
1718 sem                   0              78498    0
1719 nt   Argument      1723              78881 2654
1720 t    "To"          1721                    2655
1721 sem                1722              78905    0
1722 nt   Expr         -1736              78960 2656
1723 opt               -1736     0  1720        2655
1724 opt                1736     0  1719        2654
1725 t    ","           1726                    2658
1726 sem                1727              78990    0
1727 sem                1728              79037    0
1728 sem                1734              79099    0
1729 nt   Argument      1733              79148 2662
1730 t    "To"          1731                    2663
1731 sem                1732              79173    0
1732 nt   Expr         -1735              79229 2664
1733 opt               -1735     0  1730        2663
1734 opt                1735     0  1729        2662
1735 sem               -1736              79252    0
1736 iter               1737     0  1725        2658
1737 sem                   0              79330    0
1738 rslv               1739  2679
1739 nt   Identifier    1740                    2679
1740 sem                1741              79608    0
1741 t    ":="          1742                    2679
1742 nt   Expr          1743              79636 2679
1743 sem                  -0              79654    0
1744 nt   Expr            -0              79789 2684
1745 alt                   0  1746  1738        2679
1746 alt                  -0     0  1744        2684
1747 nt   NonArrayType  1748              79951 2691
1748 nt   ArrayTypeMod  1749              79992 2692
1749 sem                   0              80010    0
1750 nt   NonArrayType  1751              80321 2707
1751 nt   ArrayTypeMod  1752              80361 2708
1752 sem                   0              80376    0
1753 t    "Global"      1754                    2723
1754 t    "."           1755                    2723
1755 sem               -1757              80660    0
1756 opt                1757     0  1753        2723
1757 nt   QualIdentAnd  1758              80711 2724
1758 sem                1763              80744    0
1759 t    "."           1760                    2726
1760 sem                1761              80788    0
1761 nt   QualIdentAnd  1762              80850 2727
1762 sem               -1763              80890    0
1763 iter                 -0     0  1759        2726
1764 t    "Object"      1765                    2731
1765 sem                1768              81014    0
1766 t    "?"           1767                    2733
1767 sem                  -0              81097    0
1768 opt                  -0     0  1766        2732
1769 alt                   0  1770  1756        2723
1770 alt                  -0  1776  1764        2731
1771 nt   PrimitiveTyp  1772              81344 2741
1772 sem                1775              81357    0
1773 t    "?"           1774                    2743
1774 sem                  -0              81428    0
1775 opt                  -0     0  1773        2742
1776 alt                  -0     0  1771        2741
1777 nt   Qualident     1778              81779 2755
1778 sem                1791              81794    0
1779 rslv               1780  2757
1780 t    "("           1781                    2758
1781 t    "Of"          1788                    2758
1782 rslv               1783  2759
1783 sem                1786              82012    0
1784 t    ","           1785                    2761
1785 sem               -1786              82082    0
1786 iter              -1790     0  1784        2761
1787 nt   TypeArgument -1790              82165 2762
1788 alt                1790  1789  1782        2759
1789 alt               -1790     0  1787        2762
1790 t    ")"             -0                    2764
1791 opt                   0     0  1779        2757
1792 nt   ArrayTypeMod     0              82324 2773
1793 rslv               1794  2783
1794 t    "("           1796                    2784
1795 nt   RankList     -1797              82510 2785
1796 opt                1797     0  1795        2785
1797 sem                1798              82528    0
1798 t    ")"          -1799                    2789
1799 iter               1800     0  1793        2783
1800 sem                   0              82576    0
1801 t    ","           1802                    2801
1802 sem               -1803              82710    0
1803 iter                  0     0  1801        2801
1804 nt   TypeName      1805              82838 2809
1805 sem                1809              82854    0
1806 t    ","           1807                    2811
1807 nt   TypeName      1808              82929 2812
1808 sem               -1809              82945    0
1809 iter                  0     0  1806        2810
1810 t    "<"           1811                    2817
1811 sem                1814              83041    0
1812 t    "Assembly"   -1816                    2818
1813 t    "Module"     -1816                    2818
1814 alt                1816  1815  1812        2818
1815 alt               -1816     0  1813        2818
1816 sem                1817              83109    0
1817 t    ":"           1818                    2823
1818 nt   Attribute     1819              83335 2823
1819 sem                1830              83353    0
1820 rslv               1827  2824
1821 t    ","           1824                    2824
1822 t    "Assembly"   -1826                    2824
1823 t    "Module"     -1826                    2824
1824 alt                1826  1825  1822        2824
1825 alt               -1826     0  1823        2824
1826 t    ":"          -1828                    2824
1827 opt                1828     0  1821        2824
1828 nt   Attribute     1829              83452 2824
1829 sem               -1830              83470    0
1830 iter               1832     0  1820        2824
1831 t    ","          -1833                    2825
1832 opt                1833     0  1831        2825
1833 t    ">"           1834                    2826
1834 nt   EndOfStmt     1835                    2827
1835 sem                   0              83539    0
1836 t    "Global"      1837                    2847
1837 t    "."          -1839                    2847
1838 opt                1839     0  1836        2847
1839 nt   Qualident     1841              84049 2848
1840 nt   AttributeArg -1842              84082 2849
1841 opt                1842     0  1840        2849
1842 sem                   0              84111    0
1843 t    "("           1870                    2862
1844 rslv               1845  2864
1845 sem                1853              84480    0
1846 rslv               1847  2867
1847 sem                1848              84556    0
1848 nt   IdentifierOr  1851              84602 2868
1849 t    ":="         -1854                    2869
1850 t    "="          -1854                    2869
1851 alt               -1854  1852  1849        2869
1852 alt               -1854     0  1850        2869
1853 opt                1854     0  1846        2866
1854 nt   Expr          1855              84643 2870
1855 sem                1869              84667    0
1856 t    ","           1865                    2878
1857 rslv               1858  2880
1858 sem                1859              84964    0
1859 nt   IdentifierOr  1862              85012 2881
1860 t    ":="         -1867                    2882
1861 t    "="          -1867                    2882
1862 alt               -1867  1863  1860        2882
1863 alt               -1867     0  1861        2882
1864 sem               -1867              85056    0
1865 alt                1867  1866  1857        2880
1866 alt               -1867     0  1864           0
1867 nt   Expr          1868              85141 2884
1868 sem               -1869              85155    0
1869 iter              -1871     0  1856        2877
1870 opt                1871     0  1844        2863
1871 t    ")"              0                    2891
1872 t    "<"           1884                    2902
1873 rslv               1878  2903
1874 t    "Event"       1875                    2904
1875 sem               -1883              85703    0
1876 t    "Return"      1877                    2905
1877 sem               -1883              85750    0
1878 alt                1883  1879  1874        2904
1879 alt               -1883  1882  1876        2905
1880 nt   Identifier    1881                    2906
1881 sem               -1883              85808    0
1882 alt               -1883     0  1880        2906
1883 t    ":"          -1885                    2916
1884 opt                1885     0  1873        2903
1885 nt   Attribute     1886              86209 2918
1886 sem                1891              86227    0
1887 rslv               1888  2919
1888 t    ","           1889                    2919
1889 nt   Attribute     1890              86296 2919
1890 sem               -1891              86314    0
1891 iter               1893     0  1887        2919
1892 t    ","          -1894                    2920
1893 opt                1894     0  1892        2920
1894 t    ">"           1895                    2921
1895 sem                   0              86372    0
1896 nt   FormalParame  1897              86709 2936
1897 sem                1901              86719    0
1898 t    ","           1899                    2937
1899 nt   FormalParame  1900              86782 2938
1900 sem               -1901              86792    0
1901 iter                  0     0  1898        2937
1902 nt   AttributeSec  1903              87228 2954
1903 sem               -1904              87244    0
1904 iter               1906     0  1902        2954
1905 nt   ParameterMod -1906              87296 2955
1906 iter               1907     0  1905        2955
1907 nt   Identifier    1908                    2956
1908 sem                1911              87319    0
1909 rslv               1910  2957
1910 nt   ArrayTypeMod -1914              87388 2957
1911 opt                1914     0  1909        2957
1912 t    "As"          1913                    2958
1913 nt   TypeName     -1915              87428 2958
1914 opt                1915     0  1912        2958
1915 sem                1918              87448    0
1916 t    "="           1917                    2970
1917 nt   Expr         -1919              87710 2970
1918 opt                1919     0  1916        2970
1919 sem                   0              87730    0
1920 sem                1930              87988    0
1921 rslv               1928  2990
1922 t    "End"         1923                    2992
1923 sem                1924              88260    0
1924 nt   EndOfStmt    -1930                    2998
1925 sem                1926              88428    0
1926 nt   Statement     1927                    3000
1927 nt   EndOfStmt    -1930                    3000
1928 alt               -1930  1929  1922        2992
1929 alt               -1930     0  1925           0
1930 iter               1931     0  1921        2989
1931 sem                   0              88500    0
1932 rslv               1933  3017
1933 nt   LabelName     1934              88749 3017
1934 sem                1935              88770    0
1935 t    ":"           1936                    3021
1936 nt   Statement    -1941                    3021
1937 nt   EmbeddedStat  1938              88853 3022
1938 sem               -1941              88868    0
1939 alt                1941  1940  1932        3017
1940 alt               -1941     0  1937        3022
1941 sem                   0              88899    0
1942 t    "Const"       1943                    3041
1943 sem               -1951              89287    0
1944 t    "Static"      1945                    3042
1945 sem               -1951              89343    0
1946 alt               -1951  1947  1942        3041
1947 alt               -1951  1950  1944        3042
1948 t    "Dim"         1949                    3043
1949 sem               -1951              89398    0
1950 alt               -1951     0  1948        3043
1951 iter               1952     0  1946        3040
1952 sem                1953              89430    0
1953 nt   VariableDecl  1956              89786 3057
1954 t    ","           1955                    3058
1955 nt   VariableDecl -1956              89849 3058
1956 iter               1957     0  1954        3058
1957 sem                   0              89895    0
1958 nt   ExitStatemen -2213              90206 3073
1959 nt   TryStatement -2213              90238 3074
1960 alt                2213  1961  1958        3073
1961 alt               -2213  1963  1959        3074
1962 nt   ContinueStat -2213              90275 3075
1963 alt               -2213  1968  1962        3075
1964 t    "Throw"       1966                    3077
1965 nt   Expr         -1967              90327 3077
1966 opt                1967     0  1965        3077
1967 sem               -2213              90345    0
1968 alt               -2213  1973  1964        3077
1969 t    "Return"      1971                    3079
1970 nt   Expr         -1972              90420 3079
1971 opt                1972     0  1970        3079
1972 sem               -2213              90438    0
1973 alt               -2213  1981  1969        3079
1974 t    "SyncLock"    1975                    3081
1975 nt   Expr          1976              90513 3081
1976 nt   EndOfStmt     1977                    3081
1977 nt   Block         1978              90539 3081
1978 t    "End"         1979                    3082
1979 t    "SyncLock"    1980                    3082
1980 sem               -2213              90590    0
1981 alt               -2213  1991  1974        3081
1982 t    "RaiseEvent"  1983                    3084
1983 nt   Identifier    1984                    3084
1984 sem                1989              90695    0
1985 t    "("           1987                    3085
1986 nt   ArgumentList -1988              90735 3085
1987 opt                1988     0  1986        3085
1988 t    ")"          -1990                    3085
1989 opt                1990     0  1985        3085
1990 sem               -2213              90758    0
1991 alt               -2213  1993  1982        3084
1992 nt   WithStatemen -2213              90840 3090
1993 alt               -2213  2000  1992        3090
1994 t    "AddHandler"  1995                    3092
1995 sem                1996              90890    0
1996 nt   Expr          1997              90931 3093
1997 t    ","           1998                    3093
1998 nt   Expr          1999              90950 3093
1999 sem               -2213              90975    0
2000 alt               -2213  2007  1994        3092
2001 t    "RemoveHandl  2002                    3098
2002 sem                2003              91074    0
2003 nt   Expr          2004              91115 3099
2004 t    ","           2005                    3099
2005 nt   Expr          2006              91134 3099
2006 sem               -2213              91159    0
2007 alt               -2213  2015  2001        3098
2008 t    "While"       2009                    3104
2009 nt   Expr          2010              91255 3104
2010 nt   EndOfStmt     2011                    3104
2011 nt   Block         2012              91283 3105
2012 t    "End"         2013                    3105
2013 t    "While"       2014                    3105
2014 sem               -2213              91328    0
2015 alt               -2213  2033  2008        3104
2016 t    "Do"          2017                    3110
2017 sem                2031              91469    0
2018 nt   WhileOrUntil  2019              91544 3115
2019 nt   Expr          2020              91568 3115
2020 nt   EndOfStmt     2021                    3115
2021 nt   Block         2022              91597 3116
2022 t    "Loop"        2023                    3117
2023 sem               -2213              91640    0
2024 nt   EndOfStmt     2025                    3125
2025 nt   Block         2026              91945 3126
2026 t    "Loop"        2029                    3127
2027 nt   WhileOrUntil  2028              91992 3127
2028 nt   Expr         -2030              92016 3127
2029 opt                2030     0  2027        3127
2030 sem               -2213              92037    0
2031 alt               -2213  2032  2018        3115
2032 alt               -2213     0  2024        3125
2033 alt               -2213  2073  2016        3110
2034 t    "For"         2035                    3132
2035 sem                2071              92162    0
2036 t    "Each"        2037                    3140
2037 nt   LoopControlV  2038              92305 3140
2038 t    "In"          2039                    3141
2039 nt   Expr          2040              92351 3141
2040 nt   EndOfStmt     2041                    3141
2041 nt   Block         2042              92381 3142
2042 t    "Next"        2044                    3143
2043 nt   Expr         -2045              92421 3143
2044 opt                2045     0  2043        3143
2045 sem               -2213              92443    0
2046 sem                2051              92814    0
2047 rslv               2048  3163
2048 nt   LoopControlV -2053              93075 3164
2049 sem                2050              93120    0
2050 nt   SimpleExpr   -2053              93177 3167
2051 alt                2053  2052  2047        3163
2052 alt               -2053     0  2049           0
2053 t    "="           2054                    3169
2054 nt   Expr          2055              93212 3169
2055 t    "To"          2056                    3169
2056 nt   Expr          2059              93233 3169
2057 t    "Step"        2058                    3169
2058 nt   Expr         -2060              93256 3169
2059 opt                2060     0  2057        3169
2060 nt   EndOfStmt     2061                    3170
2061 nt   Block         2062              93287 3170
2062 t    "Next"        2069                    3171
2063 nt   Expr          2064              93334 3173
2064 sem                2068              93360    0
2065 t    ","           2066                    3178
2066 nt   Expr          2067              93460 3178
2067 sem               -2068              93477    0
2068 iter              -2070     0  2065        3178
2069 opt                2070     0  2063        3172
2070 sem               -2213              93528    0
2071 alt               -2213  2072  2036        3140
2072 alt               -2213     0  2046           0
2073 alt               -2213  2077  2034        3132
2074 t    "Error"       2075                    3194
2075 nt   Expr          2076              93867 3194
2076 sem               -2213              93884    0
2077 alt               -2213  2089  2074        3194
2078 t    "ReDim"       2079                    3196
2079 sem                2082              93956    0
2080 t    "Preserve"    2081                    3196
2081 sem               -2083              94000    0
2082 opt                2083     0  2080        3196
2083 nt   ReDimClause   2084              94038 3197
2084 sem                2088              94056    0
2085 t    ","           2086                    3203
2086 nt   ReDimClause   2087              94263 3203
2087 sem               -2088              94279    0
2088 iter              -2213     0  2085        3203
2089 alt               -2213  2098  2078        3196
2090 t    "Erase"       2091                    3207
2091 nt   Expr          2092              94405 3208
2092 sem                2096              94423    0
2093 t    ","           2094                    3213
2094 nt   Expr          2095              94578 3213
2095 sem               -2096              94591    0
2096 iter               2097     0  2093        3213
2097 sem               -2213              94681    0
2098 alt               -2213  2101  2090        3207
2099 t    "Stop"        2100                    3216
2100 sem               -2213              94740    0
2101 alt               -2213  2145  2099        3216
2102 rslv               2103  3218
2103 t    "If"          2104                    3219
2104 sem                2105              94832    0
2105 nt   Expr          2107              94879 3219
2106 t    "Then"       -2143                    3219
2107 opt                2143     0  2106        3219
2108 nt   EndOfStmt     2109                    3222
2109 nt   Block         2110              94957 3222
2110 sem                2126              94990    0
2111 rslv               2112  3230
2112 t    "Else"        2113                    3230
2113 sem                2114              95188    0
2114 t    "If"         -2119                    3230
2115 t    "ElseIf"      2116                    3231
2116 sem               -2119              95242    0
2117 alt                2119  2118  2111        3230
2118 alt               -2119     0  2115        3231
2119 sem                2120              95284    0
2120 nt   Expr          2122              95349 3234
2121 t    "Then"       -2123                    3234
2122 opt                2123     0  2121        3234
2123 nt   EndOfStmt     2124                    3234
2124 nt   Block         2125              95394 3235
2125 sem               -2126              95417    0
2126 iter               2132     0  2117        3228
2127 t    "Else"        2129                    3245
2128 nt   EndOfStmt    -2130                    3245
2129 opt                2130     0  2128        3245
2130 nt   Block         2131              95720 3246
2131 sem               -2133              95755    0
2132 opt                2133     0  2127        3244
2133 t    "End"         2134                    3250
2134 t    "If"          2135                    3250
2135 sem               -2213              95839    0
2136 sem                2137              95956    0
2137 nt   SingleLineSt  2141              96095 3260
2138 t    "Else"        2140                    3262
2139 nt   SingleLineSt -2142              96168 3263
2140 opt               -2142     0  2139        3263
2141 opt                2142     0  2138        3261
2142 sem               -2213              96209    0
2143 alt               -2213  2144  2108        3222
2144 alt               -2213     0  2136           0
2145 alt               -2213  2166  2102        3218
2146 t    "Select"      2148                    3268
2147 t    "Case"       -2149                    3268
2148 opt                2149     0  2147        3268
2149 nt   Expr          2150              96323 3268
2150 nt   EndOfStmt     2151                    3268
2151 sem                2162              96347    0
2152 sem                2153              96452    0
2153 t    "Case"        2154                    3274
2154 nt   CaseClauses   2157              96550 3274
2155 rslv               2156  3274
2156 t    ":"          -2158                    3274
2157 opt                2158     0  2155        3274
2158 nt   EndOfStmt     2159                    3274
2159 sem                2160              96625    0
2160 nt   Block         2161              96750 3279
2161 sem               -2162              96771    0
2162 iter               2163     0  2152        3272
2163 sem                2164              96916    0
2164 t    "End"         2165                    3289
2165 t    "Select"     -2213                    3289
2166 alt               -2213  2170  2146        3268
2167 sem                2168              97000    0
2168 nt   OnErrorState  2169              97064 3291
2169 sem               -2213              97089    0
2170 alt               -2213  2174  2167           0
2171 sem                2172              97129    0
2172 nt   GotoStatemen  2173              97184 3293
2173 sem               -2213              97206    0
2174 alt               -2213  2178  2171           0
2175 sem                2176              97243    0
2176 nt   ResumeStatem  2177              97304 3295
2177 sem               -2213              97328    0
2178 alt               -2213  2188  2175           0
2179 sem                2180              97449    0
2180 nt   SimpleExpr    2185              97720 3305
2181 nt   AssignmentOp  2182              97757 3307
2182 nt   Expr          2183              97770 3307
2183 sem               -2187              97789    0
2184 sem               -2187              97924    0
2185 alt                2187  2186  2181        3307
2186 alt               -2187     0  2184           0
2187 sem               -2213              98117    0
2188 alt               -2213  2192  2179           0
2189 t    "Call"        2190                    3326
2190 nt   SimpleExpr    2191              98433 3326
2191 sem               -2213              98446    0
2192 alt               -2213  2210  2189        3326
2193 t    "Using"       2194                    3327
2194 sem                2206              98510    0
2195 rslv               2196  3329
2196 sem                2197              98574    0
2197 nt   VariableDecl  2200              98692 3331
2198 t    ","           2199                    3332
2199 nt   VariableDecl -2200              98757 3333
2200 iter               2201     0  2198        3332
2201 nt   Block         2202              98803 3335
2202 sem               -2208              98826    0
2203 nt   Expr          2204              98902 3339
2204 nt   Block         2205              98922 3340
2205 sem               -2208              98940    0
2206 alt                2208  2207  2195        3329
2207 alt               -2208     0  2203        3339
2208 t    "End"         2209                    3343
2209 t    "Using"      -2213                    3343
2210 alt               -2213  2212  2193        3327
2211 nt   LocalDeclara -2213              99065 3344
2212 alt               -2213     0  2211        3344
2213 sem                   0              99089    0
2214 t    "Exit"        2215                    3355
2215 sem                2220              99270    0
2216 t    "Sub"         2217                    3356
2217 sem               -2240              99322    0
2218 t    "Function"    2219                    3357
2219 sem               -2240              99368    0
2220 alt                2240  2221  2216        3356
2221 alt               -2240  2224  2218        3357
2222 t    "Property"    2223                    3358
2223 sem               -2240              99419    0
2224 alt               -2240  2227  2222        3358
2225 t    "Do"          2226                    3359
2226 sem               -2240              99466    0
2227 alt               -2240  2230  2225        3359
2228 t    "For"         2229                    3360
2229 sem               -2240              99507    0
2230 alt               -2240  2233  2228        3360
2231 t    "Try"         2232                    3361
2232 sem               -2240              99549    0
2233 alt               -2240  2236  2231        3361
2234 t    "While"       2235                    3362
2235 sem               -2240              99593    0
2236 alt               -2240  2239  2234        3362
2237 t    "Select"      2238                    3363
2238 sem               -2240              99640    0
2239 alt               -2240     0  2237        3363
2240 sem                   0              99678    0
2241 t    "Continue"    2242                    3368
2242 sem                2252              99789    0
2243 t    "Do"          2244                    3369
2244 sem               -2253              99851    0
2245 t    "For"         2246                    3370
2246 sem               -2253              99899    0
2247 alt               -2253  2248  2243        3369
2248 alt               -2253  2251  2245        3370
2249 t    "While"       2250                    3371
2250 sem               -2253              99950    0
2251 alt               -2253     0  2249        3371
2252 opt                2253     0  2247        3369
2253 sem                   0              99995    0
2254 t    "End"         2255                    3378
2255 sem               -2259              100160    0
2256 nt   EmbeddedStat -2259              100285 3379
2257 alt                2259  2258  2254        3378
2258 alt               -2259     0  2256        3379
2259 sem                2269              100315    0
2260 t    ":"           2262                    3381
2261 t    ":"          -2262                    3381
2262 iter               2266     0  2261        3381
2263 t    "End"         2264                    3382
2264 sem               -2268              100408    0
2265 nt   EmbeddedStat -2268              100534 3383
2266 alt                2268  2267  2263        3382
2267 alt               -2268     0  2265        3383
2268 sem               -2269              100565    0
2269 iter                  0     0  2260        3381
2270 nt   Qualident     2273              100783 3394
2271 rslv               2272  3395
2272 nt   ArrayTypeMod -2277              100829 3395
2273 opt                2277     0  2271        3395
2274 t    "As"          2275                    3396
2275 nt   TypeName      2276              100869 3396
2276 sem               -2278              100882    0
2277 opt                2278     0  2274        3396
2278 sem                   0              100987    0
2279 t    "On"          2280                    3416
2280 t    "Error"       2288                    3416
2281 rslv               2282  3418
2282 t    "GoTo"        2283                    3418
2283 t    "-"           2284                    3418
2284 t    LiteralInteg  2285                    3418
2285 sem               -2294              101502    0
2286 nt   GotoStatemen  2287              101725 3426
2287 sem               -2294              101754    0
2288 alt                2294  2289  2281        3418
2289 alt               -2294  2293  2286        3426
2290 t    "Resume"      2291                    3440
2291 t    "Next"        2292                    3440
2292 sem               -2294              102080    0
2293 alt               -2294     0  2290        3440
2294 sem                   0              102154    0
2295 t    "GoTo"        2296                    3457
2296 nt   LabelName     2297              102427 3457
2297 sem                   0              102446    0
2298 nt   Identifier    2299                    3471
2299 sem                  -0              102668    0
2300 t    LiteralInteg  2301                    3472
2301 sem                  -0              102707    0
2302 alt                   0  2303  2298        3471
2303 alt                  -0     0  2300        3472
2304 nt   SimpleNonInv  2305              102814 3478
2305 nt   ReDimClauseI     0              102846 3479
2306 t    "."           2307                    3485
2307 nt   IdentifierOr  2308              103055 3485
2308 sem               -2314              103068    0
2309 rslv               2310  3486
2310 nt   InvocationEx  2311              103281 3487
2311 sem               -2314              103301    0
2312 alt               -2314  2313  2306        3485
2313 alt               -2314     0  2309        3486
2314 iter               2315     0  2312        3485
2315 t    "("           2316                    3493
2316 nt   NormalOrReDi  2317              103419 3494
2317 t    ")"           2318                    3495
2318 sem                   0              103478    0
2319 rslv               2320  3512
2320 t    "Resume"      2321                    3513
2321 t    "Next"        2322                    3513
2322 sem                  -0              103991    0
2323 t    "Resume"      2325                    3514
2324 nt   LabelName    -2326              104064 3514
2325 opt                2326     0  2324        3514
2326 sem                  -0              104080    0
2327 alt                   0  2328  2319        3512
2328 alt                  -0     0  2323        3514
2329 nt   CaseClause    2330              104294 3523
2330 sem                2334              104313    0
2331 t    ","           2332                    3524
2332 nt   CaseClause    2333              104392 3524
2333 sem               -2334              104411    0
2334 iter                  0     0  2331        3524
2335 t    "Else"        2336                    3535
2336 sem                  -0              104686    0
2337 t    "Is"         -2343                    3538
2338 opt                2343     0  2337        3538
2339 t    "<"           2340                    3540
2340 sem               -2357              104750    0
2341 t    ">"           2342                    3541
2342 sem               -2357              104799    0
2343 alt                2357  2344  2339        3540
2344 alt               -2357  2347  2341        3541
2345 t    "<="          2346                    3542
2346 sem               -2357              104852    0
2347 alt               -2357  2350  2345        3542
2348 t    ">="          2349                    3543
2349 sem               -2357              104909    0
2350 alt               -2357  2353  2348        3543
2351 t    "="           2352                    3544
2352 sem               -2357              104968    0
2353 alt               -2357  2356  2351        3544
2354 t    "<>"          2355                    3545
2355 sem               -2357              105018    0
2356 alt               -2357     0  2354        3545
2357 nt   Expr          2358              105068 3547
2358 sem                  -0              105086    0
2359 alt                   0  2360  2335        3535
2360 alt                  -0  2366  2338        3538
2361 nt   Expr          2364              105138 3551
2362 t    "To"          2363                    3551
2363 nt   Expr         -2365              105160 3551
2364 opt                2365     0  2362        3551
2365 sem                  -0              105181    0
2366 alt                  -0     0  2361        3551
2367 t    "While"       2368                    3560
2368 sem                  -0              105354    0
2369 t    "Until"       2370                    3561
2370 sem                  -0              105409    0
2371 alt                   0  2372  2367        3560
2372 alt                  -0     0  2369        3561
2373 t    "With"        2374                    3570
2374 sem                2375              105593    0
2375 nt   Expr          2376              105632 3571
2376 nt   EndOfStmt     2377                    3571
2377 sem                2378              105660    0
2378 nt   Block         2379              105754 3576
2379 sem                2380              105777    0
2380 t    "End"         2381                    3580
2381 t    "With"        2382                    3580
2382 sem                   0              105867    0
2383 t    "Try"         2384                    3589
2384 nt   EndOfStmt     2385                    3589
2385 nt   Block         2387              106101 3590
2386 nt   CatchClauses -2391              106132 3591
2387 opt                2391     0  2386        3591
2388 t    "Finally"     2389                    3592
2389 nt   EndOfStmt     2390                    3592
2390 nt   Block        -2392              106180 3592
2391 opt                2392     0  2388        3592
2392 t    "End"         2393                    3593
2393 t    "Try"         2394                    3593
2394 sem                   0              106221    0
2395 t    "Catch"       2401                    3609
2396 nt   Identifier    2397                    3610
2397 sem                2400              106585    0
2398 t    "As"          2399                    3610
2399 nt   TypeName     -2404              106617 3610
2400 opt               -2404     0  2398        3610
2401 opt                2404     0  2396        3610
2402 t    "When"        2403                    3611
2403 nt   Expr         -2405              106647 3611
2404 opt                2405     0  2402        3611
2405 nt   EndOfStmt     2406                    3612
2406 nt   Block         2407              106681 3613
2407 sem               -2408              106702    0
2408 iter                  0     0  2395        3608
2409 nt   Identifier    2410                    3625
2410 sem                2415              106898    0
2411 rslv               2412  3626
2412 t    "."           2413                    3626
2413 nt   IdentifierOr  2414              106984 3626
2414 sem               -2415              106997    0
2415 iter               2416     0  2411        3626
2416 sem                   0              107071    0
2417 nt   IdentifierFo    -0                    3633
2418 t    "Custom"        -0                    3634
2419 alt                   0  2420  2417        3633
2420 alt                  -0     0  2418        3634
2421 t    ident           -0                    3638
2422 t    "Aggregate"     -0                    3639
2423 alt                   0  2424  2421        3638
2424 alt                  -0  2426  2422        3639
2425 t    "Ansi"          -0                    3640
2426 alt                  -0  2428  2425        3640
2427 t    "Ascending"     -0                    3641
2428 alt                  -0  2430  2427        3641
2429 t    "Assembly"      -0                    3642
2430 alt                  -0  2432  2429        3642
2431 t    "Auto"          -0                    3643
2432 alt                  -0  2434  2431        3643
2433 t    "Binary"        -0                    3644
2434 alt                  -0  2436  2433        3644
2435 t    "By"            -0                    3645
2436 alt                  -0  2438  2435        3645
2437 t    "Compare"       -0                    3646
2438 alt                  -0  2440  2437        3646
2439 t    "Descending"    -0                    3647
2440 alt                  -0  2442  2439        3647
2441 t    "Distinct"      -0                    3648
2442 alt                  -0  2444  2441        3648
2443 t    "Equals"        -0                    3649
2444 alt                  -0  2446  2443        3649
2445 t    "Explicit"      -0                    3650
2446 alt                  -0  2448  2445        3650
2447 t    "From"          -0                    3651
2448 alt                  -0  2450  2447        3651
2449 t    "Group"         -0                    3652
2450 alt                  -0  2452  2449        3652
2451 t    "Infer"         -0                    3653
2452 alt                  -0  2454  2451        3653
2453 t    "Into"          -0                    3654
2454 alt                  -0  2456  2453        3654
2455 t    "Join"          -0                    3655
2456 alt                  -0  2458  2455        3655
2457 t    "Key"           -0                    3656
2458 alt                  -0  2460  2457        3656
2459 t    "Off"           -0                    3657
2460 alt                  -0  2462  2459        3657
2461 t    "Order"         -0                    3658
2462 alt                  -0  2464  2461        3658
2463 t    "Out"           -0                    3659
2464 alt                  -0  2466  2463        3659
2465 t    "Preserve"      -0                    3660
2466 alt                  -0  2468  2465        3660
2467 t    "Skip"          -0                    3661
2468 alt                  -0  2470  2467        3661
2469 t    "Take"          -0                    3662
2470 alt                  -0  2472  2469        3662
2471 t    "Text"          -0                    3663
2472 alt                  -0  2474  2471        3663
2473 t    "Unicode"       -0                    3664
2474 alt                  -0  2476  2473        3664
2475 t    "Until"         -0                    3665
2476 alt                  -0  2478  2475        3665
2477 t    "Where"         -0                    3666
2478 alt                  -0     0  2477        3666
2479 any                2480                    3673
2480 sem                   0              107722    0
2481 t    "Boolean"     2482                    3680
2482 sem                  -0              107841    0
2483 t    "Date"        2484                    3681
2484 sem                  -0              107884    0
2485 alt                   0  2486  2481        3680
2486 alt                  -0  2489  2483        3681
2487 t    "Char"        2488                    3682
2488 sem                  -0              107928    0
2489 alt                  -0  2492  2487        3682
2490 t    "String"      2491                    3683
2491 sem                  -0              107970    0
2492 alt                  -0  2495  2490        3683
2493 t    "Decimal"     2494                    3684
2494 sem                  -0              108015    0
2495 alt                  -0  2498  2493        3684
2496 t    "Byte"        2497                    3685
2497 sem                  -0              108058    0
2498 alt                  -0  2501  2496        3685
2499 t    "Short"       2500                    3686
2500 sem                  -0              108099    0
2501 alt                  -0  2504  2499        3686
2502 t    "Integer"     2503                    3687
2503 sem                  -0              108143    0
2504 alt                  -0  2507  2502        3687
2505 t    "Long"        2506                    3688
2506 sem                  -0              108184    0
2507 alt                  -0  2510  2505        3688
2508 t    "Single"      2509                    3689
2509 sem                  -0              108227    0
2510 alt                  -0  2513  2508        3689
2511 t    "Double"      2512                    3690
2512 sem                  -0              108271    0
2513 alt                  -0  2516  2511        3690
2514 t    "UInteger"    2515                    3691
2515 sem                  -0              108316    0
2516 alt                  -0  2519  2514        3691
2517 t    "ULong"       2518                    3692
2518 sem                  -0              108359    0
2519 alt                  -0  2522  2517        3692
2520 t    "UShort"      2521                    3693
2521 sem                  -0              108403    0
2522 alt                  -0  2525  2520        3693
2523 t    "SByte"       2524                    3694
2524 sem                  -0              108446    0
2525 alt                  -0     0  2523        3694
2526 t    "ByVal"       2527                    3698
2527 sem                  -0              108535    0
2528 t    "ByRef"       2529                    3699
2529 sem                  -0              108585    0
2530 alt                   0  2531  2526        3698
2531 alt                  -0  2534  2528        3699
2532 t    "Optional"    2533                    3700
2533 sem                  -0              108638    0
2534 alt                  -0  2537  2532        3700
2535 t    "ParamArray"  2536                    3701
2536 sem                  -0              108698    0
2537 alt                  -0     0  2535        3701
2538 t    "Public"      2539                    3705
2539 sem                  -0              108790    0
2540 t    "Protected"   2541                    3706
2541 sem                  -0              108850    0
2542 alt                   0  2543  2538        3705
2543 alt                  -0  2546  2540        3706
2544 t    "Friend"      2545                    3707
2545 sem                  -0              108911    0
2546 alt                  -0  2549  2544        3707
2547 t    "Private"     2548                    3708
2548 sem                  -0              108972    0
2549 alt                  -0  2552  2547        3708
2550 t    "Shared"      2551                    3709
2551 sem                  -0              109031    0
2552 alt                  -0  2555  2550        3709
2553 t    "Shadows"     2554                    3710
2554 sem                  -0              109090    0
2555 alt                  -0  2558  2553        3710
2556 t    "MustInherit  2557                    3711
2557 sem                  -0              109149    0
2558 alt                  -0  2561  2556        3711
2559 t    "NotInherita  2560                    3712
2560 sem                  -0              109215    0
2561 alt                  -0  2564  2559        3712
2562 t    "Partial"     2563                    3713
2563 sem                  -0              109274    0
2564 alt                  -0     0  2562        3713
2565 t    "MustInherit  2566                    3717
2566 sem                  -0              109375    0
2567 t    "Default"     2568                    3718
2568 sem                  -0              109434    0
2569 alt                   0  2570  2565        3717
2570 alt                  -0  2573  2567        3718
2571 t    "Friend"      2572                    3719
2572 sem                  -0              109491    0
2573 alt                  -0  2576  2571        3719
2574 t    "Shadows"     2575                    3720
2575 sem                  -0              109550    0
2576 alt                  -0  2579  2574        3720
2577 t    "Overrides"   2578                    3721
2578 sem                  -0              109605    0
2579 alt                  -0  2582  2577        3721
2580 t    "MustOverrid  2581                    3722
2581 sem                  -0              109667    0
2582 alt                  -0  2585  2580        3722
2583 t    "Private"     2584                    3723
2584 sem                  -0              109726    0
2585 alt                  -0  2588  2583        3723
2586 t    "Protected"   2587                    3724
2587 sem                  -0              109785    0
2588 alt                  -0  2591  2586        3724
2589 t    "Public"      2590                    3725
2590 sem                  -0              109844    0
2591 alt                  -0  2594  2589        3725
2592 t    "NotInherita  2593                    3726
2593 sem                  -0              109906    0
2594 alt                  -0  2597  2592        3726
2595 t    "NotOverrida  2596                    3727
2596 sem                  -0              109968    0
2597 alt                  -0  2600  2595        3727
2598 t    "Shared"      2599                    3728
2599 sem                  -0              110024    0
2600 alt                  -0  2603  2598        3728
2601 t    "Overridable  2602                    3729
2602 sem                  -0              110084    0
2603 alt                  -0  2606  2601        3729
2604 t    "Overloads"   2605                    3730
2605 sem                  -0              110143    0
2606 alt                  -0  2609  2604        3730
2607 t    "ReadOnly"    2608                    3731
2608 sem                  -0              110203    0
2609 alt                  -0  2612  2607        3731
2610 t    "WriteOnly"   2611                    3732
2611 sem                  -0              110263    0
2612 alt                  -0  2615  2610        3732
2613 t    "WithEvents"  2614                    3733
2614 sem                  -0              110325    0
2615 alt                  -0  2618  2613        3733
2616 t    "Dim"         2617                    3734
2617 sem                  -0              110383    0
2618 alt                  -0  2621  2616        3734
2619 t    "Partial"     2620                    3735
2620 sem                  -0              110437    0
2621 alt                  -0     0  2619        3735
2622 sem                2635              110538    0
2623 t    "Public"      2624                    3741
2624 sem               -2635              110584    0
2625 t    "Protected"   2626                    3742
2626 sem               -2635              110631    0
2627 alt               -2635  2628  2623        3741
2628 alt               -2635  2631  2625        3742
2629 t    "Friend"      2630                    3743
2630 sem               -2635              110681    0
2631 alt               -2635  2634  2629        3743
2632 t    "Private"     2633                    3744
2633 sem               -2635              110730    0
2634 alt               -2635     0  2632        3744
2635 iter                  0     0  2627        3740


First & follow symbols:
----------------------

VB
first:   EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Imports" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Option" 
         "Partial" "Private" "Protected" "Public" "Shadows" "Shared" 
         "Structure" 
follow:  EOF 

EndOfStmt
first:   EOL ":" 
follow:  EOF EOL ident LiteralString LiteralCharacter LiteralInteger 
         LiteralDouble LiteralSingle LiteralDecimal LiteralDate XmlOpenTag 
         XmlContent XmlComment XmlCData XmlProcessingInstruction ":" "." "..." 
         ".@" "!" "{" "(" "<" "AddHandler" "AddressOf" "Aggregate" "Ansi" 
         "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" 
         "Case" "Catch" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "Class" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" 
         "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" 
         "Date" "Decimal" "Declare" "Default" "Delegate" "Descending" "Dim" 
         "DirectCast" "Distinct" "Do" "Double" "Else" "ElseIf" "End" "Enum" 
         "Equals" "Erase" "Error" "Event" "Exit" "Explicit" "False" "Finally" 
         "For" "Friend" "From" "Function" "Get" "GetType" "Global" "GoTo" 
         "Group" "If" "Implements" "Imports" "Infer" "Inherits" "Integer" 
         "Interface" "Into" "Join" "Key" "Long" "Loop" "Me" "Module" 
         "MustInherit" "MustOverride" "MyBase" "MyClass" "Namespace" 
         "Narrowing" "New" "Next" "Nothing" "NotInheritable" "NotOverridable" 
         "Object" "Off" "On" "Operator" "Option" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "RaiseEvent" "ReadOnly" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Set" "Shadows" "Shared" "Short" 
         "Single" "Skip" "Static" "Stop" "String" "Structure" "Sub" "SyncLock" 
         "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" "Widening" 
         "With" "WithEvents" "WriteOnly" 

OptionStmt
first:   "Option" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Imports" 
         "Interface" "Module" "MustInherit" "Namespace" "NotInheritable" 
         "Option" "Partial" "Private" "Protected" "Public" "Shadows" "Shared" 
         "Structure" 

ImportsStmt
first:   "Imports" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Imports" 
         "Interface" "Module" "MustInherit" "Namespace" "NotInheritable" 
         "Partial" "Private" "Protected" "Public" "Shadows" "Shared" 
         "Structure" 

GlobalAttributeSection
first:   "<" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 

NamespaceMemberDecl
first:   "<" "Class" "Delegate" "Enum" "Friend" "Interface" "Module" 
         "MustInherit" "Namespace" "NotInheritable" "Partial" "Private" 
         "Protected" "Public" "Shadows" "Shared" "Structure" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "End" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 

OptionValue
first:   "Off" "On" 
follow:  EOL ":" 

ImportClause
first:   ident XmlOpenTag "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" 
         "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ":" "," 

Qualident
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

TypeName
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

Identifier
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlStartInlineVB XmlEndInlineVB XmlCloseTagEmptyElement XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" ":" "," "&" "/" "\\" 
         "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" 
         "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" ":=" 
         "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" "Ansi" "As" 
         "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" 
         "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Lib" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

NamespaceBody
first:   EOL ":" "<" "Class" "Delegate" "End" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "End" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 

AttributeSection
first:   "<" 
follow:  ident "<" "AddHandler" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "ByRef" "By" "Byte" "ByVal" "Char" "Class" 
         "Compare" "Const" "Custom" "Date" "Decimal" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "Double" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Get" "Global" "Group" 
         "Infer" "Integer" "Interface" "Into" "Join" "Key" "Long" "Module" 
         "MustInherit" "MustOverride" "Narrowing" "New" "NotInheritable" 
         "NotOverridable" "Object" "Off" "Operator" "Optional" "Order" "Out" 
         "Overloads" "Overridable" "Overrides" "ParamArray" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "RaiseEvent" 
         "ReadOnly" "RemoveHandler" "SByte" "Set" "Shadows" "Shared" "Short" 
         "Single" "Skip" "String" "Structure" "Sub" "Take" "Text" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

TypeModifier
first:   "Friend" "MustInherit" "NotInheritable" "Partial" "Private" 
         "Protected" "Public" "Shadows" "Shared" 
follow:  "Class" "Delegate" "Enum" "Friend" "Interface" "Module" "MustInherit" 
         "NotInheritable" "Partial" "Private" "Protected" "Public" "Shadows" 
         "Shared" "Structure" 

NonModuleDeclaration
first:   "Class" "Delegate" "Enum" "Interface" "Module" "Structure" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

TypeParameterList
first:   "(" 
follow:  EOL ":" "(" "As" "Handles" "Implements" 

TypeParameter
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "In" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  "," ")" 

TypeParameterConstraints
first:   "As" 
follow:  "," ")" 

TypeParameterConstraint
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Class" "Compare" "Custom" "Date" 
         "Decimal" "Descending" "Distinct" "Double" "Equals" "Explicit" "From" 
         "Global" "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "New" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Structure" "Take" "Text" "UInteger" "ULong" 
         "Unicode" "Until" "UShort" "Where" 
follow:  "," "}" ")" 

ClassBaseType
first:   "Inherits" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Implements" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Narrowing" "NotInheritable" "NotOverridable" "Off" 
         "Operator" "Order" "Out" "Overloads" "Overridable" "Overrides" 
         "Partial" "Preserve" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" 
         "Unicode" "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

TypeImplementsClause
first:   "Implements" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Implements" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Narrowing" "NotInheritable" "NotOverridable" "Off" 
         "Operator" "Order" "Out" "Overloads" "Overridable" "Overrides" 
         "Partial" "Preserve" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" 
         "Unicode" "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

ClassBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "Enum" "Equals" "Event" 
         "Explicit" "Friend" "From" "Function" "Group" "Infer" "Interface" 
         "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" "Narrowing" 
         "NotInheritable" "NotOverridable" "Off" "Operator" "Order" "Out" 
         "Overloads" "Overridable" "Overrides" "Partial" "Preserve" "Private" 
         "Property" "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
         "WithEvents" "WriteOnly" 
follow:  "End" 

ModuleBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

StructureBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

NonArrayTypeName
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

EnumBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "End" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

InterfaceBase
first:   "Inherits" 
follow:  EOL ":" "<" "Class" "Default" "Delegate" "Dim" "End" "Enum" "Event" 
         "Friend" "Function" "Inherits" "Interface" "Module" "MustInherit" 
         "MustOverride" "NotInheritable" "NotOverridable" "Overloads" 
         "Overridable" "Overrides" "Partial" "Private" "Property" "Protected" 
         "Public" "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 

InterfaceBody
first:   EOL ":" "<" "Class" "Default" "Delegate" "Dim" "End" "Enum" "Event" 
         "Friend" "Function" "Interface" "Module" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

FormalParameterList
first:   ident "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "ByRef" "By" "ByVal" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Optional" "Order" "Out" "ParamArray" "Preserve" "Skip" "Take" "Text" 
         "Unicode" "Until" "Where" 
follow:  ")" 

MemberModifier
first:   "Default" "Dim" "Friend" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "WithEvents" "WriteOnly" 
follow:  ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Class" "Compare" "Const" "Custom" "Declare" "Default" "Delegate" 
         "Descending" "Dim" "Distinct" "Enum" "Equals" "Event" "Explicit" 
         "Friend" "From" "Function" "Group" "Infer" "Interface" "Into" "Join" 
         "Key" "Module" "MustInherit" "MustOverride" "Narrowing" 
         "NotInheritable" "NotOverridable" "Off" "Operator" "Order" "Out" 
         "Overloads" "Overridable" "Overrides" "Partial" "Preserve" "Private" 
         "Property" "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
         "WithEvents" "WriteOnly" 

ClassMemberDecl
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Class" "Compare" "Const" "Custom" "Declare" "Delegate" "Descending" 
         "Distinct" "Enum" "Equals" "Event" "Explicit" "From" "Function" 
         "Group" "Infer" "Interface" "Into" "Join" "Key" "Module" "Narrowing" 
         "Off" "Operator" "Order" "Out" "Preserve" "Property" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

StructureMemberDecl
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Class" "Compare" "Const" "Custom" "Declare" "Delegate" "Descending" 
         "Distinct" "Enum" "Equals" "Event" "Explicit" "From" "Function" 
         "Group" "Infer" "Interface" "Into" "Join" "Key" "Module" "Narrowing" 
         "Off" "Operator" "Order" "Out" "Preserve" "Property" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

EnumMemberDecl
first:   ident "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "By" "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" 
         "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "End" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 

InterfaceMemberDecl
first:   "<" "Class" "Default" "Delegate" "Dim" "Enum" "Event" "Friend" 
         "Function" "Interface" "Module" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 
follow:  EOL ":" "<" "Class" "Default" "Delegate" "Dim" "End" "Enum" "Event" 
         "Friend" "Function" "Interface" "Module" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 

Expr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ImplementsClause
first:   "Implements" 
follow:  EOL ":" 

HandlesClause
first:   "Handles" 
follow:  EOL ":" 

Block
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "End" "Equals" "Erase" 
         "Error" "Exit" "Explicit" "False" "For" "From" "GetType" "Global" 
         "GoTo" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  "Case" "Catch" "Else" "ElseIf" "End" "Finally" "Loop" "Next" 

Charset
first:   "Ansi" "Auto" "Unicode" 
follow:  "Function" "Sub" 

IdentifierForFieldDeclaration
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Descending" "Distinct" "Equals" "Explicit" "From" "Group" 
         "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" "Skip" 
         "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlStartInlineVB XmlEndInlineVB XmlCloseTagEmptyElement XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" ":" "," "&" "/" "\\" 
         "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" 
         "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" ":=" 
         "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" "Ansi" "As" 
         "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" 
         "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Lib" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

VariableDeclaratorPartAfterIdentifier
first:   "=" "(" "As" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

VariableDeclarator
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ConstantDeclarator
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ":" "," 

ObjectCreateExpression
first:   "New" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

AccessorDecls
first:   "<" "Friend" "Get" "Private" "Protected" "Public" "Set" 
follow:  "End" 

EventAccessorDeclaration
first:   "<" "AddHandler" "RaiseEvent" "RemoveHandler" 
follow:  "<" "AddHandler" "End" "RaiseEvent" "RemoveHandler" 

OverloadableOperator
first:   ident "=" "&" "/" "\\" "-" "+" "^" "*" ">" "<" "<>" ">=" "<=" "<<" 
         ">>" "Aggregate" "And" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "By" "Compare" "CType" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Like" "Mod" 
         "Off" "Or" "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" 
         "Until" "Where" "Xor" 
follow:  "(" 

FormalParameter
first:   ident "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "ByRef" "By" "ByVal" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Optional" "Order" "Out" "ParamArray" "Preserve" "Skip" "Take" "Text" 
         "Unicode" "Until" "Where" 
follow:  "," ")" 

GetAccessorDecl
first:   "Friend" "Get" "Private" "Protected" "Public" 
follow:  "<" "End" "Friend" "Private" "Protected" "Public" "Set" 

SetAccessorDecl
first:   "Friend" "Private" "Protected" "Public" "Set" 
follow:  "<" "End" "Friend" "Get" "Private" "Protected" "Public" 

PropertyAccessorAccessModifier
first:   "Friend" "Private" "Protected" "Public" 
follow:  "Get" "Set" 

ArrayInitializationModifier
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" 
         "Integer" "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" 
         "Mod" "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" 
         "Order" "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" 
         "RemoveHandler" "Resume" "Return" "SByte" "Select" "Short" "Single" 
         "Skip" "Static" "Step" "Stop" "String" "SyncLock" "Take" "Text" 
         "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" "With" 
         "Xor" 

ArrayNameModifier
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" 
         "Integer" "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" 
         "Mod" "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" 
         "Order" "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" 
         "RemoveHandler" "Resume" "Return" "SByte" "Select" "Short" "Single" 
         "Skip" "Static" "Step" "Stop" "String" "SyncLock" "Take" "Text" 
         "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" "With" 
         "Xor" 

InitializationRankList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  ")" 

CollectionInitializer
first:   "{" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

EventMemberSpecifier
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Me" "MyBase" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ":" "," 

IdentifierOrKeyword
first:   EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlStartInlineVB XmlEndInlineVB XmlCloseTagEmptyElement XmlOpenEndTag 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "?" "*" "{" "}" "(" ")" 
         ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" ":=" "AddHandler" "AddressOf" "Aggregate" "Alias" "And" 
         "AndAlso" "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "ByRef" "By" "Byte" "ByVal" "Call" "Case" "Catch" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "Class" "CLng" 
         "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" 
         "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "DirectCast" "Distinct" "Do" 
         "Double" "Each" "Else" "ElseIf" "End" "EndIf" "Enum" "Equals" "Erase" 
         "Error" "Event" "Exit" "Explicit" "False" "Finally" "For" "Friend" 
         "From" "Function" "Get" "GetType" "Global" "GoSub" "GoTo" "Group" 
         "Handles" "If" "Implements" "Imports" "In" "Infer" "Inherits" 
         "Integer" "Interface" "Into" "Is" "IsNot" "Join" "Key" "Let" "Lib" 
         "Like" "Long" "Loop" "Me" "Mod" "Module" "MustInherit" "MustOverride" 
         "MyBase" "MyClass" "Namespace" "Narrowing" "New" "Next" "Not" 
         "Nothing" "NotInheritable" "NotOverridable" "Object" "Of" "Off" "On" 
         "Operator" "Option" "Optional" "Or" "Order" "OrElse" "Out" 
         "Overloads" "Overridable" "Overrides" "ParamArray" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "RaiseEvent" 
         "ReadOnly" "ReDim" "Rem" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Set" "Shadows" "Shared" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "Strict" "String" "Structure" "Sub" "SyncLock" "Take" 
         "Text" "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Variant" "Wend" "When" 
         "Where" "While" "Widening" "With" "WithEvents" "WriteOnly" "Xor" 
         "GetXmlNamespace" ??? 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlEndInlineVB XmlContent XmlComment XmlCData 
         XmlProcessingInstruction "=" ":" "," "&" "/" "\\" "." "..." ".@" "!" 
         "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" 
         "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" ":=" "AddHandler" 
         "AddressOf" "Aggregate" "And" "AndAlso" "Ansi" "As" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" "Equals" 
         "Erase" "Error" "Exit" "Explicit" "False" "For" "From" "Function" 
         "GetType" "Global" "GoTo" "Group" "Handles" "If" "Implements" "In" 
         "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" 
         "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" "Nothing" "Object" 
         "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" "RaiseEvent" 
         "ReDim" "RemoveHandler" "Resume" "Return" "SByte" "Select" "Short" 
         "Single" "Skip" "Static" "Step" "Stop" "String" "Sub" "SyncLock" 
         "Take" "Text" "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "When" "Where" 
         "While" "With" "Xor" 

QueryExpr
first:   "Aggregate" "From" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

LambdaExpr
first:   "Function" "Sub" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

DisjunctionExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

AssignmentOperator
first:   "=" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" 
follow:  ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 

SimpleExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

SimpleNonInvocationExpression
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

TypeArgumentList
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  ")" 

InvocationExpression
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

PrimitiveTypeName
first:   "Boolean" "Byte" "Char" "Date" "Decimal" "Double" "Integer" "Long" 
         "SByte" "Short" "Single" "String" "UInteger" "ULong" "UShort" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "?" "*" "{" "}" "(" ")" 
         ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

CastTarget
first:   "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "CInt" "CLng" "CObj" 
         "CSByte" "CShort" "CSng" "CStr" "CUInt" "CULng" "CUShort" 
follow:  "(" 

GetTypeTypeName
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  ")" 

ConditionalExpression
first:   "If" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

XmlLiteralExpression
first:   XmlOpenTag XmlContent XmlComment XmlCData XmlProcessingInstruction 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

XmlContentExpression
first:   XmlContent XmlComment XmlCData XmlProcessingInstruction 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

XmlElement
first:   XmlOpenTag 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlStartInlineVB 
         XmlEndInlineVB XmlOpenEndTag XmlContent XmlComment XmlCData 
         XmlProcessingInstruction "=" ":" "," "&" "/" "\\" "." "..." ".@" "!" 
         "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" 
         "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" "AddHandler" "AddressOf" 
         "Aggregate" "And" "AndAlso" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "Call" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "Const" 
         "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" 
         "CUShort" "Custom" "Date" "Decimal" "Descending" "Dim" "DirectCast" 
         "Distinct" "Do" "Double" "Else" "End" "Equals" "Erase" "Error" "Exit" 
         "Explicit" "False" "For" "From" "GetType" "Global" "GoTo" "Group" 
         "If" "Implements" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" 
         "Where" "While" "With" "Xor" 

XmlNestedContent
first:   XmlOpenTag XmlStartInlineVB XmlContent XmlComment XmlCData 
         XmlProcessingInstruction 
follow:  XmlOpenTag XmlStartInlineVB XmlOpenEndTag XmlContent XmlComment 
         XmlCData XmlProcessingInstruction 

XmlAttribute
first:   ident XmlStartInlineVB "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 
follow:  ident XmlCloseTag XmlStartInlineVB XmlCloseTagEmptyElement 
         "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 

ArgumentList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "," "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" 
         "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" 
         "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" 
         "Custom" "Date" "Decimal" "Descending" "DirectCast" "Distinct" 
         "Double" "Equals" "Explicit" "False" "From" "Function" "GetType" 
         "Global" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" 
         "Me" "MyBase" "MyClass" "New" "Not" "Nothing" "Object" "Off" "Order" 
         "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" "Sub" 
         "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" 
         "Until" "UShort" "Where" 
follow:  ")" 

ConjunctionExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

NotExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ComparisonExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ShiftExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ConcatenationExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

AdditiveExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ModuloExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

IntegerDivisionExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

MultiplicativeExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

UnaryExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ExponentiationExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

NormalOrReDimArgumentList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "," "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" 
         "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" 
         "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" 
         "Custom" "Date" "Decimal" "Descending" "DirectCast" "Distinct" 
         "Double" "Equals" "Explicit" "False" "From" "Function" "GetType" 
         "Global" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" 
         "Me" "MyBase" "MyClass" "New" "Not" "Nothing" "Object" "Off" "Order" 
         "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" "Sub" 
         "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" 
         "Until" "UShort" "Where" 
follow:  ")" 

ArrayTypeModifiers
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

MemberInitializer
first:   "." "Key" 
follow:  "," "}" 

SubLambdaExpression
first:   "Sub" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

FunctionLambdaExpression
first:   "Function" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

EmbeddedStatement
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "Equals" "Erase" "Error" 
         "Exit" "Explicit" "False" "For" "From" "GetType" "Global" "GoTo" 
         "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

FromOrAggregateQueryOperator
first:   "Aggregate" "From" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

QueryOperator
first:   "Aggregate" "Distinct" "From" "Group" "Join" "Let" "Order" "Select" 
         "Skip" "Take" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

FromQueryOperator
first:   "From" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

AggregateQueryOperator
first:   "Aggregate" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

SelectQueryOperator
first:   "Select" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

DistinctQueryOperator
first:   "Distinct" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

WhereQueryOperator
first:   "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

OrderByQueryOperator
first:   "Order" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

PartitionQueryOperator
first:   "Skip" "Take" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

LetQueryOperator
first:   "Let" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

JoinQueryOperator
first:   "Join" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

GroupJoinQueryOperator
first:   "Group" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

GroupByQueryOperator
first:   "Group" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

OrderExpressionList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

OrderExpression
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ExpressionRangeVariableDeclarationList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

CollectionRangeVariableDeclarationList
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

CollectionRangeVariableDeclaration
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ExpressionRangeVariableDeclaration
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

JoinCondition
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

Argument
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  "," ")" "To" 

QualIdentAndTypeArguments
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

RankList
first:   "," 
follow:  ")" 

Attribute
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Global" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  ident "," ">" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Global" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 

AttributeArguments
first:   "(" 
follow:  ident "," ">" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Global" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 

ParameterModifier
first:   "ByRef" "ByVal" "Optional" "ParamArray" 
follow:  ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "ByRef" "By" "ByVal" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Optional" "Order" "Out" "ParamArray" "Preserve" "Skip" "Take" "Text" 
         "Unicode" "Until" "Where" 

Statement
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "Equals" "Erase" "Error" 
         "Exit" "Explicit" "False" "For" "From" "GetType" "Global" "GoTo" 
         "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  EOL ":" 

LabelName
first:   ident LiteralInteger "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" 
         "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

LocalDeclarationStatement
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Const" "Custom" "Descending" "Dim" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" 
         "Out" "Preserve" "Skip" "Static" "Take" "Text" "Unicode" "Until" 
         "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ExitStatement
first:   "Exit" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

TryStatement
first:   "Try" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ContinueStatement
first:   "Continue" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

WithStatement
first:   "With" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

WhileOrUntil
first:   "Until" "While" 
follow:  ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 

LoopControlVariable
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  "=" "In" 

ReDimClause
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

SingleLineStatementList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "End" "Equals" "Erase" 
         "Error" "Exit" "Explicit" "False" "For" "From" "GetType" "Global" 
         "GoTo" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

CaseClauses
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" ">" "<" "<>" ">=" "<=" "AddressOf" "Aggregate" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" 
         "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" "DirectCast" 
         "Distinct" "Double" "Else" "Equals" "Explicit" "False" "From" 
         "Function" "GetType" "Global" "Group" "If" "Infer" "Integer" "Into" 
         "Is" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ":" 

OnErrorStatement
first:   "On" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

GotoStatement
first:   "GoTo" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ResumeStatement
first:   "Resume" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ReDimClauseInternal
first:   "." "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

CaseClause
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" ">" "<" "<>" ">=" "<=" "AddressOf" "Aggregate" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" 
         "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" "DirectCast" 
         "Distinct" "Double" "Else" "Equals" "Explicit" "False" "From" 
         "Function" "GetType" "Global" "Group" "If" "Infer" "Integer" "Into" 
         "Is" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ":" "," 

CatchClauses
first:   "Catch" 
follow:  "End" "Finally" 

