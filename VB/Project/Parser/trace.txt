Graph nodes:
----------------------------------------------------
   n type name          next  down   sub   pos  line
                               val  code
----------------------------------------------------
   0 eps                   0                       0
   1 nt   EndOfStmt       -2                     270
   2 iter                  6     0     1         270
   3 nt   OptionStmt       5                     271
   4 nt   EndOfStmt       -5                     271
   5 iter                 -6     0     4         271
   6 iter                 10     0     3         271
   7 nt   ImportsStmt      9                     272
   8 nt   EndOfStmt       -9                     272
   9 iter                -10     0     8         272
  10 iter                 15     0     7         272
  11 rslv                 12   273
  12 nt   GlobalAttrib    14                     273
  13 nt   EndOfStmt      -14                     273
  14 iter                -15     0    13         273
  15 iter                 19     0    11         273
  16 nt   NamespaceMem    18                     274
  17 nt   EndOfStmt      -18                     274
  18 iter                -19     0    17         274
  19 iter                  0     0    16         274
  20 t    "Option"        21                     278
  21 sem                  30               3455    0
  22 t    "Explicit"      24                     280
  23 nt   OptionValue    -25               3522  280
  24 opt                  25     0    23         280
  25 sem                 -45               3539    0
  26 t    "Strict"        28                     283
  27 nt   OptionValue    -29               3629  283
  28 opt                  29     0    27         283
  29 sem                 -45               3646    0
  30 alt                  45    31    22         280
  31 alt                 -45    39    26         283
  32 t    "Compare"       37                     286
  33 t    "Binary"        34                     286
  34 sem                 -45               3735    0
  35 t    "Text"          36                     287
  36 sem                 -45               3818    0
  37 alt                 -45    38    33         286
  38 alt                 -45     0    35         287
  39 alt                 -45    44    32         286
  40 t    "Infer"         42                     290
  41 nt   OptionValue    -43               3919  290
  42 opt                  43     0    41         290
  43 sem                 -45               3936    0
  44 alt                 -45     0    40         290
  45 nt   EndOfStmt       46                     293
  46 sem                   0               4016    0
  47 t    "On"            48                     305
  48 sem                  -0               4187    0
  49 t    "Off"           50                     307
  50 sem                  -0               4218    0
  51 alt                   0    52    47         305
  52 alt                  -0     0    49         307
  53 sync                 56                     312
  54 t    EOL             -0                     312
  55 t    ":"             -0                     312
  56 alt                   0    57    54         312
  57 alt                  -0     0    55         312
  58 t    "Imports"       59                     318
  59 sem                  60               4367    0
  60 nt   ImportClause    61               4431  323
  61 sem                  65               4441    0
  62 t    ","             63                     325
  63 nt   ImportClause    64               4502  325
  64 sem                 -65               4512    0
  65 iter                 66     0    62         324
  66 nt   EndOfStmt       67                     327
  67 sem                   0               4573    0
  68 nt   Qualident       71               4910  343
  69 t    "="             70                     344
  70 nt   TypeName       -72               4943  344
  71 opt                  72     0    69         344
  72 sem                  -0               4972    0
  73 sem                  74               5174    0
  74 t    XmlOpenTag      75                     355
  75 nt   Identifier      76                     355
  76 sem                  77               5227    0
  77 t    "="             78                     355
  78 t    LiteralStrin    79                     355
  79 sem                  80               5267    0
  80 t    XmlCloseTag     -0                     355
  81 alt                   0    82    68         343
  82 alt                  -0     0    73           0
  83 t    "Namespace"     84                     367
  84 sem                  85               5569    0
  85 nt   Qualident       86               5618  371
  86 sem                  87               5641    0
  87 nt   EndOfStmt       88                     378
  88 nt   NamespaceBod    89                     379
  89 sem                  -0               5807    0
  90 nt   AttributeSec    91               5887  385
  91 sem                 -92               5903    0
  92 iter                 94     0    90         385
  93 nt   TypeModifier   -94               5950  386
  94 iter                 95     0    93         386
  95 nt   NonModuleDec    -0               5976  386
  96 alt                   0    97    83         367
  97 alt                  -0     0    92         385
  98 rslv                 99   396
  99 t    "("            100                     397
 100 t    "Of"           101                     397
 101 nt   TypeParamete   102               6212  397
 102 sem                 106               6236    0
 103 t    ","            104                     402
 104 nt   TypeParamete   105               6316  402
 105 sem                -106               6342    0
 106 iter                107     0   103         401
 107 t    ")"             -0                     407
 108 opt                   0     0    98         395
 109 t    "In"           110                     416
 110 sem                -116               6600    0
 111 t    "Out"          112                     416
 112 sem                -116               6657    0
 113 alt                -116   114   109         416
 114 alt                -116     0   111         416
 115 opt                 116     0   113         416
 116 nt   Identifier     117                     416
 117 sem                 119               6715    0
 118 nt   TypeParamete  -120               6827  417
 119 opt                 120     0   118         417
 120 sem                   0               6850    0
 121 t    "As"           132                     433
 122 t    "{"            123                     435
 123 nt   TypeParamete   124               7127  436
 124 sem                 128               7146    0
 125 t    ","            126                     438
 126 nt   TypeParamete   127               7250  439
 127 sem                -128               7269    0
 128 iter                129     0   125         437
 129 t    "}"             -0                     441
 130 nt   TypeParamete   131               7373  442
 131 sem                  -0               7392    0
 132 alt                   0   133   122         435
 133 alt                  -0     0   130         442
 134 t    "Class"        135                     449
 135 sem                  -0               7601    0
 136 t    "Structure"    137                     450
 137 sem                  -0               7667    0
 138 alt                   0   139   134         449
 139 alt                  -0   142   136         450
 140 t    "New"          141                     451
 141 sem                  -0               7729    0
 142 alt                  -0   144   140         451
 143 nt   TypeName        -0               7787  452
 144 alt                  -0     0   143         452
 145 sem                 146               8000    0
 146 t    "Class"        147                     463
 147 sem                 148               8068    0
 148 nt   Identifier     149                     471
 149 sem                 150               8317    0
 150 nt   TypeParamete   151               8363  472
 151 nt   EndOfStmt      152                     473
 152 sem                 155               8399    0
 153 nt   ClassBaseTyp   154               8460  475
 154 sem                -158               8476    0
 155 opt                 158     0   153         475
 156 nt   TypeImplemen   157               8552  476
 157 sem                -158               8575    0
 158 iter                159     0   156         476
 159 nt   ClassBody      160               8636  477
 160 t    "End"          161                     478
 161 t    "Class"        162                     478
 162 sem                 163               8664    0
 163 nt   EndOfStmt      164                     479
 164 sem                  -0               8724    0
 165 t    "Module"       166                     483
 166 sem                 167               8764    0
 167 nt   Identifier     168                     492
 168 sem                 169               9045    0
 169 nt   EndOfStmt      170                     493
 170 sem                 171               9087    0
 171 nt   ModuleBody     172               9143  495
 172 sem                  -0               9160    0
 173 alt                   0   174   145           0
 174 alt                  -0   187   165         483
 175 t    "Structure"    176                     499
 176 sem                 177               9203    0
 177 nt   Identifier     178                     508
 178 sem                 179               9487    0
 179 nt   TypeParamete   180               9533  509
 180 nt   EndOfStmt      181                     510
 181 sem                 184               9569    0
 182 nt   TypeImplemen   183               9637  512
 183 sem                -184               9660    0
 184 iter                185     0   182         512
 185 nt   StructureBod   186               9724  513
 186 sem                  -0               9741    0
 187 alt                  -0   200   175         499
 188 t    "Enum"         189                     518
 189 sem                 190               9791    0
 190 nt   Identifier     191                     528
 191 sem                 195              10073    0
 192 t    "As"           193                     529
 193 nt   NonArrayType   194              10125  529
 194 sem                -196              10148    0
 195 opt                 196     0   192         529
 196 nt   EndOfStmt      197                     530
 197 sem                 198              10216    0
 198 nt   EnumBody       199              10270  532
 199 sem                  -0              10287    0
 200 alt                  -0   213   188         518
 201 t    "Interface"    202                     537
 202 sem                 203              10342    0
 203 nt   Identifier     204                     546
 204 sem                 205              10628    0
 205 nt   TypeParamete   206              10674  547
 206 nt   EndOfStmt      207                     548
 207 sem                 210              10710    0
 208 nt   InterfaceBas   209              10771  550
 209 sem                -210              10794    0
 210 iter                211     0   208         550
 211 nt   InterfaceBod   212              10859  551
 212 sem                  -0              10876    0
 213 alt                  -0   246   201         537
 214 t    "Delegate"     215                     556
 215 sem                 241              10929    0
 216 t    "Sub"          217                     565
 217 nt   Identifier     218                     565
 218 sem                 219              11310    0
 219 nt   TypeParamete   225              11362  566
 220 t    "("            222                     567
 221 nt   FormalParame  -223              11418  567
 222 opt                 223     0   221         567
 223 t    ")"            224                     567
 224 sem                -243              11430    0
 225 opt                -243     0   220         567
 226 t    "Function"     227                     569
 227 nt   Identifier     228                     569
 228 sem                 229              11498    0
 229 nt   TypeParamete   235              11550  570
 230 t    "("            232                     571
 231 nt   FormalParame  -233              11606  571
 232 opt                 233     0   231         571
 233 t    ")"            234                     571
 234 sem                -240              11618    0
 235 opt                 240     0   230         571
 236 t    "As"           237                     572
 237 sem                 238              11666    0
 238 nt   TypeName       239              11698  572
 239 sem                -243              11711    0
 240 opt                -243     0   236         572
 241 alt                 243   242   216         565
 242 alt                -243     0   226         569
 243 sem                 244              11759    0
 244 nt   EndOfStmt      245                     575
 245 sem                  -0              11825    0
 246 alt                  -0     0   214         556
 247 nt   EndOfStmt     -248                     582
 248 iter                252     0   247         582
 249 nt   NamespaceMem   251                     584
 250 nt   EndOfStmt     -251                     585
 251 iter               -252     0   250         585
 252 iter                253     0   249         583
 253 t    "End"          254                     587
 254 t    "Namespace"    255                     587
 255 nt   EndOfStmt        0                     588
 256 nt   EndOfStmt     -257                     593
 257 iter                267     0   256         593
 258 sem                 261              12191    0
 259 nt   AttributeSec   260              12326  598
 260 sem                -261              12342    0
 261 iter                263     0   259         598
 262 nt   MemberModifi  -263              12392  599
 263 iter                264     0   262         599
 264 nt   ClassMemberD   266              12416  600
 265 nt   EndOfStmt     -266                     601
 266 iter               -267     0   265         601
 267 iter                  0     0   258         594
 268 nt   EndOfStmt     -269                     607
 269 iter                279     0   268         607
 270 sem                 273              12632    0
 271 nt   AttributeSec   272              12767  612
 272 sem                -273              12783    0
 273 iter                275     0   271         612
 274 nt   MemberModifi  -275              12833  613
 275 iter                276     0   274         613
 276 nt   StructureMem   278              12861  614
 277 nt   EndOfStmt     -278                     615
 278 iter               -279     0   277         615
 279 iter                280     0   270         608
 280 t    "End"          281                     617
 281 t    "Structure"    282                     617
 282 sem                 283              12952    0
 283 nt   EndOfStmt        0                     618
 284 nt   EndOfStmt     -285                     624
 285 iter                295     0   284         624
 286 sem                 289              13162    0
 287 nt   AttributeSec   288              13297  629
 288 sem                -289              13313    0
 289 iter                291     0   287         629
 290 nt   MemberModifi  -291              13363  630
 291 iter                292     0   290         630
 292 nt   ClassMemberD   294              13387  631
 293 nt   EndOfStmt     -294                     632
 294 iter               -295     0   293         632
 295 iter                296     0   286         625
 296 t    "End"          297                     634
 297 t    "Module"       298                     634
 298 sem                 299              13475    0
 299 nt   EndOfStmt        0                     635
 300 nt   EndOfStmt     -301                     640
 301 iter                306     0   300         640
 302 nt   EnumMemberDe   303              13677  642
 303 sem                 305              13694    0
 304 nt   EndOfStmt     -305                     646
 305 iter               -306     0   304         646
 306 iter                307     0   302         641
 307 t    "End"          308                     648
 308 t    "Enum"         309                     648
 309 sem                 310              13784    0
 310 nt   EndOfStmt        0                     649
 311 nt   EndOfStmt     -312                     653
 312 iter                316     0   311         653
 313 nt   InterfaceMem   315                     655
 314 nt   EndOfStmt     -315                     656
 315 iter               -316     0   314         656
 316 iter                317     0   313         654
 317 t    "End"          318                     658
 318 t    "Interface"    319                     658
 319 sem                 320              14044    0
 320 nt   EndOfStmt        0                     659
 321 nt   AttributeSec   322              14625  674
 322 sem                -323              14643    0
 323 iter                325     0   321         674
 324 nt   MemberModifi  -325              14818  677
 325 iter                352     0   324         677
 326 t    "Event"        327                     679
 327 sem                 328              14850    0
 328 nt   Identifier     329                     684
 329 sem                 334              14954    0
 330 t    "("            332                     685
 331 nt   FormalParame  -333              15002  685
 332 opt                 333     0   331         685
 333 t    ")"           -337                     685
 334 opt                 337     0   330         685
 335 t    "As"           336                     686
 336 nt   TypeName      -338              15032  686
 337 opt                 338     0   335         686
 338 nt   EndOfStmt      339                     687
 339 sem                  -0              15067    0
 340 t    "Sub"          341                     697
 341 sem                 342              15342    0
 342 nt   Identifier     343                     702
 343 sem                 344              15448    0
 344 nt   TypeParamete   349              15486  703
 345 t    "("            347                     704
 346 nt   FormalParame  -348              15528  704
 347 opt                 348     0   346         704
 348 t    ")"           -350                     704
 349 opt                 350     0   345         704
 350 nt   EndOfStmt      351                     705
 351 sem                  -0              15562    0
 352 alt                  -0   353   326         679
 353 alt                  -0   371   340         697
 354 t    "Function"     355                     720
 355 sem                 356              15928    0
 356 nt   Identifier     357                     725
 357 sem                 358              16033    0
 358 nt   TypeParamete   363              16071  726
 359 t    "("            361                     727
 360 nt   FormalParame  -362              16113  727
 361 opt                 362     0   360         727
 362 t    ")"           -368                     727
 363 opt                 368     0   359         727
 364 t    "As"           366                     728
 365 nt   AttributeSec  -366              16153  728
 366 iter                367     0   365         728
 367 nt   TypeName      -369              16196  728
 368 opt                 369     0   364         728
 369 sem                 370              16218    0
 370 nt   EndOfStmt       -0                     746
 371 alt                  -0   387   354         720
 372 t    "Property"     373                     748
 373 sem                 374              16800    0
 374 nt   Identifier     375                     753
 375 sem                 380              16908    0
 376 t    "("            378                     754
 377 nt   FormalParame  -379              16957  754
 378 opt                 379     0   377         754
 379 t    ")"           -383                     754
 380 opt                 383     0   376         754
 381 t    "As"           382                     755
 382 nt   TypeName      -384              16987  755
 383 opt                 384     0   381         755
 384 sem                 385              17009    0
 385 nt   EndOfStmt      386                     761
 386 sem                  -0              17117    0
 387 alt                  -0     0   372         748
 388 nt   NonModuleDec    -0              17387  771
 389 alt                   0   390   323         674
 390 alt                  -0     0   388         771
 391 nt   AttributeSec   392              17663  781
 392 sem                -393              17679    0
 393 iter                394     0   391         781
 394 nt   Identifier     395                     782
 395 sem                 399              17730    0
 396 t    "="            397                     789
 397 nt   Expr           398              17914  789
 398 sem                -400              17927    0
 399 opt                 400     0   396         789
 400 sem                 401              17965    0
 401 nt   EndOfStmt        0                     791
 402 nt   StructureMem     0              18132  795
 403 t    "Inherits"     404                     802
 404 nt   TypeName       405              18247  803
 405 nt   EndOfStmt        0                     804
 406 nt   NonModuleDec    -0              18700  817
 407 t    "Sub"          408                     819
 408 sem                 456              18746    0
 409 sem                 410              18797    0
 410 nt   Identifier     411                     829
 411 sem                 412              18990    0
 412 nt   TypeParamete   417              19065  834
 413 t    "("            415                     835
 414 nt   FormalParame  -416              19107  835
 415 opt                 416     0   414         835
 416 t    ")"           -422                     835
 417 opt                 422     0   413         835
 418 nt   ImplementsCl  -423              19151  838
 419 nt   HandlesClaus  -423              19199  840
 420 alt                -423   421   418         838
 421 alt                -423     0   419         840
 422 opt                 423     0   420         836
 423 sem                 437              19235    0
 424 rslv                425   846
 425 nt   EndOfStmt      426                     847
 426 sem                  -0              19375    0
 427 t    EOL            428                     860
 428 sem                 429              19839    0
 429 sem                 430              20290    0
 430 nt   Block          431              20329  874
 431 t    "End"          432                     875
 432 t    "Sub"          433                     875
 433 sem                 434              20363    0
 434 sem                 435              20502    0
 435 sem                 436              20560    0
 436 nt   EndOfStmt       -0                     884
 437 alt                  -0   438   424         846
 438 alt                  -0     0   427         860
 439 t    "New"          444                     887
 440 t    "("            442                     887
 441 nt   FormalParame  -443              20686  887
 442 opt                 443     0   441         887
 443 t    ")"           -445                     887
 444 opt                 445     0   440         887
 445 sem                 446              20703    0
 446 sem                 447              20745    0
 447 t    EOL            448                     890
 448 sem                 449              20814    0
 449 nt   Block          450              20852  893
 450 t    "End"          451                     894
 451 t    "Sub"          452                     894
 452 sem                 453              20884    0
 453 sem                 454              21017    0
 454 nt   EndOfStmt      455                     902
 455 sem                  -0              21081    0
 456 alt                  -0   457   409           0
 457 alt                  -0     0   439         887
 458 alt                   0   459   406         817
 459 alt                  -0   495   407         819
 460 t    "Function"     461                     914
 461 sem                 462              21420    0
 462 nt   Identifier     463                     923
 463 sem                 464              21726    0
 464 nt   TypeParamete   469              21763  924
 465 t    "("            467                     925
 466 nt   FormalParame  -468              21804  925
 467 opt                 468     0   466         925
 468 t    ")"           -475                     925
 469 opt                 475     0   465         925
 470 t    "As"           473                     926
 471 nt   AttributeSec   472              21848  927
 472 sem                -473              21894    0
 473 iter                474     0   471         926
 474 nt   TypeName      -476              22082  935
 475 opt                 476     0   470         926
 476 sem                 481              22102    0
 477 nt   ImplementsCl  -482              22214  943
 478 nt   HandlesClaus  -482              22260  945
 479 alt                -482   480   477         943
 480 alt                -482     0   478         945
 481 opt                 482     0   479         941
 482 sem                 493              22293    0
 483 rslv                484   951
 484 nt   EndOfStmt      485                     952
 485 sem                  -0              22429    0
 486 t    EOL            487                     967
 487 sem                 488              22877    0
 488 nt   Block          489              23343  982
 489 t    "End"          490                     983
 490 t    "Function"     491                     983
 491 sem                 492              23383    0
 492 nt   EndOfStmt       -0                     992
 493 alt                  -0   494   483         951
 494 alt                  -0     0   486         967
 495 alt                  -0   539   460         914
 496 t    "Declare"      497                     996
 497 sem                 499              23757    0
 498 nt   Charset       -537              23993 1005
 499 opt                 537     0   498        1005
 500 t    "Sub"          501                    1007
 501 nt   Identifier     502                    1008
 502 sem                 503              24050    0
 503 t    "Lib"          504                    1009
 504 t    LiteralStrin   505                    1009
 505 sem                 509              24095    0
 506 t    "Alias"        507                    1010
 507 t    LiteralStrin   508                    1010
 508 sem                -514              24164    0
 509 opt                 514     0   506        1010
 510 t    "("            512                    1011
 511 nt   FormalParame  -513              24234 1011
 512 opt                 513     0   511        1011
 513 t    ")"           -515                    1011
 514 opt                 515     0   510        1011
 515 nt   EndOfStmt      516                    1012
 516 sem                  -0              24271    0
 517 t    "Function"     518                    1020
 518 nt   Identifier     519                    1021
 519 sem                 520              24622    0
 520 t    "Lib"          521                    1022
 521 t    LiteralStrin   522                    1022
 522 sem                 526              24667    0
 523 t    "Alias"        524                    1023
 524 t    LiteralStrin   525                    1023
 525 sem                -531              24736    0
 526 opt                 531     0   523        1023
 527 t    "("            529                    1024
 528 nt   FormalParame  -530              24806 1024
 529 opt                 530     0   528        1024
 530 t    ")"           -534                    1024
 531 opt                 534     0   527        1024
 532 t    "As"           533                    1025
 533 nt   TypeName      -535              24836 1025
 534 opt                 535     0   532        1025
 535 nt   EndOfStmt      536                    1026
 536 sem                  -0              24874    0
 537 alt                  -0   538   500        1007
 538 alt                  -0     0   517        1020
 539 alt                  -0   557   496         996
 540 t    "Event"        541                    1036
 541 sem                 542              25221    0
 542 nt   Identifier     543                    1044
 543 sem                 551              25433    0
 544 t    "As"           545                    1046
 545 nt   TypeName      -554              25470 1046
 546 t    "("            548                    1048
 547 nt   FormalParame  -549              25516 1048
 548 opt                 549     0   547        1048
 549 t    ")"           -554                    1048
 550 opt                -554     0   546        1048
 551 alt                 554   552   544        1046
 552 alt                -554     0   550        1048
 553 nt   ImplementsCl  -555              25552 1050
 554 opt                 555     0   553        1050
 555 sem                 556              25584    0
 556 nt   EndOfStmt       -0                    1060
 557 alt                  -0   568   540        1036
 558 sem                 559              25942    0
 559 nt   IdentifierFo   560                    1066
 560 sem                 561              26086    0
 561 sem                 562              26115    0
 562 nt   VariableDecl   565              26218 1069
 563 t    ","            564                    1070
 564 nt   VariableDecl  -565              26272 1070
 565 iter                566     0   563        1070
 566 nt   EndOfStmt      567                    1071
 567 sem                  -0              26315    0
 568 alt                  -0   580   558           0
 569 sem                 570              26424    0
 570 t    "Const"        571                    1079
 571 sem                 572              26468    0
 572 sem                 573              26516    0
 573 nt   ConstantDecl   576              26760 1085
 574 t    ","            575                    1086
 575 nt   ConstantDecl  -576              26808 1086
 576 iter                577     0   574        1086
 577 sem                 578              26839    0
 578 nt   EndOfStmt      579                    1091
 579 sem                  -0              26929    0
 580 alt                  -0   617   569           0
 581 t    "Property"     582                    1097
 582 sem                 583              27017    0
 583 nt   Identifier     584                    1105
 584 sem                 589              27253    0
 585 t    "("            587                    1106
 586 nt   FormalParame  -588              27315 1106
 587 opt                 588     0   586        1106
 588 t    ")"           -600                    1106
 589 opt                 600     0   585        1106
 590 t    "As"           593                    1108
 591 nt   AttributeSec   592              27362 1109
 592 sem                -593              27408    0
 593 iter                598     0   591        1108
 594 rslv                595  1118
 595 nt   ObjectCreate   596              27639 1118
 596 sem                -603              27668    0
 597 nt   TypeName      -603              27900 1127
 598 alt                -603   599   594        1118
 599 alt                -603     0   597        1127
 600 opt                 603     0   590        1107
 601 t    "="            602                    1130
 602 nt   Expr          -605              27932 1130
 603 opt                 605     0   601        1130
 604 nt   ImplementsCl  -606              27972 1131
 605 opt                 606     0   604        1131
 606 nt   EndOfStmt      615                    1132
 607 rslv                608  1135
 608 sem                  -0              28114    0
 609 sem                 610              28532    0
 610 nt   AccessorDecl   611              28967 1159
 611 t    "End"          612                    1160
 612 t    "Property"     613                    1160
 613 nt   EndOfStmt      614                    1161
 614 sem                  -0              29041    0
 615 alt                  -0   616   607        1135
 616 alt                  -0     0   609           0
 617 alt                  -0   636   581        1097
 618 t    "Custom"       619                    1170
 619 sem                 620              29216    0
 620 t    "Event"        621                    1170
 621 sem                 622              29267    0
 622 nt   Identifier     623                    1179
 623 sem                 624              29607    0
 624 t    "As"           625                    1180
 625 nt   TypeName       627              29658 1180
 626 nt   ImplementsCl  -628              29689 1181
 627 opt                 628     0   626        1181
 628 nt   EndOfStmt      631                    1182
 629 nt   EventAccesso   630              29757 1184
 630 sem                -631              29797    0
 631 iter                632     0   629        1183
 632 t    "End"          633                    1200
 633 t    "Event"        634                    1200
 634 nt   EndOfStmt      635                    1200
 635 sem                  -0              30286    0
 636 alt                  -0   670   618        1170
 637 sem                 644              31045    0
 638 t    "Widening"     639                    1229
 639 sem                -645              31122    0
 640 t    "Narrowing"    641                    1230
 641 sem                -645              31189    0
 642 alt                -645   643   638        1229
 643 alt                -645     0   640        1230
 644 opt                 645     0   642        1229
 645 t    "Operator"     646                    1231
 646 sem                 647              31258    0
 647 nt   Overloadable   648              31679 1242
 648 t    "("            649                    1243
 649 nt   FormalParame   650              31721 1244
 650 sem                 654              31737    0
 651 t    ","            652                    1247
 652 nt   FormalParame   653              31809 1247
 653 sem                -655              31826    0
 654 opt                 655     0   651        1246
 655 t    ")"            656                    1250
 656 sem                 663              31886    0
 657 t    "As"           660                    1252
 658 nt   AttributeSec   659              31950 1252
 659 sem                -660              31970    0
 660 iter                661     0   658        1252
 661 nt   TypeName       662              32091 1257
 662 sem                -664              32110    0
 663 opt                 664     0   657        1252
 664 t    EOL            665                    1258
 665 nt   Block          666              32153 1259
 666 t    "End"          667                    1259
 667 t    "Operator"     668                    1259
 668 nt   EndOfStmt      669                    1259
 669 sem                  -0              32198    0
 670 alt                  -0     0   637           0
 671 t    "+"            672                    1281
 672 sem                  -0              32869    0
 673 t    "-"            674                    1283
 674 sem                  -0              32932    0
 675 alt                   0   676   671        1281
 676 alt                  -0   679   673        1283
 677 t    "*"            678                    1285
 678 sem                  -0              33000    0
 679 alt                  -0   682   677        1285
 680 t    "/"            681                    1287
 681 sem                  -0              33069    0
 682 alt                  -0   685   680        1287
 683 t    "\\"           684                    1289
 684 sem                  -0              33136    0
 685 alt                  -0   688   683        1289
 686 t    "&"            687                    1291
 687 sem                  -0              33210    0
 688 alt                  -0   691   686        1291
 689 t    "Like"         690                    1293
 690 sem                  -0              33279    0
 691 alt                  -0   694   689        1293
 692 t    "Mod"          693                    1295
 693 sem                  -0              33345    0
 694 alt                  -0   697   692        1295
 695 t    "And"          696                    1297
 696 sem                  -0              33414    0
 697 alt                  -0   700   695        1297
 698 t    "Or"           699                    1299
 699 sem                  -0              33484    0
 700 alt                  -0   703   698        1299
 701 t    "Xor"          702                    1301
 702 sem                  -0              33554    0
 703 alt                  -0   706   701        1301
 704 t    "^"            705                    1303
 705 sem                  -0              33625    0
 706 alt                  -0   709   704        1303
 707 t    "<<"           708                    1305
 708 sem                  -0              33690    0
 709 alt                  -0   712   707        1305
 710 t    ">>"           711                    1307
 711 sem                  -0              33759    0
 712 alt                  -0   715   710        1307
 713 t    "="            714                    1309
 714 sem                  -0              33829    0
 715 alt                  -0   718   713        1309
 716 t    "<>"           717                    1311
 717 sem                  -0              33897    0
 718 alt                  -0   721   716        1311
 719 t    "<"            720                    1313
 720 sem                  -0              33967    0
 721 alt                  -0   724   719        1313
 722 t    "<="           723                    1315
 723 sem                  -0              34035    0
 724 alt                  -0   727   722        1315
 725 t    ">"            726                    1317
 726 sem                  -0              34110    0
 727 alt                  -0   730   725        1317
 728 t    ">="           729                    1319
 729 sem                  -0              34181    0
 730 alt                  -0   733   728        1319
 731 t    "CType"        732                    1321
 732 sem                  -0              34262    0
 733 alt                  -0   736   731        1321
 734 nt   Identifier     735                    1323
 735 sem                  -0              34337    0
 736 alt                  -0     0   734        1323
 737 nt   AttributeSec   738              35127 1344
 738 sem                -739              35143    0
 739 iter                764     0   737        1344
 740 t    "AddHandler"   745                    1346
 741 t    "("            743                    1346
 742 nt   FormalParame  -744              35222 1346
 743 opt                 744     0   742        1346
 744 t    ")"           -746                    1346
 745 opt                 746     0   741        1346
 746 t    EOL            747                    1346
 747 nt   Block          748              35247 1347
 748 t    "End"          749                    1347
 749 t    "AddHandler"   750                    1347
 750 nt   EndOfStmt      751                    1347
 751 sem                  -0              35298    0
 752 t    "RemoveHandl   757                    1354
 753 t    "("            755                    1354
 754 nt   FormalParame  -756              35523 1354
 755 opt                 756     0   754        1354
 756 t    ")"           -758                    1354
 757 opt                 758     0   753        1354
 758 t    EOL            759                    1354
 759 nt   Block          760              35548 1355
 760 t    "End"          761                    1355
 761 t    "RemoveHandl   762                    1355
 762 nt   EndOfStmt      763                    1355
 763 sem                  -0              35602    0
 764 alt                   0   765   740        1346
 765 alt                  -0   778   752        1354
 766 t    "RaiseEvent"   771                    1362
 767 t    "("            769                    1362
 768 nt   FormalParame  -770              35827 1362
 769 opt                 770     0   768        1362
 770 t    ")"           -772                    1362
 771 opt                 772     0   767        1362
 772 t    EOL            773                    1362
 773 nt   Block          774              35852 1363
 774 t    "End"          775                    1363
 775 t    "RaiseEvent"   776                    1363
 776 nt   EndOfStmt      777                    1363
 777 sem                  -0              35903    0
 778 alt                  -0     0   766        1362
 779 nt   AttributeSec   780              36349 1380
 780 sem                -781              36365    0
 781 iter                796     0   779        1380
 782 nt   GetAccessorD   788              36418 1382
 783 sem                 786              36456    0
 784 nt   AttributeSec   785              36525 1385
 785 sem                -786              36541    0
 786 iter                787     0   784        1385
 787 nt   SetAccessorD    -0              36591 1386
 788 opt                  -0     0   783        1383
 789 nt   SetAccessorD   795              36646 1389
 790 sem                 793              36684    0
 791 nt   AttributeSec   792              36753 1392
 792 sem                -793              36769    0
 793 iter                794     0   791        1392
 794 nt   GetAccessorD    -0              36819 1393
 795 opt                  -0     0   790        1390
 796 alt                   0   797   782        1382
 797 alt                  -0     0   789        1389
 798 nt   PropertyAcce   799              37039 1402
 799 t    "Get"          800                    1403
 800 sem                 801              37059    0
 801 t    EOL            802                    1405
 802 nt   Block          803              37113 1406
 803 sem                 804              37128    0
 804 t    "End"          805                    1408
 805 t    "Get"          806                    1408
 806 sem                 807              37218    0
 807 sem                 808              37249    0
 808 nt   EndOfStmt        0                    1411
 809 nt   PropertyAcce   810              37623 1422
 810 t    "Set"          811                    1423
 811 sem                 816              37643    0
 812 t    "("            814                    1425
 813 nt   FormalParame  -815              37713 1425
 814 opt                 815     0   813        1425
 815 t    ")"           -817                    1425
 816 opt                 817     0   812        1425
 817 t    EOL            818                    1426
 818 nt   Block          819              37738 1427
 819 sem                 820              37756    0
 820 t    "End"          821                    1433
 821 t    "Set"          822                    1433
 822 sem                 823              37902    0
 823 nt   EndOfStmt        0                    1435
 824 nt   Identifier     825                    1446
 825 sem                 828              38222    0
 826 t    "As"           827                    1447
 827 nt   TypeName      -829              38279 1447
 828 opt                 829     0   826        1447
 829 t    "="            830                    1448
 830 nt   Expr           831              38302 1448
 831 sem                   0              38320    0
 832 nt   Identifier     833                    1460
 833 sem                 834              38576    0
 834 nt   VariableDecl     0              38640 1461
 835 rslv                836  1472
 836 nt   ArrayInitial  -840              38998 1472
 837 opt                 840     0   835        1472
 838 rslv                839  1473
 839 nt   ArrayNameMod  -853              39063 1473
 840 opt                 853     0   838        1473
 841 rslv                842  1475
 842 t    "As"           843                    1475
 843 nt   ObjectCreate   844              39134 1475
 844 sem                -855              39154    0
 845 t    "As"           846                    1484
 846 nt   TypeName       847              39365 1484
 847 sem                -849              39387    0
 848 opt                 849     0   845        1484
 849 sem                 852              39747    0
 850 t    "="            851                    1521
 851 nt   Expr          -855              40493 1521
 852 opt                -855     0   850        1521
 853 alt                 855   854   841        1475
 854 alt                -855     0   848        1484
 855 sem                   0              40517    0
 856 t    "("            857                    1536
 857 nt   Initializati   858              40856 1536
 858 t    ")"              0                    1536
 859 nt   Expr           863              41029 1545
 860 t    "To"           861                    1546
 861 sem                 862              41051    0
 862 nt   Expr          -864              41082 1547
 863 opt                 864     0   860        1546
 864 sem                 872              41101    0
 865 t    ","            866                    1550
 866 nt   Expr           870              41158 1551
 867 t    "To"           868                    1552
 868 sem                 869              41181    0
 869 nt   Expr          -871              41213 1553
 870 opt                 871     0   867        1552
 871 sem                -872              41234    0
 872 iter                  0     0   865        1550
 873 t    "{"            881                    1566
 874 nt   Expr           875              41553 1568
 875 sem                 880              41573    0
 876 rslv                877  1573
 877 t    ","            878                    1573
 878 nt   Expr           879              41681 1573
 879 sem                -880              41698    0
 880 iter               -882     0   876        1572
 881 opt                 882     0   874        1567
 882 t    "}"            883                    1577
 883 sem                   0              41787    0
 884 eps                  -0                       0
 885 t    "Ansi"         886                    1587
 886 sem                  -0              42013    0
 887 alt                   0   888   884           0
 888 alt                  -0   891   885        1587
 889 t    "Auto"         890                    1588
 890 sem                  -0              42071    0
 891 alt                  -0   894   889        1588
 892 t    "Unicode"      893                    1589
 893 sem                  -0              42132    0
 894 alt                  -0     0   892        1589
 895 t    "Handles"      896                    1598
 896 nt   EventMemberS   897              42346 1598
 897 sem                 901              42359    0
 898 t    ","            899                    1599
 899 nt   EventMemberS   900              42434 1599
 900 sem                -901              42448    0
 901 iter                  0     0   898        1599
 902 t    "Inherits"     903                    1608
 903 nt   TypeName       904              42659 1609
 904 sem                 908              42672    0
 905 t    ","            906                    1611
 906 nt   TypeName       907              42733 1612
 907 sem                -908              42746    0
 908 iter                909     0   905        1610
 909 nt   EndOfStmt        0                    1614
 910 t    "Implements"   911                    1623
 911 nt   TypeName       912              42994 1623
 912 sem                 916              43012    0
 913 t    ","            914                    1628
 914 nt   TypeName       915              43081 1628
 915 sem                -916              43097    0
 916 iter                917     0   913        1627
 917 nt   EndOfStmt        0                    1631
 918 t    "Implements"   919                    1641
 919 nt   NonArrayType   920              43409 1642
 920 sem                 921              43431    0
 921 sem                 926              43523    0
 922 t    ","            923                    1645
 923 nt   NonArrayType   924              43621 1646
 924 sem                 925              43644    0
 925 sem                -926              43737    0
 926 iter                  0     0   922        1645
 927 nt   Identifier    -933                    1655
 928 t    "MyBase"      -933                    1655
 929 alt                 933   930   927        1655
 930 alt                -933   932   928        1655
 931 t    "Me"          -933                    1655
 932 alt                -933     0   931        1655
 933 sem                 934              43923    0
 934 t    "."            935                    1657
 935 nt   IdentifierOr   936              43968 1658
 936 sem                   0              43988    0
 937 rslv                938  1666
 938 nt   QueryExpr     -944              44175 1667
 939 nt   LambdaExpr    -944              44201 1668
 940 alt                 944   941   937        1666
 941 alt                -944   943   939        1668
 942 nt   DisjunctionE  -944              44232 1669
 943 alt                -944     0   942        1669
 944 sem                   0              44254    0
 945 t    "="            946                    1681
 946 sem                  -0              44472    0
 947 t    "&="           948                    1682
 948 sem                  -0              44523    0
 949 alt                   0   950   945        1681
 950 alt                  -0   953   947        1682
 951 t    "+="           952                    1683
 952 sem                  -0              44580    0
 953 alt                  -0   956   951        1683
 954 t    "-="           955                    1684
 955 sem                  -0              44628    0
 956 alt                  -0   959   954        1684
 957 t    "*="           958                    1685
 958 sem                  -0              44681    0
 959 alt                  -0   962   957        1685
 960 t    "/="           961                    1686
 961 sem                  -0              44734    0
 962 alt                  -0   965   960        1686
 963 t    "\\="          964                    1687
 964 sem                  -0              44786    0
 965 alt                  -0   968   963        1687
 966 t    "^="           967                    1688
 967 sem                  -0              44844    0
 968 alt                  -0   971   966        1688
 969 t    "<<="          970                    1689
 970 sem                  -0              44895    0
 971 alt                  -0   974   969        1689
 972 t    ">>="          973                    1690
 973 sem                  -0              44950    0
 974 alt                  -0     0   972        1690
 975 nt   SimpleNonInv  1012              45141 1698
 976 t    "."            983                    1700
 977 t    XmlOpenTag     978                    1701
 978 nt   IdentifierOr   979              45202 1701
 979 t    XmlCloseTag    980                    1701
 980 sem                -990              45232    0
 981 nt   IdentifierOr   982              45341 1703
 982 sem                -990              45359    0
 983 alt                 990   984   977        1701
 984 alt                -990     0   981        1703
 985 rslv                986  1706
 986 t    "("            987                    1707
 987 t    "Of"           988                    1707
 988 nt   TypeArgument   989              45589 1707
 989 t    ")"          -1012                    1707
 990 opt               -1012     0   985        1706
 991 t    "!"            992                    1709
 992 nt   IdentifierOr   993              45678 1709
 993 sem               -1012              45691    0
 994 alt               -1012   995   976        1700
 995 alt               -1012  1009   991        1709
 996 sem                1000              45881    0
 997 t    ".@"         -1004                    1711
 998 t    "..."          999                    1711
 999 sem               -1004              45972    0
1000 alt                1004  1001   997        1711
1001 alt               -1004     0   998        1711
1002 t    XmlOpenTag    1003                    1711
1003 sem               -1005              46025    0
1004 opt                1005     0  1002        1711
1005 nt   IdentifierOr  1007              46068 1711
1006 t    XmlCloseTag  -1008                    1711
1007 opt                1008     0  1006        1711
1008 sem               -1012              46101    0
1009 alt               -1012  1011   996           0
1010 nt   InvocationEx -1012              46199 1713
1011 alt               -1012     0  1010        1713
1012 iter               1013     0   994        1699
1013 sem                   0              46223    0
1014 t    LiteralStrin  1015                    1736
1015 sem               -1166              46624    0
1016 t    LiteralChara  1017                    1737
1017 sem               -1166              46749    0
1018 alt               -1166  1019  1014        1736
1019 alt               -1166  1022  1016        1737
1020 t    LiteralSingl  1021                    1738
1021 sem               -1166              46872    0
1022 alt               -1166  1025  1020        1738
1023 t    LiteralDoubl  1024                    1739
1024 sem               -1166              46995    0
1025 alt               -1166  1028  1023        1739
1026 t    LiteralInteg  1027                    1740
1027 sem               -1166              47118    0
1028 alt               -1166  1031  1026        1740
1029 t    LiteralDate   1030                    1741
1030 sem               -1166              47239    0
1031 alt               -1166  1034  1029        1741
1032 t    LiteralDecim  1033                    1742
1033 sem               -1166              47362    0
1034 alt               -1166  1037  1032        1742
1035 t    "True"        1036                    1744
1036 sem               -1166              47552    0
1037 alt               -1166  1040  1035        1744
1038 t    "False"       1039                    1745
1039 sem               -1166              47628    0
1040 alt               -1166  1043  1038        1745
1041 t    "Nothing"     1042                    1746
1042 sem               -1166              47707    0
1043 alt               -1166  1048  1041        1746
1044 t    "("           1045                    1747
1045 nt   Expr          1046              47785 1747
1046 t    ")"           1047                    1747
1047 sem               -1166              47806    0
1048 alt               -1166  1057  1044        1747
1049 nt   Identifier    1050                    1748
1050 sem                1056              47890    0
1051 rslv               1052  1752
1052 t    "("           1053                    1753
1053 t    "Of"          1054                    1753
1054 nt   TypeArgument  1055              48121 1753
1055 t    ")"          -1166                    1753
1056 opt               -1166     0  1051        1752
1057 alt               -1166  1065  1049        1748
1058 sem                1062              48185    0
1059 nt   PrimitiveTyp -1064              48239 1756
1060 t    "Object"      1061                    1756
1061 sem               -1064              48262    0
1062 alt                1064  1063  1059        1756
1063 alt               -1064     0  1060        1756
1064 sem               -1166              48297    0
1065 alt               -1166  1068  1058           0
1066 t    "Me"          1067                    1758
1067 sem               -1166              48386    0
1068 alt               -1166  1079  1066        1758
1069 sem                1074              48436    0
1070 t    "MyBase"      1071                    1760
1071 sem               -1076              48493    0
1072 t    "MyClass"     1073                    1761
1073 sem               -1076              48625    0
1074 alt                1076  1075  1070        1760
1075 alt               -1076     0  1072        1761
1076 t    "."           1077                    1763
1077 nt   IdentifierOr  1078              48764 1763
1078 sem               -1166              48780    0
1079 alt               -1166  1086  1069           0
1080 t    "Global"      1081                    1764
1081 t    "."           1082                    1764
1082 nt   Identifier    1083                    1765
1083 sem                1084              48936    0
1084 sem                1085              49090    0
1085 sem               -1166              49122    0
1086 alt               -1166  1089  1080        1764
1087 nt   ObjectCreate  1088              49196 1769
1088 sem               -1166              49213    0
1089 alt               -1166  1092  1087        1769
1090 nt   CollectionIn  1091              49257 1770
1091 sem               -1166              49273    0
1092 alt               -1166  1108  1090        1770
1093 sem                1097              49321    0
1094 t    "DirectCast" -1102                    1773
1095 t    "CType"       1096                    1774
1096 sem               -1102              49397    0
1097 alt                1102  1098  1094        1773
1098 alt               -1102  1101  1095        1774
1099 t    "TryCast"     1100                    1775
1100 sem               -1102              49451    0
1101 alt               -1102     0  1099        1775
1102 t    "("           1103                    1777
1103 nt   Expr          1104              49502 1777
1104 t    ","           1105                    1777
1105 nt   TypeName      1106              49525 1777
1106 t    ")"           1107                    1777
1107 sem               -1166              49546    0
1108 alt               -1166  1114  1093           0
1109 nt   CastTarget    1110              49627 1779
1110 t    "("           1111                    1779
1111 nt   Expr          1112              49646 1779
1112 t    ")"           1113                    1779
1113 sem               -1166              49663    0
1114 alt               -1166  1118  1109        1779
1115 t    "AddressOf"   1116                    1780
1116 nt   Expr          1117              49771 1780
1117 sem               -1166              49786    0
1118 alt               -1166  1124  1115        1780
1119 t    "GetType"     1120                    1781
1120 t    "("           1121                    1781
1121 nt   GetTypeTypeN  1122              49876 1781
1122 t    ")"           1123                    1781
1123 sem               -1166              49893    0
1124 alt               -1166  1130  1119        1781
1125 t    "TypeOf"      1126                    1782
1126 nt   SimpleExpr    1127              49970 1782
1127 t    "Is"          1128                    1782
1128 nt   TypeName      1129              49994 1782
1129 sem               -1166              50007    0
1130 alt               -1166  1132  1125        1782
1131 nt   ConditionalE -1166              50095 1783
1132 alt               -1166  1134  1131        1783
1133 nt   XmlLiteralEx -1166              50132 1784
1134 alt               -1166     0  1133        1784
1135 t    "."           1142                    1789
1136 t    XmlOpenTag    1137                    1790
1137 nt   IdentifierOr  1138              50253 1790
1138 t    XmlCloseTag   1139                    1790
1139 sem               -1166              50283    0
1140 nt   IdentifierOr  1141              50454 1792
1141 sem               -1166              50472    0
1142 alt               -1166  1143  1136        1790
1143 alt               -1166     0  1140        1792
1144 t    "!"           1145                    1795
1145 nt   IdentifierOr  1146              50625 1795
1146 sem               -1166              50638    0
1147 alt               -1166  1148  1135        1789
1148 alt               -1166  1163  1144        1795
1149 sem                1154              50828    0
1150 t    "..."         1151                    1797
1151 sem               -1158              50920    0
1152 t    ".@"          1153                    1797
1153 sem               -1158              50969    0
1154 alt                1158  1155  1150        1797
1155 alt               -1158     0  1152        1797
1156 t    XmlOpenTag    1157                    1798
1157 sem               -1159              51031    0
1158 opt                1159     0  1156        1798
1159 nt   IdentifierOr  1161              51080 1798
1160 t    XmlCloseTag  -1162                    1798
1161 opt                1162     0  1160        1798
1162 sem               -1166              51114    0
1163 alt               -1166     0  1149           0
1164 alt                1166  1165  1018        1736
1165 alt               -1166     0  1147        1789
1166 sem                   0              51216    0
1167 nt   XmlContentEx  1169              51511 1818
1168 nt   XmlContentEx -1169              51541 1818
1169 iter               1174     0  1168        1818
1170 nt   XmlElement    1171              51563 1818
1171 sem                1173              51589    0
1172 nt   XmlContentEx -1173              51645 1818
1173 iter              -1181     0  1172        1818
1174 opt               -1181     0  1170        1818
1175 nt   XmlElement    1176              51674 1820
1176 sem                1178              51700    0
1177 nt   XmlContentEx -1178              51756 1820
1178 iter              -1181     0  1177        1820
1179 alt                1181  1180  1167        1818
1180 alt               -1181     0  1175        1820
1181 sem                   0              51777    0
1182 sem                1187              51971    0
1183 t    XmlContent    1184                    1834
1184 sem               -1195              52029    0
1185 t    XmlCData      1186                    1835
1186 sem               -1195              52110    0
1187 alt                1195  1188  1183        1834
1188 alt               -1195  1191  1185        1835
1189 t    XmlComment    1190                    1836
1190 sem               -1195              52194    0
1191 alt               -1195  1194  1189        1836
1192 t    XmlProcessin  1193                    1837
1193 sem               -1195              52294    0
1194 alt               -1195     0  1192        1837
1195 sem                   0              52387    0
1196 t    XmlContent    1197                    1850
1197 sem               -1216              52621    0
1198 t    XmlCData      1199                    1851
1199 sem               -1216              52705    0
1200 alt                1216  1201  1196        1850
1201 alt               -1216  1204  1198        1851
1202 t    XmlComment    1203                    1852
1203 sem               -1216              52792    0
1204 alt               -1216  1207  1202        1852
1205 t    XmlProcessin  1206                    1853
1206 sem               -1216              52895    0
1207 alt               -1216  1213  1205        1853
1208 t    XmlStartInli  1209                    1854
1209 sem                1210              53004    0
1210 nt   Expr          1211              53040 1854
1211 t    XmlEndInline  1212                    1854
1212 sem               -1216              53079    0
1213 alt               -1216  1215  1208        1854
1214 nt   XmlElement   -1216              53178 1855
1215 alt               -1216     0  1214        1855
1216 sem                   0              53203    0
1217 t    XmlOpenTag    1218                    1870
1218 sem                1226              53501    0
1219 t    XmlStartInli  1220                    1871
1220 sem                1221              53560    0
1221 nt   Expr          1222              53596 1871
1222 t    XmlEndInline  1223                    1871
1223 sem               -1229              53638    0
1224 nt   Identifier    1225                    1873
1225 sem               -1229              53750    0
1226 alt                1229  1227  1219        1871
1227 alt               -1229     0  1224        1873
1228 nt   XmlAttribute -1229              53790 1873
1229 iter               1242     0  1228        1873
1230 t    XmlCloseTagE  1231                    1874
1231 sem               -1244              53839    0
1232 t    XmlCloseTag   1236                    1874
1233 sem                1234              53893    0
1234 nt   XmlNestedCon  1235              53934 1874
1235 sem               -1236              53948    0
1236 iter               1237     0  1233        1874
1237 t    XmlOpenEndTa  1239                    1874
1238 any               -1239                    1874
1239 iter               1240     0  1238        1874
1240 t    XmlCloseTag   1241                    1874
1241 sem               -1244              54014    0
1242 alt                1244  1243  1230        1874
1243 alt               -1244     0  1232        1874
1244 sem                   0              54060    0
1245 nt   Identifier    1246                    1882
1246 sem                1247              54180    0
1247 t    "="           1248                    1882
1248 sem                1254              54214    0
1249 t    LiteralStrin  1250                    1884
1250 sem               -1256              54332    0
1251 t    XmlStartInli  1252                    1884
1252 nt   Expr          1253              54436 1884
1253 t    XmlEndInline -1256                    1884
1254 alt                1256  1255  1249        1884
1255 alt               -1256     0  1251        1884
1256 sem                  -0              54480    0
1257 t    XmlStartInli  1258                    1887
1258 sem                1259              54718    0
1259 nt   Expr          1260              54754 1887
1260 t    XmlEndInline  1261                    1887
1261 sem                  -0              54796    0
1262 alt                   0  1263  1245        1882
1263 alt                  -0     0  1257        1887
1264 t    "If"          1265                    1902
1265 t    "("           1266                    1902
1266 nt   Expr          1267              55369 1902
1267 t    ","           1268                    1902
1268 nt   Expr          1271              55393 1902
1269 t    ","           1270                    1902
1270 nt   Expr         -1272              55418 1902
1271 opt                1272     0  1269        1902
1272 t    ")"           1273                    1902
1273 sem                   0              55447    0
1274 t    "("           1275                    1928
1275 sem                1276              56121    0
1276 nt   ArgumentList  1277              56168 1929
1277 t    ")"           1278                    1930
1278 sem                1279              56198    0
1279 sem                   0              56261    0
1280 t    "CBool"       1281                    1942
1281 sem                  -0              56421    0
1282 t    "CByte"       1283                    1943
1283 sem                  -0              56489    0
1284 alt                   0  1285  1280        1942
1285 alt                  -0  1288  1282        1943
1286 t    "CSByte"      1287                    1944
1287 sem                  -0              56555    0
1288 alt                  -0  1291  1286        1944
1289 t    "CChar"       1290                    1945
1290 sem                  -0              56621    0
1291 alt                  -0  1294  1289        1945
1292 t    "CDate"       1293                    1946
1293 sem                  -0              56686    0
1294 alt                  -0  1297  1292        1946
1295 t    "CDec"        1296                    1947
1296 sem                  -0              56754    0
1297 alt                  -0  1300  1295        1947
1298 t    "CDbl"        1299                    1948
1299 sem                  -0              56821    0
1300 alt                  -0  1303  1298        1948
1301 t    "CShort"      1302                    1949
1302 sem                  -0              56889    0
1303 alt                  -0  1306  1301        1949
1304 t    "CInt"        1305                    1950
1305 sem                  -0              56954    0
1306 alt                  -0  1309  1304        1950
1307 t    "CLng"        1308                    1951
1308 sem                  -0              57019    0
1309 alt                  -0  1312  1307        1951
1310 t    "CUShort"     1311                    1952
1311 sem                  -0              57087    0
1312 alt                  -0  1315  1310        1952
1313 t    "CUInt"       1314                    1953
1314 sem                  -0              57154    0
1315 alt                  -0  1318  1313        1953
1316 t    "CULng"       1317                    1954
1317 sem                  -0              57221    0
1318 alt                  -0  1321  1316        1954
1319 t    "CObj"        1320                    1955
1320 sem                  -0              57287    0
1321 alt                  -0  1324  1319        1955
1322 t    "CSng"        1323                    1956
1323 sem                  -0              57353    0
1324 alt                  -0  1327  1322        1956
1325 t    "CStr"        1326                    1957
1326 sem                  -0              57419    0
1327 alt                  -0     0  1325        1957
1328 nt   ConjunctionE  1340              57656 1966
1329 t    "Or"          1330                    1969
1330 sem               -1338              57696    0
1331 t    "OrElse"      1332                    1970
1332 sem               -1338              57752    0
1333 alt                1338  1334  1329        1969
1334 alt               -1338  1337  1331        1970
1335 t    "Xor"         1336                    1971
1336 sem               -1338              57808    0
1337 alt               -1338     0  1335        1971
1338 nt   ConjunctionE  1339              57872 1973
1339 sem               -1340              57886    0
1340 iter                  0     0  1333        1967
1341 nt   NotExpr       1350              58192 1983
1342 t    "And"         1343                    1986
1343 sem               -1348              58233    0
1344 t    "AndAlso"     1345                    1987
1345 sem               -1348              58291    0
1346 alt                1348  1347  1342        1986
1347 alt               -1348     0  1344        1987
1348 nt   NotExpr       1349              58346 1989
1349 sem               -1350              58360    0
1350 iter                  0     0  1346        1984
1351 t    "Not"         1352                    1995
1352 sem               -1353              58600    0
1353 iter               1354     0  1351        1995
1354 nt   ComparisonEx  1355              58651 1996
1355 sem                   0              58684    0
1356 nt   ShiftExpr     1392              58991 2008
1357 t    "<"           1358                    2011
1358 sem               -1390              59027    0
1359 t    ">"           1360                    2012
1360 sem               -1390              59078    0
1361 alt                1390  1362  1357        2011
1362 alt               -1390  1365  1359        2012
1363 t    "<="          1364                    2013
1364 sem               -1390              59132    0
1365 alt               -1390  1368  1363        2013
1366 t    ">="          1367                    2014
1367 sem               -1390              59190    0
1368 alt               -1390  1371  1366        2014
1369 t    "<>"          1370                    2015
1370 sem               -1390              59252    0
1371 alt               -1390  1374  1369        2015
1372 t    "="           1373                    2016
1373 sem               -1390              59306    0
1374 alt               -1390  1377  1372        2016
1375 t    "Like"        1376                    2017
1376 sem               -1390              59359    0
1377 alt               -1390  1380  1375        2017
1378 t    "Is"          1379                    2018
1379 sem               -1390              59406    0
1380 alt               -1390  1383  1378        2018
1381 t    "IsNot"       1382                    2019
1382 sem               -1390              59469    0
1383 alt               -1390     0  1381        2019
1384 nt   ShiftExpr     1385              59541 2022
1385 sem               -1392              59555    0
1386 sem                1387              59689    0
1387 t    "Not"         1388                    2024
1388 nt   ShiftExpr     1389              59755 2025
1389 sem               -1392              59769    0
1390 alt               -1392  1391  1384        2022
1391 alt               -1392     0  1386           0
1392 iter                  0     0  1361        2009
1393 nt   Concatenatio  1402              60205 2036
1394 t    "<<"          1395                    2039
1395 sem               -1400              60242    0
1396 t    ">>"          1397                    2040
1397 sem               -1400              60294    0
1398 alt                1400  1399  1394        2039
1399 alt               -1400     0  1396        2040
1400 nt   Concatenatio  1401              60359 2042
1401 sem               -1402              60373    0
1402 iter                  0     0  1398        2037
1403 nt   AdditiveExpr  1407              60633 2049
1404 t    "&"           1405                    2049
1405 nt   AdditiveExpr  1406              60665 2049
1406 sem               -1407              60679    0
1407 iter                  0     0  1404        2049
1408 nt   ModuloExpr    1417              61006 2058
1409 t    "+"           1410                    2061
1410 sem               -1415              61043    0
1411 t    "-"           1412                    2062
1412 sem               -1415              61088    0
1413 alt                1415  1414  1409        2061
1414 alt               -1415     0  1411        2062
1415 nt   ModuloExpr    1416              61144 2064
1416 sem               -1417              61158    0
1417 iter                  0     0  1413        2059
1418 nt   IntegerDivis  1422              61417 2071
1419 t    "Mod"         1420                    2071
1420 nt   IntegerDivis  1421              61458 2071
1421 sem               -1422              61472    0
1422 iter                  0     0  1419        2071
1423 nt   Multiplicati  1427              61760 2077
1424 t    "\\"          1425                    2077
1425 nt   Multiplicati  1426              61799 2077
1426 sem               -1427              61813    0
1427 iter                  0     0  1424        2077
1428 nt   UnaryExpr     1437              62152 2086
1429 t    "*"           1430                    2089
1430 sem               -1435              62187    0
1431 t    "/"           1432                    2090
1432 sem               -1435              62237    0
1433 alt                1435  1434  1429        2089
1434 alt               -1435     0  1431        2090
1435 nt   UnaryExpr     1436              62291 2092
1436 sem               -1437              62304    0
1437 iter                  0     0  1433        2087
1438 t    "+"           1439                    2103
1439 sem               -1447              62628    0
1440 t    "-"           1441                    2104
1441 sem               -1447              62689    0
1442 alt               -1447  1443  1438        2103
1443 alt               -1447  1446  1440        2104
1444 t    "*"           1445                    2105
1445 sem               -1447              62751    0
1446 alt               -1447     0  1444        2105
1447 iter               1448     0  1442        2103
1448 nt   Exponentiati  1449              62830 2107
1449 sem                   0              62848    0
1450 nt   SimpleExpr    1454              63143 2120
1451 t    "^"           1452                    2120
1452 nt   SimpleExpr    1453              63173 2120
1453 sem               -1454              63187    0
1454 iter                  0     0  1451        2120
1455 t    "New"         1469                    2133
1456 nt   NonArrayType  1468              63669 2134
1457 t    "("           1458                    2135
1458 nt   NormalOrReDi  1459              63720 2135
1459 t    ")"           1466                    2135
1460 rslv               1461  2136
1461 nt   ArrayTypeMod  1462              63841 2137
1462 nt   CollectionIn -1467              63884 2138
1463 nt   CollectionIn -1467              63929 2139
1464 alt               -1467  1465  1460        2136
1465 alt               -1467     0  1463        2139
1466 opt                1467     0  1464        2136
1467 sem               -1470              63959    0
1468 opt               -1470     0  1457        2135
1469 opt                1470     0  1456        2134
1470 sem                1496              64087    0
1471 sem                1472              64548    0
1472 t    "With"        1473                    2163
1473 sem                1474              64672    0
1474 t    "{"           1479                    2168
1475 nt   MemberInitia  1476              64863 2170
1476 sem               -1488              64896    0
1477 nt   Expr          1478              64973 2172
1478 sem               -1488              65004    0
1479 alt                1488  1480  1475        2170
1480 alt               -1488     0  1477        2172
1481 t    ","           1486                    2175
1482 nt   MemberInitia  1483              65117 2177
1483 sem               -1488              65151    0
1484 nt   Expr          1485              65229 2179
1485 sem               -1488              65261    0
1486 alt               -1488  1487  1482        2177
1487 alt               -1488     0  1484        2179
1488 iter               1489     0  1481        2175
1489 t    "}"           1490                    2183
1490 sem               -1497              65358    0
1491 t    "From"        1492                    2194
1492 nt   CollectionIn  1493              65590 2195
1493 sem               -1497              65619    0
1494 alt               -1497  1495  1471           0
1495 alt               -1497     0  1491        2194
1496 opt                1497     0  1494        2157
1497 sem                   0              65746    0
1498 nt   SubLambdaExp -1502              65960 2214
1499 nt   FunctionLamb -1502              66001 2215
1500 alt                1502  1501  1498        2214
1501 alt               -1502     0  1499        2215
1502 sem                   0              66020    0
1503 t    "Sub"         1504                    2228
1504 t    "("           1506                    2228
1505 nt   FormalParame -1507              66337 2228
1506 opt                1507     0  1505        2228
1507 t    ")"           1519                    2228
1508 nt   Expr          1509              66387 2231
1509 sem                  -0              66410    0
1510 nt   EmbeddedStat  1511              66532 2237
1511 sem                  -0              66559    0
1512 alt                  -0  1513  1508        2231
1513 alt                  -0     0  1510        2237
1514 t    EOL           1515                    2244
1515 nt   Block         1516              66666 2245
1516 t    "End"         1517                    2246
1517 t    "Sub"         1518                    2246
1518 sem                  -0              66706    0
1519 alt                   0  1520  1512        2231
1520 alt                  -0     0  1514        2244
1521 t    "Function"    1522                    2263
1522 t    "("           1524                    2263
1523 nt   FormalParame -1525              67069 2263
1524 opt                1525     0  1523        2263
1525 t    ")"           1529                    2263
1526 t    "As"          1527                    2264
1527 nt   TypeName      1528              67112 2264
1528 sem               -1541              67128    0
1529 opt                1541     0  1526        2264
1530 nt   Expr          1531              67187 2267
1531 sem                  -0              67210    0
1532 nt   EmbeddedStat  1533              67332 2273
1533 sem                  -0              67359    0
1534 alt                  -0  1535  1530        2267
1535 alt                  -0     0  1532        2273
1536 t    EOL           1537                    2280
1537 nt   Block         1538              67466 2281
1538 t    "End"         1539                    2282
1539 t    "Function"    1540                    2282
1540 sem                  -0              67511    0
1541 alt                   0  1542  1534        2267
1542 alt                  -0     0  1536        2280
1543 nt   FromOrAggreg  1545              67780 2296
1544 nt   QueryOperato -1545              67813 2297
1545 iter               1546     0  1544        2297
1546 sem                   0              67838    0
1547 nt   FromQueryOpe  1548              68099 2308
1548 sem                  -0              68123    0
1549 nt   AggregateQue  1550              68185 2310
1550 sem                  -0              68214    0
1551 alt                   0  1552  1547        2308
1552 alt                  -0     0  1549        2310
1553 nt   FromQueryOpe  1554              68683 2323
1554 sem                  -0              68707    0
1555 nt   AggregateQue  1556              68769 2325
1556 sem                  -0              68798    0
1557 alt                   0  1558  1553        2323
1558 alt                  -0  1560  1555        2325
1559 nt   SelectQueryO    -0              68864 2327
1560 alt                  -0  1562  1559        2327
1561 nt   DistinctQuer    -0              68905 2328
1562 alt                  -0  1564  1561        2328
1563 nt   WhereQueryOp    -0              68943 2329
1564 alt                  -0  1566  1563        2329
1565 nt   OrderByQuery    -0              68983 2330
1566 alt                  -0  1569  1565        2330
1567 nt   PartitionQue  1568              69025 2331
1568 sem                  -0              69053    0
1569 alt                  -0  1571  1567        2331
1570 nt   LetQueryOper    -0              69113 2333
1571 alt                  -0  1574  1570        2333
1572 nt   JoinQueryOpe  1573              69150 2334
1573 sem                  -0              69173    0
1574 alt                  -0  1578  1572        2334
1575 rslv               1576  2336
1576 nt   GroupJoinQue  1577              69293 2336
1577 sem                  -0              69321    0
1578 alt                  -0  1581  1575        2336
1579 nt   GroupByQuery  1580              69385 2338
1580 sem                  -0              69411    0
1581 alt                  -0     0  1579        2338
1582 t    "Order"       1583                    2348
1583 t    "By"          1584                    2348
1584 nt   OrderExpress  1585              69741 2348
1585 sem                   0              69764    0
1586 nt   OrderExpress  1587              70082 2361
1587 sem                1591              70101    0
1588 t    ","           1589                    2364
1589 nt   OrderExpress  1590              70156 2364
1590 sem               -1591              70176    0
1591 iter                  0     0  1588        2363
1592 nt   Expr          1593              70468 2376
1593 sem                1600              70491    0
1594 t    "Ascending"   1595                    2381
1595 sem               -1601              70552    0
1596 t    "Descending"  1597                    2382
1597 sem               -1601              70641    0
1598 alt               -1601  1599  1594        2381
1599 alt               -1601     0  1596        2382
1600 opt                1601     0  1598        2380
1601 sem                   0              70719    0
1602 t    "Group"       1603                    2392
1603 nt   ExpressionRa  1604              70997 2392
1604 t    "By"          1605                    2393
1605 nt   ExpressionRa  1606              71073 2393
1606 t    "Into"        1607                    2394
1607 nt   ExpressionRa  1608              71148 2394
1608 sem                   0              71185    0
1609 t    "Group"       1610                    2406
1610 nt   JoinQueryOpe  1611              71515 2406
1611 t    "Into"        1612                    2407
1612 nt   ExpressionRa  1613              71580 2407
1613 sem                   0              71619    0
1614 t    "From"        1615                    2419
1615 nt   CollectionRa  1616              71937 2419
1616 sem                   0              71967    0
1617 t    "Select"      1618                    2430
1618 nt   ExpressionRa  1619              72275 2430
1619 sem                   0              72307    0
1620 t    "Distinct"    1621                    2442
1621 sem                   0              72627    0
1622 t    "Where"       1623                    2455
1623 nt   Expr          1624              72963 2455
1624 sem                   0              72984    0
1625 t    "Take"        1626                    2471
1626 sem                1629              73357    0
1627 t    "While"       1628                    2472
1628 sem               -1637              73444    0
1629 opt               -1637     0  1627        2472
1630 t    "Skip"        1631                    2473
1631 sem                1634              73535    0
1632 t    "While"       1633                    2474
1633 sem               -1637              73625    0
1634 opt               -1637     0  1632        2474
1635 alt                1637  1636  1625        2471
1636 alt               -1637     0  1630        2473
1637 nt   Expr          1638              73720 2476
1638 sem                   0              73738    0
1639 t    "Aggregate"   1640                    2490
1640 nt   CollectionRa  1641              74182 2490
1641 sem                1643              74202    0
1642 nt   QueryOperato -1643              74261 2495
1643 iter               1644     0  1642        2494
1644 t    "Into"        1645                    2497
1645 nt   ExpressionRa  1646              74344 2497
1646 sem                   0              74383    0
1647 t    "Let"         1648                    2508
1648 nt   ExpressionRa  1649              74678 2508
1649 sem                   0              74707    0
1650 nt   ExpressionRa  1651              74966 2519
1651 sem                1655              74985    0
1652 t    ","           1653                    2521
1653 nt   ExpressionRa  1654              75056 2521
1654 sem               -1655              75073    0
1655 iter                  0     0  1652        2521
1656 rslv               1657  2532
1657 nt   Identifier    1658                    2532
1658 sem                1662              75398    0
1659 t    "As"          1660                    2535
1660 nt   TypeName      1661              75453 2535
1661 sem               -1663              75474    0
1662 opt                1663     0  1659        2534
1663 t    "="          -1665                    2538
1664 opt                1665     0  1656        2531
1665 nt   Expr          1666              75526 2540
1666 sem                   0              75543    0
1667 t    "Join"        1668                    2556
1668 nt   CollectionRa  1669              75985 2556
1669 sem                1672              76009    0
1670 nt   JoinQueryOpe  1671              76077 2559
1671 sem               -1673              76096    0
1672 opt                1673     0  1670        2558
1673 t    "On"          1674                    2562
1674 nt   JoinConditio  1675              76156 2563
1675 sem                1679              76176    0
1676 t    "And"         1677                    2566
1677 nt   JoinConditio  1678              76261 2566
1678 sem               -1679              76282    0
1679 iter               1680     0  1676        2565
1680 sem                   0              76352    0
1681 nt   CollectionRa  1682              76584 2577
1682 sem                1686              76614    0
1683 t    ","           1684                    2579
1684 nt   CollectionRa  1685              76701 2579
1685 sem               -1686              76729    0
1686 iter                  0     0  1683        2579
1687 nt   Identifier    1688                    2589
1688 sem                1692              77046    0
1689 t    "As"          1690                    2590
1690 nt   TypeName      1691              77101 2590
1691 sem               -1693              77118    0
1692 opt                1693     0  1689        2590
1693 t    "In"          1694                    2591
1694 nt   Expr          1695              77167 2591
1695 sem                   0              77187    0
1696 nt   Expr          1697              77509 2606
1697 t    "Equals"      1698                    2606
1698 nt   Expr          1699              77532 2606
1699 sem                   0              77549    0
1700 t    "Key"         1701                    2622
1701 sem               -1703              77937    0
1702 opt                1703     0  1700        2622
1703 t    "."           1704                    2623
1704 nt   IdentifierOr  1705              77982 2623
1705 t    "="           1706                    2623
1706 nt   Expr          1707              78001 2623
1707 sem                   0              78023    0
1708 nt   Argument     -1715              78346 2638
1709 opt                1715     0  1708        2638
1710 t    ","           1711                    2639
1711 sem                1713              78369    0
1712 nt   Argument     -1714              78439 2640
1713 opt                1714     0  1712        2640
1714 sem               -1715              78457    0
1715 iter               1716     0  1710        2639
1716 sem                   0              78511    0
1717 nt   Argument      1721              78894 2654
1718 t    "To"          1719                    2655
1719 sem                1720              78918    0
1720 nt   Expr         -1734              78973 2656
1721 opt               -1734     0  1718        2655
1722 opt                1734     0  1717        2654
1723 t    ","           1724                    2658
1724 sem                1725              79003    0
1725 sem                1726              79050    0
1726 sem                1732              79112    0
1727 nt   Argument      1731              79161 2662
1728 t    "To"          1729                    2663
1729 sem                1730              79186    0
1730 nt   Expr         -1733              79242 2664
1731 opt               -1733     0  1728        2663
1732 opt                1733     0  1727        2662
1733 sem               -1734              79265    0
1734 iter               1735     0  1723        2658
1735 sem                   0              79343    0
1736 rslv               1737  2679
1737 nt   Identifier    1738                    2679
1738 sem                1739              79621    0
1739 t    ":="          1740                    2679
1740 nt   Expr          1741              79649 2679
1741 sem                  -0              79667    0
1742 nt   Expr            -0              79802 2684
1743 alt                   0  1744  1736        2679
1744 alt                  -0     0  1742        2684
1745 nt   NonArrayType  1746              79964 2691
1746 nt   ArrayTypeMod  1747              80005 2692
1747 sem                   0              80023    0
1748 nt   NonArrayType  1749              80334 2707
1749 nt   ArrayTypeMod  1750              80374 2708
1750 sem                   0              80389    0
1751 t    "Global"      1752                    2723
1752 t    "."           1753                    2723
1753 sem               -1755              80673    0
1754 opt                1755     0  1751        2723
1755 nt   QualIdentAnd  1756              80724 2724
1756 sem                1761              80757    0
1757 t    "."           1758                    2726
1758 sem                1759              80801    0
1759 nt   QualIdentAnd  1760              80863 2727
1760 sem               -1761              80903    0
1761 iter                 -0     0  1757        2726
1762 t    "Object"      1763                    2731
1763 sem                1766              81027    0
1764 t    "?"           1765                    2733
1765 sem                  -0              81110    0
1766 opt                  -0     0  1764        2732
1767 alt                   0  1768  1754        2723
1768 alt                  -0  1774  1762        2731
1769 nt   PrimitiveTyp  1770              81357 2741
1770 sem                1773              81370    0
1771 t    "?"           1772                    2743
1772 sem                  -0              81441    0
1773 opt                  -0     0  1771        2742
1774 alt                  -0     0  1769        2741
1775 nt   Qualident     1776              81792 2755
1776 sem                1789              81807    0
1777 rslv               1778  2757
1778 t    "("           1779                    2758
1779 t    "Of"          1786                    2758
1780 rslv               1781  2759
1781 sem                1784              82025    0
1782 t    ","           1783                    2761
1783 sem               -1784              82095    0
1784 iter              -1788     0  1782        2761
1785 nt   TypeArgument -1788              82178 2762
1786 alt                1788  1787  1780        2759
1787 alt               -1788     0  1785        2762
1788 t    ")"             -0                    2764
1789 opt                   0     0  1777        2757
1790 nt   ArrayTypeMod     0              82337 2773
1791 rslv               1792  2783
1792 t    "("           1794                    2784
1793 nt   RankList     -1795              82523 2785
1794 opt                1795     0  1793        2785
1795 sem                1796              82541    0
1796 t    ")"          -1797                    2789
1797 iter               1798     0  1791        2783
1798 sem                   0              82589    0
1799 t    ","           1800                    2801
1800 sem               -1801              82723    0
1801 iter                  0     0  1799        2801
1802 nt   TypeName      1803              82851 2809
1803 sem                1807              82867    0
1804 t    ","           1805                    2811
1805 nt   TypeName      1806              82942 2812
1806 sem               -1807              82958    0
1807 iter                  0     0  1804        2810
1808 t    "<"           1809                    2817
1809 sem                1812              83054    0
1810 t    "Assembly"   -1814                    2818
1811 t    "Module"     -1814                    2818
1812 alt                1814  1813  1810        2818
1813 alt               -1814     0  1811        2818
1814 sem                1815              83122    0
1815 t    ":"           1816                    2823
1816 nt   Attribute     1817              83348 2823
1817 sem                1828              83366    0
1818 rslv               1825  2824
1819 t    ","           1822                    2824
1820 t    "Assembly"   -1824                    2824
1821 t    "Module"     -1824                    2824
1822 alt                1824  1823  1820        2824
1823 alt               -1824     0  1821        2824
1824 t    ":"          -1826                    2824
1825 opt                1826     0  1819        2824
1826 nt   Attribute     1827              83465 2824
1827 sem               -1828              83483    0
1828 iter               1830     0  1818        2824
1829 t    ","          -1831                    2825
1830 opt                1831     0  1829        2825
1831 t    ">"           1832                    2826
1832 nt   EndOfStmt     1833                    2827
1833 sem                   0              83552    0
1834 t    "Global"      1835                    2847
1835 t    "."          -1837                    2847
1836 opt                1837     0  1834        2847
1837 nt   Qualident     1839              84062 2848
1838 nt   AttributeArg -1840              84095 2849
1839 opt                1840     0  1838        2849
1840 sem                   0              84124    0
1841 t    "("           1868                    2862
1842 rslv               1843  2864
1843 sem                1851              84493    0
1844 rslv               1845  2867
1845 sem                1846              84569    0
1846 nt   IdentifierOr  1849              84615 2868
1847 t    ":="         -1852                    2869
1848 t    "="          -1852                    2869
1849 alt               -1852  1850  1847        2869
1850 alt               -1852     0  1848        2869
1851 opt                1852     0  1844        2866
1852 nt   Expr          1853              84656 2870
1853 sem                1867              84680    0
1854 t    ","           1863                    2878
1855 rslv               1856  2880
1856 sem                1857              84977    0
1857 nt   IdentifierOr  1860              85025 2881
1858 t    ":="         -1865                    2882
1859 t    "="          -1865                    2882
1860 alt               -1865  1861  1858        2882
1861 alt               -1865     0  1859        2882
1862 sem               -1865              85069    0
1863 alt                1865  1864  1855        2880
1864 alt               -1865     0  1862           0
1865 nt   Expr          1866              85154 2884
1866 sem               -1867              85168    0
1867 iter              -1869     0  1854        2877
1868 opt                1869     0  1842        2863
1869 t    ")"              0                    2891
1870 t    "<"           1882                    2902
1871 rslv               1876  2903
1872 t    "Event"       1873                    2904
1873 sem               -1881              85716    0
1874 t    "Return"      1875                    2905
1875 sem               -1881              85763    0
1876 alt                1881  1877  1872        2904
1877 alt               -1881  1880  1874        2905
1878 nt   Identifier    1879                    2906
1879 sem               -1881              85821    0
1880 alt               -1881     0  1878        2906
1881 t    ":"          -1883                    2916
1882 opt                1883     0  1871        2903
1883 nt   Attribute     1884              86222 2918
1884 sem                1889              86240    0
1885 rslv               1886  2919
1886 t    ","           1887                    2919
1887 nt   Attribute     1888              86309 2919
1888 sem               -1889              86327    0
1889 iter               1891     0  1885        2919
1890 t    ","          -1892                    2920
1891 opt                1892     0  1890        2920
1892 t    ">"           1893                    2921
1893 sem                   0              86385    0
1894 nt   FormalParame  1895              86722 2936
1895 sem                1899              86732    0
1896 t    ","           1897                    2937
1897 nt   FormalParame  1898              86795 2938
1898 sem               -1899              86805    0
1899 iter                  0     0  1896        2937
1900 nt   AttributeSec  1901              87241 2954
1901 sem               -1902              87257    0
1902 iter               1904     0  1900        2954
1903 nt   ParameterMod -1904              87309 2955
1904 iter               1905     0  1903        2955
1905 nt   Identifier    1906                    2956
1906 sem                1909              87332    0
1907 rslv               1908  2957
1908 nt   ArrayTypeMod -1912              87401 2957
1909 opt                1912     0  1907        2957
1910 t    "As"          1911                    2958
1911 nt   TypeName     -1913              87441 2958
1912 opt                1913     0  1910        2958
1913 sem                1916              87461    0
1914 t    "="           1915                    2970
1915 nt   Expr         -1917              87723 2970
1916 opt                1917     0  1914        2970
1917 sem                   0              87743    0
1918 sem                1928              88001    0
1919 rslv               1926  2990
1920 t    "End"         1921                    2992
1921 sem                1922              88273    0
1922 nt   EndOfStmt    -1928                    2998
1923 sem                1924              88441    0
1924 nt   Statement     1925                    3000
1925 nt   EndOfStmt    -1928                    3000
1926 alt               -1928  1927  1920        2992
1927 alt               -1928     0  1923           0
1928 iter               1929     0  1919        2989
1929 sem                   0              88513    0
1930 rslv               1931  3017
1931 nt   LabelName     1932              88762 3017
1932 sem                1933              88783    0
1933 t    ":"           1934                    3021
1934 nt   Statement    -1939                    3021
1935 nt   EmbeddedStat  1936              88866 3022
1936 sem               -1939              88881    0
1937 alt                1939  1938  1930        3017
1938 alt               -1939     0  1935        3022
1939 sem                   0              88912    0
1940 t    "Const"       1941                    3041
1941 sem               -1949              89300    0
1942 t    "Static"      1943                    3042
1943 sem               -1949              89356    0
1944 alt               -1949  1945  1940        3041
1945 alt               -1949  1948  1942        3042
1946 t    "Dim"         1947                    3043
1947 sem               -1949              89411    0
1948 alt               -1949     0  1946        3043
1949 iter               1950     0  1944        3040
1950 sem                1951              89443    0
1951 nt   VariableDecl  1954              89799 3057
1952 t    ","           1953                    3058
1953 nt   VariableDecl -1954              89862 3058
1954 iter               1955     0  1952        3058
1955 sem                   0              89908    0
1956 nt   ExitStatemen -2205              90219 3073
1957 nt   TryStatement -2205              90251 3074
1958 alt                2205  1959  1956        3073
1959 alt               -2205  1961  1957        3074
1960 nt   ContinueStat -2205              90288 3075
1961 alt               -2205  1963  1960        3075
1962 nt   ThrowStateme -2205              90322 3076
1963 alt               -2205  1965  1962        3076
1964 nt   ReturnStatem -2205              90357 3077
1965 alt               -2205  1973  1964        3077
1966 t    "SyncLock"    1967                    3079
1967 nt   Expr          1968              90405 3079
1968 nt   EndOfStmt     1969                    3079
1969 nt   Block         1970              90431 3079
1970 t    "End"         1971                    3080
1971 t    "SyncLock"    1972                    3080
1972 sem               -2205              90482    0
1973 alt               -2205  1983  1966        3079
1974 t    "RaiseEvent"  1975                    3082
1975 nt   Identifier    1976                    3082
1976 sem                1981              90587    0
1977 t    "("           1979                    3083
1978 nt   ArgumentList -1980              90627 3083
1979 opt                1980     0  1978        3083
1980 t    ")"          -1982                    3083
1981 opt                1982     0  1977        3083
1982 sem               -2205              90650    0
1983 alt               -2205  1985  1974        3082
1984 nt   WithStatemen -2205              90732 3088
1985 alt               -2205  1992  1984        3088
1986 t    "AddHandler"  1987                    3090
1987 sem                1988              90782    0
1988 nt   Expr          1989              90823 3091
1989 t    ","           1990                    3091
1990 nt   Expr          1991              90842 3091
1991 sem               -2205              90867    0
1992 alt               -2205  1999  1986        3090
1993 t    "RemoveHandl  1994                    3096
1994 sem                1995              90966    0
1995 nt   Expr          1996              91007 3097
1996 t    ","           1997                    3097
1997 nt   Expr          1998              91026 3097
1998 sem               -2205              91051    0
1999 alt               -2205  2007  1993        3096
2000 t    "While"       2001                    3102
2001 nt   Expr          2002              91147 3102
2002 nt   EndOfStmt     2003                    3102
2003 nt   Block         2004              91175 3103
2004 t    "End"         2005                    3103
2005 t    "While"       2006                    3103
2006 sem               -2205              91220    0
2007 alt               -2205  2025  2000        3102
2008 t    "Do"          2009                    3108
2009 sem                2023              91361    0
2010 nt   WhileOrUntil  2011              91436 3113
2011 nt   Expr          2012              91460 3113
2012 nt   EndOfStmt     2013                    3113
2013 nt   Block         2014              91489 3114
2014 t    "Loop"        2015                    3115
2015 sem               -2205              91532    0
2016 nt   EndOfStmt     2017                    3123
2017 nt   Block         2018              91837 3124
2018 t    "Loop"        2021                    3125
2019 nt   WhileOrUntil  2020              91884 3125
2020 nt   Expr         -2022              91908 3125
2021 opt                2022     0  2019        3125
2022 sem               -2205              91929    0
2023 alt               -2205  2024  2010        3113
2024 alt               -2205     0  2016        3123
2025 alt               -2205  2065  2008        3108
2026 t    "For"         2027                    3130
2027 sem                2063              92054    0
2028 t    "Each"        2029                    3138
2029 nt   LoopControlV  2030              92197 3138
2030 t    "In"          2031                    3139
2031 nt   Expr          2032              92243 3139
2032 nt   EndOfStmt     2033                    3139
2033 nt   Block         2034              92273 3140
2034 t    "Next"        2036                    3141
2035 nt   Expr         -2037              92313 3141
2036 opt                2037     0  2035        3141
2037 sem               -2205              92335    0
2038 sem                2043              92706    0
2039 rslv               2040  3161
2040 nt   LoopControlV -2045              92967 3162
2041 sem                2042              93012    0
2042 nt   SimpleExpr   -2045              93069 3165
2043 alt                2045  2044  2039        3161
2044 alt               -2045     0  2041           0
2045 t    "="           2046                    3167
2046 nt   Expr          2047              93104 3167
2047 t    "To"          2048                    3167
2048 nt   Expr          2051              93125 3167
2049 t    "Step"        2050                    3167
2050 nt   Expr         -2052              93148 3167
2051 opt                2052     0  2049        3167
2052 nt   EndOfStmt     2053                    3168
2053 nt   Block         2054              93179 3168
2054 t    "Next"        2061                    3169
2055 nt   Expr          2056              93226 3171
2056 sem                2060              93252    0
2057 t    ","           2058                    3176
2058 nt   Expr          2059              93352 3176
2059 sem               -2060              93369    0
2060 iter              -2062     0  2057        3176
2061 opt                2062     0  2055        3170
2062 sem               -2205              93420    0
2063 alt               -2205  2064  2028        3138
2064 alt               -2205     0  2038           0
2065 alt               -2205  2069  2026        3130
2066 t    "Error"       2067                    3192
2067 nt   Expr          2068              93759 3192
2068 sem               -2205              93776    0
2069 alt               -2205  2081  2066        3192
2070 t    "ReDim"       2071                    3194
2071 sem                2074              93848    0
2072 t    "Preserve"    2073                    3194
2073 sem               -2075              93892    0
2074 opt                2075     0  2072        3194
2075 nt   ReDimClause   2076              93930 3195
2076 sem                2080              93948    0
2077 t    ","           2078                    3201
2078 nt   ReDimClause   2079              94155 3201
2079 sem               -2080              94171    0
2080 iter              -2205     0  2077        3201
2081 alt               -2205  2090  2070        3194
2082 t    "Erase"       2083                    3205
2083 nt   Expr          2084              94297 3206
2084 sem                2088              94315    0
2085 t    ","           2086                    3211
2086 nt   Expr          2087              94470 3211
2087 sem               -2088              94483    0
2088 iter               2089     0  2085        3211
2089 sem               -2205              94573    0
2090 alt               -2205  2093  2082        3205
2091 t    "Stop"        2092                    3214
2092 sem               -2205              94632    0
2093 alt               -2205  2137  2091        3214
2094 rslv               2095  3216
2095 t    "If"          2096                    3217
2096 sem                2097              94724    0
2097 nt   Expr          2099              94771 3217
2098 t    "Then"       -2135                    3217
2099 opt                2135     0  2098        3217
2100 nt   EndOfStmt     2101                    3220
2101 nt   Block         2102              94849 3220
2102 sem                2118              94882    0
2103 rslv               2104  3228
2104 t    "Else"        2105                    3228
2105 sem                2106              95080    0
2106 t    "If"         -2111                    3228
2107 t    "ElseIf"      2108                    3229
2108 sem               -2111              95134    0
2109 alt                2111  2110  2103        3228
2110 alt               -2111     0  2107        3229
2111 sem                2112              95176    0
2112 nt   Expr          2114              95241 3232
2113 t    "Then"       -2115                    3232
2114 opt                2115     0  2113        3232
2115 nt   EndOfStmt     2116                    3232
2116 nt   Block         2117              95286 3233
2117 sem               -2118              95309    0
2118 iter               2124     0  2109        3226
2119 t    "Else"        2121                    3243
2120 nt   EndOfStmt    -2122                    3243
2121 opt                2122     0  2120        3243
2122 nt   Block         2123              95612 3244
2123 sem               -2125              95647    0
2124 opt                2125     0  2119        3242
2125 t    "End"         2126                    3248
2126 t    "If"          2127                    3248
2127 sem               -2205              95731    0
2128 sem                2129              95848    0
2129 nt   SingleLineSt  2133              95987 3258
2130 t    "Else"        2132                    3260
2131 nt   SingleLineSt -2134              96060 3261
2132 opt               -2134     0  2131        3261
2133 opt                2134     0  2130        3259
2134 sem               -2205              96101    0
2135 alt               -2205  2136  2100        3220
2136 alt               -2205     0  2128           0
2137 alt               -2205  2158  2094        3216
2138 t    "Select"      2140                    3266
2139 t    "Case"       -2141                    3266
2140 opt                2141     0  2139        3266
2141 nt   Expr          2142              96215 3266
2142 nt   EndOfStmt     2143                    3266
2143 sem                2154              96239    0
2144 sem                2145              96344    0
2145 t    "Case"        2146                    3272
2146 nt   CaseClauses   2149              96442 3272
2147 rslv               2148  3272
2148 t    ":"          -2150                    3272
2149 opt                2150     0  2147        3272
2150 nt   EndOfStmt     2151                    3272
2151 sem                2152              96517    0
2152 nt   Block         2153              96642 3277
2153 sem               -2154              96663    0
2154 iter               2155     0  2144        3270
2155 sem                2156              96808    0
2156 t    "End"         2157                    3287
2157 t    "Select"     -2205                    3287
2158 alt               -2205  2162  2138        3266
2159 sem                2160              96892    0
2160 nt   OnErrorState  2161              96956 3289
2161 sem               -2205              96981    0
2162 alt               -2205  2166  2159           0
2163 sem                2164              97021    0
2164 nt   GotoStatemen  2165              97076 3291
2165 sem               -2205              97098    0
2166 alt               -2205  2170  2163           0
2167 sem                2168              97135    0
2168 nt   ResumeStatem  2169              97196 3293
2169 sem               -2205              97220    0
2170 alt               -2205  2180  2167           0
2171 sem                2172              97341    0
2172 nt   SimpleExpr    2177              97612 3303
2173 nt   AssignmentOp  2174              97649 3305
2174 nt   Expr          2175              97662 3305
2175 sem               -2179              97681    0
2176 sem               -2179              97816    0
2177 alt                2179  2178  2173        3305
2178 alt               -2179     0  2176           0
2179 sem               -2205              98009    0
2180 alt               -2205  2184  2171           0
2181 t    "Call"        2182                    3324
2182 nt   SimpleExpr    2183              98325 3324
2183 sem               -2205              98338    0
2184 alt               -2205  2202  2181        3324
2185 t    "Using"       2186                    3325
2186 sem                2198              98402    0
2187 rslv               2188  3327
2188 sem                2189              98466    0
2189 nt   VariableDecl  2192              98584 3329
2190 t    ","           2191                    3330
2191 nt   VariableDecl -2192              98649 3331
2192 iter               2193     0  2190        3330
2193 nt   Block         2194              98695 3333
2194 sem               -2200              98718    0
2195 nt   Expr          2196              98794 3337
2196 nt   Block         2197              98814 3338
2197 sem               -2200              98832    0
2198 alt                2200  2199  2187        3327
2199 alt               -2200     0  2195        3337
2200 t    "End"         2201                    3341
2201 t    "Using"      -2205                    3341
2202 alt               -2205  2204  2185        3325
2203 nt   LocalDeclara -2205              98957 3342
2204 alt               -2205     0  2203        3342
2205 sem                   0              98981    0
2206 t    "Exit"        2207                    3353
2207 sem                2212              99162    0
2208 t    "Sub"         2209                    3354
2209 sem               -2232              99214    0
2210 t    "Function"    2211                    3355
2211 sem               -2232              99260    0
2212 alt                2232  2213  2208        3354
2213 alt               -2232  2216  2210        3355
2214 t    "Property"    2215                    3356
2215 sem               -2232              99311    0
2216 alt               -2232  2219  2214        3356
2217 t    "Do"          2218                    3357
2218 sem               -2232              99358    0
2219 alt               -2232  2222  2217        3357
2220 t    "For"         2221                    3358
2221 sem               -2232              99399    0
2222 alt               -2232  2225  2220        3358
2223 t    "Try"         2224                    3359
2224 sem               -2232              99441    0
2225 alt               -2232  2228  2223        3359
2226 t    "While"       2227                    3360
2227 sem               -2232              99485    0
2228 alt               -2232  2231  2226        3360
2229 t    "Select"      2230                    3361
2230 sem               -2232              99532    0
2231 alt               -2232     0  2229        3361
2232 sem                   0              99570    0
2233 t    "Continue"    2234                    3366
2234 sem                2244              99681    0
2235 t    "Do"          2236                    3367
2236 sem               -2245              99743    0
2237 t    "For"         2238                    3368
2238 sem               -2245              99791    0
2239 alt               -2245  2240  2235        3367
2240 alt               -2245  2243  2237        3368
2241 t    "While"       2242                    3369
2242 sem               -2245              99842    0
2243 alt               -2245     0  2241        3369
2244 opt                2245     0  2239        3367
2245 sem                   0              99887    0
2246 t    "Throw"       2248                    3376
2247 nt   Expr         -2249              100036 3376
2248 opt                2249     0  2247        3376
2249 sem                   0              100051    0
2250 t    "Return"      2252                    3382
2251 nt   Expr         -2253              100191 3382
2252 opt                2253     0  2251        3382
2253 sem                   0              100206    0
2254 t    "End"         2255                    3388
2255 sem               -2259              100361    0
2256 nt   EmbeddedStat -2259              100486 3389
2257 alt                2259  2258  2254        3388
2258 alt               -2259     0  2256        3389
2259 sem                2269              100516    0
2260 t    ":"           2262                    3391
2261 t    ":"          -2262                    3391
2262 iter               2266     0  2261        3391
2263 t    "End"         2264                    3392
2264 sem               -2268              100609    0
2265 nt   EmbeddedStat -2268              100735 3393
2266 alt                2268  2267  2263        3392
2267 alt               -2268     0  2265        3393
2268 sem               -2269              100766    0
2269 iter                  0     0  2260        3391
2270 nt   Qualident     2273              100984 3404
2271 rslv               2272  3405
2272 nt   ArrayTypeMod -2277              101030 3405
2273 opt                2277     0  2271        3405
2274 t    "As"          2275                    3406
2275 nt   TypeName      2276              101070 3406
2276 sem               -2278              101083    0
2277 opt                2278     0  2274        3406
2278 sem                   0              101188    0
2279 t    "On"          2280                    3426
2280 t    "Error"       2288                    3426
2281 rslv               2282  3428
2282 t    "GoTo"        2283                    3428
2283 t    "-"           2284                    3428
2284 t    LiteralInteg  2285                    3428
2285 sem               -2294              101703    0
2286 nt   GotoStatemen  2287              101926 3436
2287 sem               -2294              101955    0
2288 alt                2294  2289  2281        3428
2289 alt               -2294  2293  2286        3436
2290 t    "Resume"      2291                    3450
2291 t    "Next"        2292                    3450
2292 sem               -2294              102281    0
2293 alt               -2294     0  2290        3450
2294 sem                   0              102355    0
2295 t    "GoTo"        2296                    3470
2296 nt   LabelName     2297              102631 3470
2297 sem                   0              102650    0
2298 nt   Identifier    2299                    3484
2299 sem                  -0              102870    0
2300 t    LiteralInteg  2301                    3485
2301 sem                  -0              102909    0
2302 alt                   0  2303  2298        3484
2303 alt                  -0     0  2300        3485
2304 nt   SimpleNonInv  2305              103015 3491
2305 nt   ReDimClauseI     0              103047 3492
2306 t    "."           2307                    3498
2307 nt   IdentifierOr  2308              103256 3498
2308 sem               -2314              103269    0
2309 rslv               2310  3499
2310 nt   InvocationEx  2311              103482 3500
2311 sem               -2314              103502    0
2312 alt               -2314  2313  2306        3498
2313 alt               -2314     0  2309        3499
2314 iter               2315     0  2312        3498
2315 t    "("           2316                    3506
2316 nt   NormalOrReDi  2317              103620 3507
2317 t    ")"           2318                    3508
2318 sem                   0              103679    0
2319 t    "Resume"      2326                    3526
2320 t    "Next"        2321                    3527
2321 sem                  -0              104167    0
2322 nt   LabelName     2323              104230 3528
2323 sem                  -0              104245    0
2324 alt                  -0  2325  2320        3527
2325 alt                  -0     0  2322        3528
2326 opt                   0     0  2324        3527
2327 nt   CaseClause    2328              104460 3537
2328 sem                2332              104479    0
2329 t    ","           2330                    3538
2330 nt   CaseClause    2331              104558 3538
2331 sem               -2332              104577    0
2332 iter                  0     0  2329        3538
2333 t    "Else"        2334                    3549
2334 sem                  -0              104852    0
2335 t    "Is"         -2341                    3552
2336 opt                2341     0  2335        3552
2337 t    "<"           2338                    3554
2338 sem               -2355              104916    0
2339 t    ">"           2340                    3555
2340 sem               -2355              104965    0
2341 alt                2355  2342  2337        3554
2342 alt               -2355  2345  2339        3555
2343 t    "<="          2344                    3556
2344 sem               -2355              105018    0
2345 alt               -2355  2348  2343        3556
2346 t    ">="          2347                    3557
2347 sem               -2355              105075    0
2348 alt               -2355  2351  2346        3557
2349 t    "="           2350                    3558
2350 sem               -2355              105134    0
2351 alt               -2355  2354  2349        3558
2352 t    "<>"          2353                    3559
2353 sem               -2355              105184    0
2354 alt               -2355     0  2352        3559
2355 nt   Expr          2356              105234 3561
2356 sem                  -0              105252    0
2357 alt                   0  2358  2333        3549
2358 alt                  -0  2364  2336        3552
2359 nt   Expr          2362              105304 3565
2360 t    "To"          2361                    3565
2361 nt   Expr         -2363              105326 3565
2362 opt                2363     0  2360        3565
2363 sem                  -0              105347    0
2364 alt                  -0     0  2359        3565
2365 t    "While"       2366                    3574
2366 sem                  -0              105520    0
2367 t    "Until"       2368                    3575
2368 sem                  -0              105575    0
2369 alt                   0  2370  2365        3574
2370 alt                  -0     0  2367        3575
2371 t    "With"        2372                    3584
2372 sem                2373              105759    0
2373 nt   Expr          2374              105798 3585
2374 nt   EndOfStmt     2375                    3585
2375 sem                2376              105826    0
2376 nt   Block         2377              105920 3590
2377 sem                2378              105943    0
2378 t    "End"         2379                    3594
2379 t    "With"        2380                    3594
2380 sem                   0              106033    0
2381 t    "Try"         2382                    3607
2382 nt   EndOfStmt     2383                    3607
2383 nt   Block         2386              106329 3608
2384 nt   CatchClause   2385              106361 3609
2385 sem               -2386              106376    0
2386 iter               2390     0  2384        3609
2387 t    "Finally"     2388                    3610
2388 nt   EndOfStmt     2389                    3610
2389 nt   Block        -2391              106457 3610
2390 opt                2391     0  2387        3610
2391 t    "End"         2392                    3611
2392 t    "Try"         2393                    3611
2393 sem                   0              106495    0
2394 t    "Catch"       2400                    3624
2395 nt   Identifier    2396                    3625
2396 sem                2399              106792    0
2397 t    "As"          2398                    3625
2398 nt   TypeName     -2403              106824 3625
2399 opt               -2403     0  2397        3625
2400 opt                2403     0  2395        3625
2401 t    "When"        2402                    3626
2402 nt   Expr         -2404              106853 3626
2403 opt                2404     0  2401        3626
2404 nt   EndOfStmt     2405                    3627
2405 nt   Block         2406              106885 3628
2406 sem                   0              106905    0
2407 nt   Identifier    2408                    3639
2408 sem                2413              107092    0
2409 rslv               2410  3640
2410 t    "."           2411                    3640
2411 nt   IdentifierOr  2412              107178 3640
2412 sem               -2413              107191    0
2413 iter               2414     0  2409        3640
2414 sem                   0              107265    0
2415 nt   IdentifierFo    -0                    3647
2416 t    "Custom"        -0                    3648
2417 alt                   0  2418  2415        3647
2418 alt                  -0     0  2416        3648
2419 t    ident           -0                    3652
2420 t    "Aggregate"     -0                    3653
2421 alt                   0  2422  2419        3652
2422 alt                  -0  2424  2420        3653
2423 t    "Ansi"          -0                    3654
2424 alt                  -0  2426  2423        3654
2425 t    "Ascending"     -0                    3655
2426 alt                  -0  2428  2425        3655
2427 t    "Assembly"      -0                    3656
2428 alt                  -0  2430  2427        3656
2429 t    "Auto"          -0                    3657
2430 alt                  -0  2432  2429        3657
2431 t    "Binary"        -0                    3658
2432 alt                  -0  2434  2431        3658
2433 t    "By"            -0                    3659
2434 alt                  -0  2436  2433        3659
2435 t    "Compare"       -0                    3660
2436 alt                  -0  2438  2435        3660
2437 t    "Descending"    -0                    3661
2438 alt                  -0  2440  2437        3661
2439 t    "Distinct"      -0                    3662
2440 alt                  -0  2442  2439        3662
2441 t    "Equals"        -0                    3663
2442 alt                  -0  2444  2441        3663
2443 t    "Explicit"      -0                    3664
2444 alt                  -0  2446  2443        3664
2445 t    "From"          -0                    3665
2446 alt                  -0  2448  2445        3665
2447 t    "Group"         -0                    3666
2448 alt                  -0  2450  2447        3666
2449 t    "Infer"         -0                    3667
2450 alt                  -0  2452  2449        3667
2451 t    "Into"          -0                    3668
2452 alt                  -0  2454  2451        3668
2453 t    "Join"          -0                    3669
2454 alt                  -0  2456  2453        3669
2455 t    "Key"           -0                    3670
2456 alt                  -0  2458  2455        3670
2457 t    "Off"           -0                    3671
2458 alt                  -0  2460  2457        3671
2459 t    "Order"         -0                    3672
2460 alt                  -0  2462  2459        3672
2461 t    "Out"           -0                    3673
2462 alt                  -0  2464  2461        3673
2463 t    "Preserve"      -0                    3674
2464 alt                  -0  2466  2463        3674
2465 t    "Skip"          -0                    3675
2466 alt                  -0  2468  2465        3675
2467 t    "Take"          -0                    3676
2468 alt                  -0  2470  2467        3676
2469 t    "Text"          -0                    3677
2470 alt                  -0  2472  2469        3677
2471 t    "Unicode"       -0                    3678
2472 alt                  -0  2474  2471        3678
2473 t    "Until"         -0                    3679
2474 alt                  -0  2476  2473        3679
2475 t    "Where"         -0                    3680
2476 alt                  -0     0  2475        3680
2477 any                2478                    3685
2478 sem                   0              107913    0
2479 t    "Boolean"     2480                    3691
2480 sem                  -0              108030    0
2481 t    "Date"        2482                    3692
2482 sem                  -0              108073    0
2483 alt                   0  2484  2479        3691
2484 alt                  -0  2487  2481        3692
2485 t    "Char"        2486                    3693
2486 sem                  -0              108117    0
2487 alt                  -0  2490  2485        3693
2488 t    "String"      2489                    3694
2489 sem                  -0              108159    0
2490 alt                  -0  2493  2488        3694
2491 t    "Decimal"     2492                    3695
2492 sem                  -0              108204    0
2493 alt                  -0  2496  2491        3695
2494 t    "Byte"        2495                    3696
2495 sem                  -0              108247    0
2496 alt                  -0  2499  2494        3696
2497 t    "Short"       2498                    3697
2498 sem                  -0              108288    0
2499 alt                  -0  2502  2497        3697
2500 t    "Integer"     2501                    3698
2501 sem                  -0              108332    0
2502 alt                  -0  2505  2500        3698
2503 t    "Long"        2504                    3699
2504 sem                  -0              108373    0
2505 alt                  -0  2508  2503        3699
2506 t    "Single"      2507                    3700
2507 sem                  -0              108416    0
2508 alt                  -0  2511  2506        3700
2509 t    "Double"      2510                    3701
2510 sem                  -0              108460    0
2511 alt                  -0  2514  2509        3701
2512 t    "UInteger"    2513                    3702
2513 sem                  -0              108505    0
2514 alt                  -0  2517  2512        3702
2515 t    "ULong"       2516                    3703
2516 sem                  -0              108548    0
2517 alt                  -0  2520  2515        3703
2518 t    "UShort"      2519                    3704
2519 sem                  -0              108592    0
2520 alt                  -0  2523  2518        3704
2521 t    "SByte"       2522                    3705
2522 sem                  -0              108635    0
2523 alt                  -0     0  2521        3705
2524 t    "ByVal"       2525                    3709
2525 sem                  -0              108724    0
2526 t    "ByRef"       2527                    3710
2527 sem                  -0              108774    0
2528 alt                   0  2529  2524        3709
2529 alt                  -0  2532  2526        3710
2530 t    "Optional"    2531                    3711
2531 sem                  -0              108827    0
2532 alt                  -0  2535  2530        3711
2533 t    "ParamArray"  2534                    3712
2534 sem                  -0              108886    0
2535 alt                  -0     0  2533        3712
2536 t    "Public"      2537                    3716
2537 sem                  -0              108979    0
2538 t    "Protected"   2539                    3717
2539 sem                  -0              109040    0
2540 alt                   0  2541  2536        3716
2541 alt                  -0  2544  2538        3717
2542 t    "Friend"      2543                    3718
2543 sem                  -0              109102    0
2544 alt                  -0  2547  2542        3718
2545 t    "Private"     2546                    3719
2546 sem                  -0              109163    0
2547 alt                  -0  2550  2545        3719
2548 t    "Shared"      2549                    3720
2549 sem                  -0              109223    0
2550 alt                  -0  2553  2548        3720
2551 t    "Shadows"     2552                    3721
2552 sem                  -0              109282    0
2553 alt                  -0  2556  2551        3721
2554 t    "MustInherit  2555                    3722
2555 sem                  -0              109341    0
2556 alt                  -0  2559  2554        3722
2557 t    "NotInherita  2558                    3723
2558 sem                  -0              109407    0
2559 alt                  -0  2562  2557        3723
2560 t    "Partial"     2561                    3724
2561 sem                  -0              109466    0
2562 alt                  -0     0  2560        3724
2563 t    "MustInherit  2564                    3728
2564 sem                  -0              109567    0
2565 t    "Default"     2566                    3729
2566 sem                  -0              109626    0
2567 alt                   0  2568  2563        3728
2568 alt                  -0  2571  2565        3729
2569 t    "Friend"      2570                    3730
2570 sem                  -0              109683    0
2571 alt                  -0  2574  2569        3730
2572 t    "Shadows"     2573                    3731
2573 sem                  -0              109742    0
2574 alt                  -0  2577  2572        3731
2575 t    "Overrides"   2576                    3732
2576 sem                  -0              109797    0
2577 alt                  -0  2580  2575        3732
2578 t    "MustOverrid  2579                    3733
2579 sem                  -0              109859    0
2580 alt                  -0  2583  2578        3733
2581 t    "Private"     2582                    3734
2582 sem                  -0              109918    0
2583 alt                  -0  2586  2581        3734
2584 t    "Protected"   2585                    3735
2585 sem                  -0              109977    0
2586 alt                  -0  2589  2584        3735
2587 t    "Public"      2588                    3736
2588 sem                  -0              110036    0
2589 alt                  -0  2592  2587        3736
2590 t    "NotInherita  2591                    3737
2591 sem                  -0              110098    0
2592 alt                  -0  2595  2590        3737
2593 t    "NotOverrida  2594                    3738
2594 sem                  -0              110160    0
2595 alt                  -0  2598  2593        3738
2596 t    "Shared"      2597                    3739
2597 sem                  -0              110216    0
2598 alt                  -0  2601  2596        3739
2599 t    "Overridable  2600                    3740
2600 sem                  -0              110276    0
2601 alt                  -0  2604  2599        3740
2602 t    "Overloads"   2603                    3741
2603 sem                  -0              110335    0
2604 alt                  -0  2607  2602        3741
2605 t    "ReadOnly"    2606                    3742
2606 sem                  -0              110395    0
2607 alt                  -0  2610  2605        3742
2608 t    "WriteOnly"   2609                    3743
2609 sem                  -0              110455    0
2610 alt                  -0  2613  2608        3743
2611 t    "WithEvents"  2612                    3744
2612 sem                  -0              110517    0
2613 alt                  -0  2616  2611        3744
2614 t    "Dim"         2615                    3745
2615 sem                  -0              110575    0
2616 alt                  -0  2619  2614        3745
2617 t    "Partial"     2618                    3746
2618 sem                  -0              110629    0
2619 alt                  -0     0  2617        3746
2620 sem                2633              110730    0
2621 t    "Public"      2622                    3752
2622 sem               -2633              110775    0
2623 t    "Protected"   2624                    3753
2624 sem               -2633              110822    0
2625 alt               -2633  2626  2621        3752
2626 alt               -2633  2629  2623        3753
2627 t    "Friend"      2628                    3754
2628 sem               -2633              110872    0
2629 alt               -2633  2632  2627        3754
2630 t    "Private"     2631                    3755
2631 sem               -2633              110921    0
2632 alt               -2633     0  2630        3755
2633 iter                  0     0  2625        3751


First & follow symbols:
----------------------

VB
first:   EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Imports" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Option" 
         "Partial" "Private" "Protected" "Public" "Shadows" "Shared" 
         "Structure" 
follow:  EOF 

EndOfStmt
first:   EOL ":" 
follow:  EOF EOL ident LiteralString LiteralCharacter LiteralInteger 
         LiteralDouble LiteralSingle LiteralDecimal LiteralDate XmlOpenTag 
         XmlContent XmlComment XmlCData XmlProcessingInstruction ":" "." "..." 
         ".@" "!" "{" "(" "<" "AddHandler" "AddressOf" "Aggregate" "Ansi" 
         "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" 
         "Case" "Catch" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "Class" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" 
         "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" 
         "Date" "Decimal" "Declare" "Default" "Delegate" "Descending" "Dim" 
         "DirectCast" "Distinct" "Do" "Double" "Else" "ElseIf" "End" "Enum" 
         "Equals" "Erase" "Error" "Event" "Exit" "Explicit" "False" "Finally" 
         "For" "Friend" "From" "Function" "Get" "GetType" "Global" "GoTo" 
         "Group" "If" "Implements" "Imports" "Infer" "Inherits" "Integer" 
         "Interface" "Into" "Join" "Key" "Long" "Loop" "Me" "Module" 
         "MustInherit" "MustOverride" "MyBase" "MyClass" "Namespace" 
         "Narrowing" "New" "Next" "Nothing" "NotInheritable" "NotOverridable" 
         "Object" "Off" "On" "Operator" "Option" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "RaiseEvent" "ReadOnly" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Set" "Shadows" "Shared" "Short" 
         "Single" "Skip" "Static" "Stop" "String" "Structure" "Sub" "SyncLock" 
         "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" "Widening" 
         "With" "WithEvents" "WriteOnly" 

OptionStmt
first:   "Option" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Imports" 
         "Interface" "Module" "MustInherit" "Namespace" "NotInheritable" 
         "Option" "Partial" "Private" "Protected" "Public" "Shadows" "Shared" 
         "Structure" 

ImportsStmt
first:   "Imports" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Imports" 
         "Interface" "Module" "MustInherit" "Namespace" "NotInheritable" 
         "Partial" "Private" "Protected" "Public" "Shadows" "Shared" 
         "Structure" 

GlobalAttributeSection
first:   "<" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 

NamespaceMemberDecl
first:   "<" "Class" "Delegate" "Enum" "Friend" "Interface" "Module" 
         "MustInherit" "Namespace" "NotInheritable" "Partial" "Private" 
         "Protected" "Public" "Shadows" "Shared" "Structure" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "End" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 

OptionValue
first:   "Off" "On" 
follow:  EOL ":" 

ImportClause
first:   ident XmlOpenTag "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" 
         "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ":" "," 

Qualident
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

TypeName
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

Identifier
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlStartInlineVB XmlEndInlineVB XmlCloseTagEmptyElement XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" ":" "," "&" "/" "\\" 
         "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" 
         "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" ":=" 
         "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" "Ansi" "As" 
         "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" 
         "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Lib" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

NamespaceBody
first:   EOL ":" "<" "Class" "Delegate" "End" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 
follow:  EOF EOL ":" "<" "Class" "Delegate" "End" "Enum" "Friend" "Interface" 
         "Module" "MustInherit" "Namespace" "NotInheritable" "Partial" 
         "Private" "Protected" "Public" "Shadows" "Shared" "Structure" 

AttributeSection
first:   "<" 
follow:  ident "<" "AddHandler" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "ByRef" "By" "Byte" "ByVal" "Char" "Class" 
         "Compare" "Const" "Custom" "Date" "Decimal" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "Double" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Get" "Global" "Group" 
         "Infer" "Integer" "Interface" "Into" "Join" "Key" "Long" "Module" 
         "MustInherit" "MustOverride" "Narrowing" "New" "NotInheritable" 
         "NotOverridable" "Object" "Off" "Operator" "Optional" "Order" "Out" 
         "Overloads" "Overridable" "Overrides" "ParamArray" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "RaiseEvent" 
         "ReadOnly" "RemoveHandler" "SByte" "Set" "Shadows" "Shared" "Short" 
         "Single" "Skip" "String" "Structure" "Sub" "Take" "Text" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

TypeModifier
first:   "Friend" "MustInherit" "NotInheritable" "Partial" "Private" 
         "Protected" "Public" "Shadows" "Shared" 
follow:  "Class" "Delegate" "Enum" "Friend" "Interface" "Module" "MustInherit" 
         "NotInheritable" "Partial" "Private" "Protected" "Public" "Shadows" 
         "Shared" "Structure" 

NonModuleDeclaration
first:   "Class" "Delegate" "Enum" "Interface" "Module" "Structure" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

TypeParameterList
first:   "(" 
follow:  EOL ":" "(" "As" "Handles" "Implements" 

TypeParameter
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "In" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  "," ")" 

TypeParameterConstraints
first:   "As" 
follow:  "," ")" 

TypeParameterConstraint
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Class" "Compare" "Custom" "Date" 
         "Decimal" "Descending" "Distinct" "Double" "Equals" "Explicit" "From" 
         "Global" "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "New" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Structure" "Take" "Text" "UInteger" "ULong" 
         "Unicode" "Until" "UShort" "Where" 
follow:  "," "}" ")" 

ClassBaseType
first:   "Inherits" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Implements" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Narrowing" "NotInheritable" "NotOverridable" "Off" 
         "Operator" "Order" "Out" "Overloads" "Overridable" "Overrides" 
         "Partial" "Preserve" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" 
         "Unicode" "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

TypeImplementsClause
first:   "Implements" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Implements" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Narrowing" "NotInheritable" "NotOverridable" "Off" 
         "Operator" "Order" "Out" "Overloads" "Overridable" "Overrides" 
         "Partial" "Preserve" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" 
         "Unicode" "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

ClassBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "Enum" "Equals" "Event" 
         "Explicit" "Friend" "From" "Function" "Group" "Infer" "Interface" 
         "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" "Narrowing" 
         "NotInheritable" "NotOverridable" "Off" "Operator" "Order" "Out" 
         "Overloads" "Overridable" "Overrides" "Partial" "Preserve" "Private" 
         "Property" "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
         "WithEvents" "WriteOnly" 
follow:  "End" 

ModuleBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

StructureBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

NonArrayTypeName
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

EnumBody
first:   EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "End" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

InterfaceBase
first:   "Inherits" 
follow:  EOL ":" "<" "Class" "Default" "Delegate" "Dim" "End" "Enum" "Event" 
         "Friend" "Function" "Inherits" "Interface" "Module" "MustInherit" 
         "MustOverride" "NotInheritable" "NotOverridable" "Overloads" 
         "Overridable" "Overrides" "Partial" "Private" "Property" "Protected" 
         "Public" "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 

InterfaceBody
first:   EOL ":" "<" "Class" "Default" "Delegate" "Dim" "End" "Enum" "Event" 
         "Friend" "Function" "Interface" "Module" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 
follow:  EOF EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" 
         "Equals" "Event" "Explicit" "Friend" "From" "Function" "Group" 
         "Infer" "Interface" "Into" "Join" "Key" "Module" "MustInherit" 
         "MustOverride" "Namespace" "Narrowing" "NotInheritable" 
         "NotOverridable" "Off" "Operator" "Order" "Out" "Overloads" 
         "Overridable" "Overrides" "Partial" "Preserve" "Private" "Property" 
         "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" "Structure" 
         "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" "WithEvents" 
         "WriteOnly" 

FormalParameterList
first:   ident "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "ByRef" "By" "ByVal" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Optional" "Order" "Out" "ParamArray" "Preserve" "Skip" "Take" "Text" 
         "Unicode" "Until" "Where" 
follow:  ")" 

MemberModifier
first:   "Default" "Dim" "Friend" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "WithEvents" "WriteOnly" 
follow:  ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Class" "Compare" "Const" "Custom" "Declare" "Default" "Delegate" 
         "Descending" "Dim" "Distinct" "Enum" "Equals" "Event" "Explicit" 
         "Friend" "From" "Function" "Group" "Infer" "Interface" "Into" "Join" 
         "Key" "Module" "MustInherit" "MustOverride" "Narrowing" 
         "NotInheritable" "NotOverridable" "Off" "Operator" "Order" "Out" 
         "Overloads" "Overridable" "Overrides" "Partial" "Preserve" "Private" 
         "Property" "Protected" "Public" "ReadOnly" "Shadows" "Shared" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
         "WithEvents" "WriteOnly" 

ClassMemberDecl
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Class" "Compare" "Const" "Custom" "Declare" "Delegate" "Descending" 
         "Distinct" "Enum" "Equals" "Event" "Explicit" "From" "Function" 
         "Group" "Infer" "Interface" "Into" "Join" "Key" "Module" "Narrowing" 
         "Off" "Operator" "Order" "Out" "Preserve" "Property" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

StructureMemberDecl
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Class" "Compare" "Const" "Custom" "Declare" "Delegate" "Descending" 
         "Distinct" "Enum" "Equals" "Event" "Explicit" "From" "Function" 
         "Group" "Infer" "Interface" "Into" "Join" "Key" "Module" "Narrowing" 
         "Off" "Operator" "Order" "Out" "Preserve" "Property" "Skip" 
         "Structure" "Sub" "Take" "Text" "Unicode" "Until" "Where" "Widening" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Class" "Compare" "Const" "Custom" "Declare" "Default" 
         "Delegate" "Descending" "Dim" "Distinct" "End" "Enum" "Equals" 
         "Event" "Explicit" "Friend" "From" "Function" "Group" "Infer" 
         "Interface" "Into" "Join" "Key" "Module" "MustInherit" "MustOverride" 
         "Narrowing" "NotInheritable" "NotOverridable" "Off" "Operator" 
         "Order" "Out" "Overloads" "Overridable" "Overrides" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "ReadOnly" 
         "Shadows" "Shared" "Skip" "Structure" "Sub" "Take" "Text" "Unicode" 
         "Until" "Where" "Widening" "WithEvents" "WriteOnly" 

EnumMemberDecl
first:   ident "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "By" "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" 
         "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident ":" "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "End" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 

InterfaceMemberDecl
first:   "<" "Class" "Default" "Delegate" "Dim" "Enum" "Event" "Friend" 
         "Function" "Interface" "Module" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 
follow:  EOL ":" "<" "Class" "Default" "Delegate" "Dim" "End" "Enum" "Event" 
         "Friend" "Function" "Interface" "Module" "MustInherit" "MustOverride" 
         "NotInheritable" "NotOverridable" "Overloads" "Overridable" 
         "Overrides" "Partial" "Private" "Property" "Protected" "Public" 
         "ReadOnly" "Shadows" "Shared" "Structure" "Sub" "WithEvents" 
         "WriteOnly" 

Expr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ImplementsClause
first:   "Implements" 
follow:  EOL ":" 

HandlesClause
first:   "Handles" 
follow:  EOL ":" 

Block
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "End" "Equals" "Erase" 
         "Error" "Exit" "Explicit" "False" "For" "From" "GetType" "Global" 
         "GoTo" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  "Case" "Catch" "Else" "ElseIf" "End" "Finally" "Loop" "Next" 

Charset
first:   "Ansi" "Auto" "Unicode" 
follow:  "Function" "Sub" 

IdentifierForFieldDeclaration
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Descending" "Distinct" "Equals" "Explicit" "From" "Group" 
         "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" "Skip" 
         "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlStartInlineVB XmlEndInlineVB XmlCloseTagEmptyElement XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" ":" "," "&" "/" "\\" 
         "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" 
         "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" ":=" 
         "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" "Ansi" "As" 
         "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" 
         "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Lib" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

VariableDeclaratorPartAfterIdentifier
first:   "=" "(" "As" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

VariableDeclarator
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ConstantDeclarator
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ":" "," 

ObjectCreateExpression
first:   "New" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

AccessorDecls
first:   "<" "Friend" "Get" "Private" "Protected" "Public" "Set" 
follow:  "End" 

EventAccessorDeclaration
first:   "<" "AddHandler" "RaiseEvent" "RemoveHandler" 
follow:  "<" "AddHandler" "End" "RaiseEvent" "RemoveHandler" 

OverloadableOperator
first:   ident "=" "&" "/" "\\" "-" "+" "^" "*" ">" "<" "<>" ">=" "<=" "<<" 
         ">>" "Aggregate" "And" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "By" "Compare" "CType" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Like" "Mod" 
         "Off" "Or" "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" 
         "Until" "Where" "Xor" 
follow:  "(" 

FormalParameter
first:   ident "<" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "ByRef" "By" "ByVal" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Optional" "Order" "Out" "ParamArray" "Preserve" "Skip" "Take" "Text" 
         "Unicode" "Until" "Where" 
follow:  "," ")" 

GetAccessorDecl
first:   "Friend" "Get" "Private" "Protected" "Public" 
follow:  "<" "End" "Friend" "Private" "Protected" "Public" "Set" 

SetAccessorDecl
first:   "Friend" "Private" "Protected" "Public" "Set" 
follow:  "<" "End" "Friend" "Get" "Private" "Protected" "Public" 

PropertyAccessorAccessModifier
first:   "Friend" "Private" "Protected" "Public" 
follow:  "Get" "Set" 

ArrayInitializationModifier
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" 
         "Integer" "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" 
         "Mod" "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" 
         "Order" "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" 
         "RemoveHandler" "Resume" "Return" "SByte" "Select" "Short" "Single" 
         "Skip" "Static" "Step" "Stop" "String" "SyncLock" "Take" "Text" 
         "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" "With" 
         "Xor" 

ArrayNameModifier
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" 
         "Integer" "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" 
         "Mod" "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" 
         "Order" "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" 
         "RemoveHandler" "Resume" "Return" "SByte" "Select" "Short" "Single" 
         "Skip" "Static" "Step" "Stop" "String" "SyncLock" "Take" "Text" 
         "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" "With" 
         "Xor" 

InitializationRankList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  ")" 

CollectionInitializer
first:   "{" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

EventMemberSpecifier
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Me" "MyBase" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ":" "," 

IdentifierOrKeyword
first:   EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlStartInlineVB XmlEndInlineVB XmlCloseTagEmptyElement XmlOpenEndTag 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "?" "*" "{" "}" "(" ")" 
         ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" ":=" "AddHandler" "AddressOf" "Aggregate" "Alias" "And" 
         "AndAlso" "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "ByRef" "By" "Byte" "ByVal" "Call" "Case" "Catch" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "Class" "CLng" 
         "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" 
         "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Declare" 
         "Default" "Delegate" "Descending" "Dim" "DirectCast" "Distinct" "Do" 
         "Double" "Each" "Else" "ElseIf" "End" "EndIf" "Enum" "Equals" "Erase" 
         "Error" "Event" "Exit" "Explicit" "False" "Finally" "For" "Friend" 
         "From" "Function" "Get" "GetType" "Global" "GoSub" "GoTo" "Group" 
         "Handles" "If" "Implements" "Imports" "In" "Infer" "Inherits" 
         "Integer" "Interface" "Into" "Is" "IsNot" "Join" "Key" "Let" "Lib" 
         "Like" "Long" "Loop" "Me" "Mod" "Module" "MustInherit" "MustOverride" 
         "MyBase" "MyClass" "Namespace" "Narrowing" "New" "Next" "Not" 
         "Nothing" "NotInheritable" "NotOverridable" "Object" "Of" "Off" "On" 
         "Operator" "Option" "Optional" "Or" "Order" "OrElse" "Out" 
         "Overloads" "Overridable" "Overrides" "ParamArray" "Partial" 
         "Preserve" "Private" "Property" "Protected" "Public" "RaiseEvent" 
         "ReadOnly" "ReDim" "Rem" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Set" "Shadows" "Shared" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "Strict" "String" "Structure" "Sub" "SyncLock" "Take" 
         "Text" "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Using" "Variant" "Wend" "When" 
         "Where" "While" "Widening" "With" "WithEvents" "WriteOnly" "Xor" 
         "GetXmlNamespace" ??? 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlCloseTag 
         XmlEndInlineVB XmlContent XmlComment XmlCData 
         XmlProcessingInstruction "=" ":" "," "&" "/" "\\" "." "..." ".@" "!" 
         "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" 
         "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" ":=" "AddHandler" 
         "AddressOf" "Aggregate" "And" "AndAlso" "Ansi" "As" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" "Equals" 
         "Erase" "Error" "Exit" "Explicit" "False" "For" "From" "Function" 
         "GetType" "Global" "GoTo" "Group" "Handles" "If" "Implements" "In" 
         "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" 
         "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" "Nothing" "Object" 
         "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" "RaiseEvent" 
         "ReDim" "RemoveHandler" "Resume" "Return" "SByte" "Select" "Short" 
         "Single" "Skip" "Static" "Step" "Stop" "String" "Sub" "SyncLock" 
         "Take" "Text" "Then" "Throw" "To" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "When" "Where" 
         "While" "With" "Xor" 

QueryExpr
first:   "Aggregate" "From" 
follow:  -- empty set --

LambdaExpr
first:   "Function" "Sub" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

DisjunctionExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

AssignmentOperator
first:   "=" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" 
follow:  ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 

SimpleExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

SimpleNonInvocationExpression
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

TypeArgumentList
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  ")" 

InvocationExpression
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

PrimitiveTypeName
first:   "Boolean" "Byte" "Char" "Date" "Decimal" "Double" "Integer" "Long" 
         "SByte" "Short" "Single" "String" "UInteger" "ULong" "UShort" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "?" "*" "{" "}" "(" ")" 
         ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

CastTarget
first:   "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "CInt" "CLng" "CObj" 
         "CSByte" "CShort" "CSng" "CStr" "CUInt" "CULng" "CUShort" 
follow:  "(" 

GetTypeTypeName
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "Boolean" "By" "Byte" "Char" "Compare" "Custom" "Date" "Decimal" 
         "Descending" "Distinct" "Double" "Equals" "Explicit" "From" "Global" 
         "Group" "Infer" "Integer" "Into" "Join" "Key" "Long" "Object" "Off" 
         "Order" "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" 
         "Take" "Text" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  ")" 

ConditionalExpression
first:   "If" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

XmlLiteralExpression
first:   XmlOpenTag XmlContent XmlComment XmlCData XmlProcessingInstruction 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

XmlContentExpression
first:   XmlContent XmlComment XmlCData XmlProcessingInstruction 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

XmlElement
first:   XmlOpenTag 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlStartInlineVB 
         XmlEndInlineVB XmlOpenEndTag XmlContent XmlComment XmlCData 
         XmlProcessingInstruction "=" ":" "," "&" "/" "\\" "." "..." ".@" "!" 
         "-" "+" "^" "*" "{" "}" "(" ")" ">" "<" "<>" ">=" "<=" "<<" ">>" "+=" 
         "^=" "-=" "*=" "/=" "\\=" "<<=" ">>=" "&=" "AddHandler" "AddressOf" 
         "Aggregate" "And" "AndAlso" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "Call" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "Const" 
         "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" 
         "CUShort" "Custom" "Date" "Decimal" "Descending" "Dim" "DirectCast" 
         "Distinct" "Do" "Double" "Else" "End" "Equals" "Erase" "Error" "Exit" 
         "Explicit" "False" "For" "From" "GetType" "Global" "GoTo" "Group" 
         "If" "Implements" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" 
         "Where" "While" "With" "Xor" 

XmlNestedContent
first:   XmlOpenTag XmlStartInlineVB XmlContent XmlComment XmlCData 
         XmlProcessingInstruction 
follow:  XmlOpenTag XmlStartInlineVB XmlOpenEndTag XmlContent XmlComment 
         XmlCData XmlProcessingInstruction 

XmlAttribute
first:   ident XmlStartInlineVB "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "By" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 
follow:  ident XmlCloseTag XmlStartInlineVB XmlCloseTagEmptyElement 
         "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 

ArgumentList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "," "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" 
         "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" 
         "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" 
         "Custom" "Date" "Decimal" "Descending" "DirectCast" "Distinct" 
         "Double" "Equals" "Explicit" "False" "From" "Function" "GetType" 
         "Global" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" 
         "Me" "MyBase" "MyClass" "New" "Not" "Nothing" "Object" "Off" "Order" 
         "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" "Sub" 
         "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" 
         "Until" "UShort" "Where" 
follow:  ")" 

ConjunctionExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

NotExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ComparisonExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ShiftExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ConcatenationExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

AdditiveExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ModuloExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

IntegerDivisionExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

MultiplicativeExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

UnaryExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "GetType" "Global" "Group" "If" "Infer" 
         "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ExponentiationExpr
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

NormalOrReDimArgumentList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "," "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" 
         "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" 
         "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" 
         "Custom" "Date" "Decimal" "Descending" "DirectCast" "Distinct" 
         "Double" "Equals" "Explicit" "False" "From" "Function" "GetType" 
         "Global" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" 
         "Me" "MyBase" "MyClass" "New" "Not" "Nothing" "Object" "Off" "Order" 
         "Out" "Preserve" "SByte" "Short" "Single" "Skip" "String" "Sub" 
         "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" 
         "Until" "UShort" "Where" 
follow:  ")" 

ArrayTypeModifiers
first:   "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "As" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" 
         "Byte" "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" 
         "CInt" "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" 
         "Else" "End" "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" 
         "From" "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

MemberInitializer
first:   "." "Key" 
follow:  "," "}" 

SubLambdaExpression
first:   "Sub" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

FunctionLambdaExpression
first:   "Function" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

EmbeddedStatement
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "Equals" "Erase" "Error" 
         "Exit" "Explicit" "False" "For" "From" "GetType" "Global" "GoTo" 
         "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

FromOrAggregateQueryOperator
first:   "Aggregate" "From" 
follow:  "Aggregate" "Distinct" "From" "Group" "Join" "Let" "Order" "Select" 
         "Skip" "Take" "Where" 

QueryOperator
first:   "Aggregate" "Distinct" "From" "Group" "Join" "Let" "Order" "Select" 
         "Skip" "Take" "Where" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

FromQueryOperator
first:   "From" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

AggregateQueryOperator
first:   "Aggregate" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

SelectQueryOperator
first:   "Select" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

DistinctQueryOperator
first:   "Distinct" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

WhereQueryOperator
first:   "Where" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

OrderByQueryOperator
first:   "Order" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

PartitionQueryOperator
first:   "Skip" "Take" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

LetQueryOperator
first:   "Let" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

JoinQueryOperator
first:   "Join" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "On" 
         "Order" "Select" "Skip" "Take" "Where" 

GroupJoinQueryOperator
first:   "Group" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

GroupByQueryOperator
first:   "Group" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

OrderExpressionList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

OrderExpression
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  "," "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

ExpressionRangeVariableDeclarationList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  "Aggregate" "By" "Distinct" "From" "Group" "Into" "Join" "Let" 
         "Order" "Select" "Skip" "Take" "Where" 

CollectionRangeVariableDeclarationList
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "Order" 
         "Select" "Skip" "Take" "Where" 

CollectionRangeVariableDeclaration
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  "," "Aggregate" "Distinct" "From" "Group" "Into" "Join" "Let" "On" 
         "Order" "Select" "Skip" "Take" "Where" 

ExpressionRangeVariableDeclaration
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  "," "Aggregate" "By" "Distinct" "From" "Group" "Into" "Join" "Let" 
         "Order" "Select" "Skip" "Take" "Where" 

JoinCondition
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  "Aggregate" "And" "Distinct" "From" "Group" "Into" "Join" "Let" "On" 
         "Order" "Select" "Skip" "Take" "Where" 

Argument
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  "," ")" "To" 

QualIdentAndTypeArguments
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "Function" "GetType" "Global" "GoTo" "Group" "Handles" "If" 
         "Implements" "In" "Infer" "Integer" "Into" "Is" "IsNot" "Join" "Key" 
         "Let" "Like" "Long" "Me" "Mod" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "On" "Or" "Order" "OrElse" "Out" "Preserve" 
         "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" "SByte" 
         "Select" "Short" "Single" "Skip" "Static" "Step" "Stop" "String" 
         "Sub" "SyncLock" "Take" "Text" "Then" "Throw" "To" "True" "Try" 
         "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" 
         "Using" "When" "Where" "While" "With" "Xor" 

RankList
first:   "," 
follow:  ")" 

Attribute
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Global" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" 
         "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  ident "," ">" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Global" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 

AttributeArguments
first:   "(" 
follow:  ident "," ">" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Global" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Order" "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" 
         "Where" 

ParameterModifier
first:   "ByRef" "ByVal" "Optional" "ParamArray" 
follow:  ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" 
         "ByRef" "By" "ByVal" "Compare" "Custom" "Descending" "Distinct" 
         "Equals" "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" 
         "Optional" "Order" "Out" "ParamArray" "Preserve" "Skip" "Take" "Text" 
         "Unicode" "Until" "Where" 

Statement
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "Equals" "Erase" "Error" 
         "Exit" "Explicit" "False" "For" "From" "GetType" "Global" "GoTo" 
         "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  EOL ":" 

LabelName
first:   ident LiteralInteger "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "By" "Compare" "Custom" "Descending" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" 
         "Out" "Preserve" "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

LocalDeclarationStatement
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Const" "Custom" "Descending" "Dim" "Distinct" "Equals" 
         "Explicit" "From" "Group" "Infer" "Into" "Join" "Key" "Off" "Order" 
         "Out" "Preserve" "Skip" "Static" "Take" "Text" "Unicode" "Until" 
         "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ExitStatement
first:   "Exit" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

TryStatement
first:   "Try" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ContinueStatement
first:   "Continue" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ThrowStatement
first:   "Throw" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ReturnStatement
first:   "Return" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

WithStatement
first:   "With" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

WhileOrUntil
first:   "Until" "While" 
follow:  ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "-" 
         "+" "*" "{" "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" 
         "Auto" "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" 
         "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" 
         "CSng" "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" 
         "Decimal" "Descending" "DirectCast" "Distinct" "Double" "Equals" 
         "Explicit" "False" "From" "Function" "GetType" "Global" "Group" "If" 
         "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" 
         "New" "Not" "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" 
         "Short" "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 

LoopControlVariable
first:   ident "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" "Binary" "By" 
         "Compare" "Custom" "Descending" "Distinct" "Equals" "Explicit" "From" 
         "Group" "Infer" "Into" "Join" "Key" "Off" "Order" "Out" "Preserve" 
         "Skip" "Take" "Text" "Unicode" "Until" "Where" 
follow:  "=" "In" 

ReDimClause
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddressOf" "Aggregate" "Ansi" "Ascending" "Assembly" "Auto" 
         "Binary" "Boolean" "By" "Byte" "CBool" "CByte" "CChar" "CDate" "CDbl" 
         "CDec" "Char" "CInt" "CLng" "CObj" "Compare" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "DirectCast" "Distinct" "Double" "Equals" "Explicit" 
         "False" "From" "GetType" "Global" "Group" "If" "Infer" "Integer" 
         "Into" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Nothing" 
         "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" "Single" 
         "Skip" "String" "Take" "Text" "True" "TryCast" "TypeOf" "UInteger" 
         "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

SingleLineStatementList
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "." "..." ".@" "!" "{" 
         "(" "AddHandler" "AddressOf" "Aggregate" "Ansi" "Ascending" 
         "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" "Call" "CBool" 
         "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" "CObj" 
         "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" "CStr" "CType" 
         "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" 
         "Dim" "DirectCast" "Distinct" "Do" "Double" "End" "Equals" "Erase" 
         "Error" "Exit" "Explicit" "False" "For" "From" "GetType" "Global" 
         "GoTo" "Group" "If" "Infer" "Integer" "Into" "Join" "Key" "Long" "Me" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Order" "Out" 
         "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" "Resume" "Return" 
         "SByte" "Select" "Short" "Single" "Skip" "Static" "Stop" "String" 
         "SyncLock" "Take" "Text" "Throw" "True" "Try" "TryCast" "TypeOf" 
         "UInteger" "ULong" "Unicode" "Until" "UShort" "Using" "Where" "While" 
         "With" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

CaseClauses
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" ">" "<" "<>" ">=" "<=" "AddressOf" "Aggregate" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" 
         "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" "DirectCast" 
         "Distinct" "Double" "Else" "Equals" "Explicit" "False" "From" 
         "Function" "GetType" "Global" "Group" "If" "Infer" "Integer" "Into" 
         "Is" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ":" 

OnErrorStatement
first:   "On" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

GotoStatement
first:   "GoTo" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ResumeStatement
first:   "Resume" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

ReDimClauseInternal
first:   "." "(" 
follow:  EOL ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlEndInlineVB 
         XmlContent XmlComment XmlCData XmlProcessingInstruction "=" ":" "," 
         "&" "/" "\\" "." "..." ".@" "!" "-" "+" "^" "*" "{" "}" "(" ")" ">" 
         "<" "<>" ">=" "<=" "<<" ">>" "+=" "^=" "-=" "*=" "/=" "\\=" "<<=" 
         ">>=" "&=" "AddHandler" "AddressOf" "Aggregate" "And" "AndAlso" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "Call" "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" 
         "CLng" "CObj" "Compare" "Const" "Continue" "CSByte" "CShort" "CSng" 
         "CStr" "CType" "CUInt" "CULng" "CUShort" "Custom" "Date" "Decimal" 
         "Descending" "Dim" "DirectCast" "Distinct" "Do" "Double" "Else" "End" 
         "Equals" "Erase" "Error" "Exit" "Explicit" "False" "For" "From" 
         "GetType" "Global" "GoTo" "Group" "If" "Implements" "Infer" "Integer" 
         "Into" "Is" "IsNot" "Join" "Key" "Let" "Like" "Long" "Me" "Mod" 
         "MyBase" "MyClass" "New" "Nothing" "Object" "Off" "On" "Or" "Order" 
         "OrElse" "Out" "Preserve" "RaiseEvent" "ReDim" "RemoveHandler" 
         "Resume" "Return" "SByte" "Select" "Short" "Single" "Skip" "Static" 
         "Step" "Stop" "String" "SyncLock" "Take" "Text" "Then" "Throw" "To" 
         "True" "Try" "TryCast" "TypeOf" "UInteger" "ULong" "Unicode" "Until" 
         "UShort" "Using" "Where" "While" "With" "Xor" 

CaseClause
first:   ident LiteralString LiteralCharacter LiteralInteger LiteralDouble 
         LiteralSingle LiteralDecimal LiteralDate XmlOpenTag XmlContent 
         XmlComment XmlCData XmlProcessingInstruction "=" "." "..." ".@" "!" 
         "-" "+" "*" "{" "(" ">" "<" "<>" ">=" "<=" "AddressOf" "Aggregate" 
         "Ansi" "Ascending" "Assembly" "Auto" "Binary" "Boolean" "By" "Byte" 
         "CBool" "CByte" "CChar" "CDate" "CDbl" "CDec" "Char" "CInt" "CLng" 
         "CObj" "Compare" "CSByte" "CShort" "CSng" "CStr" "CType" "CUInt" 
         "CULng" "CUShort" "Custom" "Date" "Decimal" "Descending" "DirectCast" 
         "Distinct" "Double" "Else" "Equals" "Explicit" "False" "From" 
         "Function" "GetType" "Global" "Group" "If" "Infer" "Integer" "Into" 
         "Is" "Join" "Key" "Long" "Me" "MyBase" "MyClass" "New" "Not" 
         "Nothing" "Object" "Off" "Order" "Out" "Preserve" "SByte" "Short" 
         "Single" "Skip" "String" "Sub" "Take" "Text" "True" "TryCast" 
         "TypeOf" "UInteger" "ULong" "Unicode" "Until" "UShort" "Where" 
follow:  EOL ":" "," 

CatchClause
first:   "Catch" 
follow:  "Catch" "End" "Finally" 

